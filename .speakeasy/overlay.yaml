overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Typescript SDK Overlay
  version: 0.0.0
x-speakeasy-timeout: 60000
x-speakeasy-retries:
  strategy: backoff
  backoff:
    initialInterval: 2000 # 2 seconds
    maxInterval: 300000 # 300 seconds
    maxElapsedTime: 1800000 # 1800 seconds
    exponent: 2
  statusCodes:
    - 429 # Rate limit errors (both concurrency and volume-based)
    - 5XX # Server errors
  retryConnectionErrors: true
actions:
  # Override Speakeasy server-id for each server
  - target: $.servers[0]
    update:
      x-speakeasy-server-id: prod
  - target: $.servers[1]
    update:
      x-speakeasy-server-id: sandbox

  # Remove the original customer creation POST endpoint. Customer creation has been moved to path fragments.
  - target: $["paths"]["/customers"]["post"]
    remove: true

  # Add path fragments for separate customer creation methods
  - target: $["paths"]
    update:
      "/customers#unverified":
        post:
          x-speakeasy-name-override: createUnverified
          tags:
            - customers
          summary: Create an unverified customer
          description: Creates a new unverified customer with basic information. Unverified customers have limited transaction capabilities.
          operationId: createUnverifiedCustomer
          parameters: 
            - $ref: '#/components/parameters/Accept'
          requestBody:
            required: true
            description: Parameters for unverified customer to be created
            content:
              application/vnd.dwolla.v1.hal+json:
                schema:
                  $ref: '#/components/schemas/CreateUnverifiedCustomer'
          responses:
            '201':
              description: successful operation
              headers:
                Location:
                  $ref: '#/components/headers/Location'
            '400':
              description: Bad Request
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/BadRequestSchema'
            '403':
              description: forbidden
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/ForbiddenError'
      "/customers#receive-only":
        post:
          x-speakeasy-name-override: createReceiveOnly
          tags:
            - customers
          summary: Create a receive-only user
          description: Creates a new receive-only user who can only receive funds, not send them.
          operationId: createReceiveOnlyCustomer
          parameters: 
            - $ref: '#/components/parameters/Accept'
          requestBody:
            required: true
            description: Parameters for receive-only user to be created
            content:
              application/vnd.dwolla.v1.hal+json:
                schema:
                  $ref: '#/components/schemas/CreateReceiveOnlyUser'
          responses:
            '201':
              description: successful operation
              headers:
                Location:
                  $ref: '#/components/headers/Location'
            '400':
              description: Bad Request
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/BadRequestSchema'
            '403':
              description: forbidden
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/ForbiddenError'
      "/customers#verified-personal":
        post:
          x-speakeasy-name-override: createVerifiedPersonal
          tags:
            - customers
          summary: Create a verified personal customer
          description: Creates a new verified personal customer with full transaction capabilities.
          operationId: createVerifiedPersonalCustomer
          parameters: 
            - $ref: '#/components/parameters/Accept'
          requestBody:
            required: true
            description: Parameters for verified personal customer to be created
            content:
              application/vnd.dwolla.v1.hal+json:
                schema:
                  $ref: '#/components/schemas/CreateVerifiedPersonalCustomer'
          responses:
            '201':
              description: successful operation
              headers:
                Location:
                  $ref: '#/components/headers/Location'
            '400':
              description: Bad Request
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/BadRequestSchema'
            '403':
              description: forbidden
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/ForbiddenError'
      "/customers#verified-sole-prop":
        post:
          x-speakeasy-name-override: createVerifiedSoleProp
          tags:
            - customers
          summary: Create a verified sole proprietorship customer
          description: Creates a new verified sole proprietorship business customer.
          operationId: createVerifiedSolePropCustomer
          parameters: 
            - $ref: '#/components/parameters/Accept'
          requestBody:
            required: true
            description: Parameters for verified sole proprietorship customer to be created
            content:
              application/vnd.dwolla.v1.hal+json:
                schema:
                  $ref: '#/components/schemas/CreateVerifiedSolePropCustomer'
          responses:
            '201':
              description: successful operation
              headers:
                Location:
                  $ref: '#/components/headers/Location'
            '400':
              description: Bad Request
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/BadRequestSchema'
            '403':
              description: forbidden
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/ForbiddenError'
      "/customers#verified-business":
        post:
          x-speakeasy-name-override: createVerifiedBusiness
          tags:
            - customers
          summary: Create a verified business customer
          description: Creates a new verified business customer with a US controller.
          operationId: createVerifiedBusinessCustomer
          parameters: 
            - $ref: '#/components/parameters/Accept'
          requestBody:
            required: true
            description: Parameters for verified business customer to be created
            content:
              application/vnd.dwolla.v1.hal+json:
                schema:
                  $ref: '#/components/schemas/CreateVerifiedBusinessCustomerWithController'
          responses:
            '201':
              description: successful operation
              headers:
                Location:
                  $ref: '#/components/headers/Location'
            '400':
              description: Bad Request
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/BadRequestSchema'
            '403':
              description: forbidden
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/ForbiddenError'
      "/customers#verified-business-international":
        post:
          x-speakeasy-name-override: createVerifiedBusinessInternational
          tags:
            - customers
          summary: Create a verified business customer with international controller
          description: Creates a new verified business customer with an international (non-US) controller.
          operationId: createVerifiedBusinessInternationalCustomer
          parameters: 
            - $ref: '#/components/parameters/Accept'
          requestBody:
            required: true
            description: Parameters for verified business customer with international controller to be created
            content:
              application/vnd.dwolla.v1.hal+json:
                schema:
                  $ref: '#/components/schemas/CreateVerifiedBusinessCustomerWithInternationalController'
          responses:
            '201':
              description: successful operation
              headers:
                Location:
                  $ref: '#/components/headers/Location'
            '400':
              description: Bad Request
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/BadRequestSchema'
            '403':
              description: forbidden
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    $ref: '#/components/schemas/ForbiddenError'

  # Remove existing customer update schemas from base spec to avoid duplicates
  - target: $["components"]["schemas"]["DeactivateCustomer"]
    remove: true
  - target: $["components"]["schemas"]["ReactivateCustomer"]
    remove: true
  - target: $["components"]["schemas"]["SuspendCustomer"]
    remove: true
  - target: $["components"]["schemas"]["UpdateUnverifiedAndReceiveOnly"]
    remove: true
  - target: $["components"]["schemas"]["UpdateVerifiedPersonal"]
    remove: true
  - target: $["components"]["schemas"]["UpdateVerifiedBusiness"]
    remove: true
  - target: $["components"]["schemas"]["UpgradeToVerifiedPersonal"]
    remove: true
  - target: $["components"]["schemas"]["UpgradeToVerifiedBusiness"]
    remove: true
  - target: $["components"]["schemas"]["UpgradeToVerifiedSoleProp"]
    remove: true
  - target: $["components"]["schemas"]["RetryVerifiedPersonal"]
    remove: true
  - target: $["components"]["schemas"]["RetryVerifiedBusinessNoController"]
    remove: true
  - target: $["components"]["schemas"]["RetryVerifiedBusinessWithController"]
    remove: true
  - target: $["components"]["schemas"]["RetryVerifiedBusinessWithInternationalController"]
    remove: true
  - target: $["components"]["schemas"]["RetryVerifiedSoleProp"]
    remove: true

  # Add discriminated union schemas for customer updates (completely redefined)
  - target: $["components"]["schemas"]
    update:
      DeactivateCustomer:
        title: DeactivateCustomer
        description: Deactivate a Customer
        type: object
        required:
          - operationType
          - status
        properties:
          operationType:
            type: string
            const: deactivate
          status:
            type: string
            example: deactivated
      ReactivateCustomer:
        title: ReactivateCustomer
        description: Reactivate a Customer
        type: object
        required:
          - operationType
          - status
        properties:
          operationType:
            type: string
            const: reactivate
          status:
            type: string
            example: reactivated
      SuspendCustomer:
        title: SuspendCustomer
        description: Suspend a Customer
        type: object
        required:
          - operationType
          - status
        properties:
          operationType:
            type: string
            const: suspend
          status:
            type: string
            example: suspended
      UpdateUnverifiedAndReceiveOnly:
        title: UpdateUnverifiedAndReceiveOnly
        description: Update Unverified Customer or Receive Only User Information
        type: object
        required:
          - operationType
        properties:
          operationType:
            type: string
            const: updateUnverifiedOrReceiveOnly
          firstName:
            type: string
            example: John
          lastName:
            type: string
            example: Doe
          email:
            type: string
            example: accountAdmin@email.com
          businessName:
            type: string
            example: Jane Corp
      UpdateVerifiedPersonal:
        title: UpdateVerifiedPersonal
        description: Update Verified Personal Customer Information
        type: object
        required:
          - operationType
        properties:
          operationType:
            type: string
            const: updateVerifiedPersonal
          email:
            type: string
            example: accountAdmin@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          address1:
            type: string
            example: 123 Main Street
          address2:
            type: string
            example: XYZ Suite
          city:
            type: string
            example: Des Moines
          state:
            type: string
            example: IA
          postalCode:
            type: string
            example: '50309'
          phone:
            type: string
            example: 5555555555
      UpdateVerifiedBusiness:
        title: UpdateVerifiedBusiness
        description: Update Verified Business Customer Information (both Sole Proprietorship and Non-Sole Proprietorship)
        required:
          - operationType
        properties:
          operationType:
            type: string
            const: updateVerifiedBusiness
          email:
            type: string
            example: accountAdmin@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          address1:
            type: string
            example: 123 Main Street
          address2:
            type: string
            example: XYZ Suite
          city:
            type: string
            example: Des Moines
          state:
            type: string
            example: IA
          postalCode:
            type: string
            example: '50309'
          phone:
            type: string
            example: 5555555555
          doingBusinessAs:
            type: string
            example: Jane's Electronics
          website:
            type: string
            example: https://www.domain.com
      UpgradeToVerifiedPersonal:
        title: UpgradeToVerifiedPersonal
        description: Upgrade Unverified Customer to Verified Personal Customer
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - address1
          - city
          - state
          - postalCode
          - dateOfBirth
          - type
          - ssn
        properties:
          operationType:
            type: string
            const: upgradeToVerifiedPersonal
          firstName:
            type: string
            example: John
          lastName:
            type: string
            example: Doe
          email:
            type: string
            example: johndoe@email.net
          ipAddress:
            type: string
            example: 10.10.10.10
          type:
            type: string
            example: personal
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          dateOfBirth:
            type: string
            example: 1970-01-01
          ssn:
            type: string
            example: 1234
      UpgradeToVerifiedBusiness:
        title: UpgradeToVerifiedBusiness
        description: Upgrade Unverified Customer to Verified Business Customer
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - type
          - address1
          - city
          - state
          - postalCode
          - controller
          - businessClassification
          - businessType
          - businessName
          - ein
        properties:
          operationType:
            type: string
            const: upgradeToVerifiedBusiness
          firstName:
            type: string
            example: Account
          lastName:
            type: string
            example: Admin
          email:
            type: string
            example: accountAdmin@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          type:
            type: string
            example: business
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          controller:
            type: object
            required:
              - firstName
              - lastName
              - title
              - dateOfBirth
              - address
            properties:
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Controller
              title:
                type: string
                example: CEO
              ssn:
                type: string
                example: 6789
              dateOfBirth:
                type: string
                example: 1980-01-31
              address:
                type: object
                required:
                  - address1
                  - city
                  - stateProvinceRegion
                  - postalCode
                  - country
                properties:
                  address1:
                    type: string
                    example: 1749 18th st
                  address2:
                    type: string
                    example: apt 12
                  city:
                    type: string
                    example: Des Moines
                  stateProvinceRegion:
                    type: string
                    example: IA
                  postalCode:
                    type: string
                    example: 50266
                  country:
                    type: string
                    example: US
          businessClassification:
            type: string
            example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
          businessType:
            type: string
            example: llc
          businessName:
            type: string
            example: Jane Corp
          ein:
            type: string
            example: 00-0000000
      UpgradeToVerifiedSoleProp:
        title: UpgradeToVerifiedSoleProp
        description: Upgrade Unverified Customer to Verified Business Customer (Sole Proprietorship)
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - type
          - dateOfBirth
          - ssn
          - address1
          - city
          - state
          - postalCode
          - businessClassification
          - businessType
          - businessName
          - ein
        properties:
          operationType:
            type: string
            const: upgradeToVerifiedSoleProp
          firstName:
            type: string
            example: Business
          lastName:
            type: string
            example: Owner
          email:
            type: string
            example: solePropBusiness@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          type:
            type: string
            example: business
          dateOfBirth:
            type: string
            example: 1980-01-31
          ssn:
            type: string
            example: 6789
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          businessClassification:
            type: string
            example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
          businessType:
            type: string
            example: soleProprietorship
          businessName:
            type: string
            example: Jane Corp
          ein:
            type: string
            example: 00-0000000
      RetryVerifiedPersonal:
        title: RetryVerifiedPersonal
        description: Retry Verification for Verified Personal Customer
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - address1
          - city
          - state
          - postalCode
          - dateOfBirth
          - type
          - ssn
        properties:
          operationType:
            type: string
            const: retryVerifiedPersonal
          firstName:
            type: string
            example: John
          lastName:
            type: string
            example: Doe
          email:
            type: string
            example: johndoe@email.net
          ipAddress:
            type: string
            example: 10.10.10.10
          type:
            type: string
            example: personal
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          dateOfBirth:
            type: string
            example: 1970-01-01
          ssn:
            type: string
            example: 1234
      RetryVerifiedBusinessNoController:
        title: RetryVerifiedBusinessNoController
        description: Retry Verification for Verified Business Customer where only Business Details need to be retried
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - type
          - address1
          - city
          - state
          - postalCode
          - businessClassification
          - businessType
          - businessName
          - ein
        properties:
          operationType:
            type: string
            const: retryVerifiedBusinessNoController
          firstName:    
            type: string
            example: Account
          lastName:
            type: string
            example: Admin
          email:
            type: string
            example: accountAdmin@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          type:
            type: string
            example: business
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          businessClassification:
            type: string
            example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
          businessType:
            type: string
            example: llc
          businessName:
            type: string
            example: Jane Corp
          ein:
            type: string
            example: 00-0000000
      RetryVerifiedBusinessWithController:
        title: RetryVerifiedBusinessWithController
        description: Retry Verification for Verified Business Customer where Business Details as well as Controller Details need to be retried
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - type
          - address1
          - city
          - state
          - postalCode
          - controller
          - businessClassification
          - businessType
          - businessName
          - ein
        properties:
          operationType:
            type: string
            const: retryVerifiedBusinessWithController
          firstName:
            type: string
            example: Account
          lastName:
            type: string
            example: Admin
          email:
            type: string
            example: accountAdmin@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          type:
            type: string
            example: business
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          controller:
            type: object
            required:
              - firstName
              - lastName
              - title
              - ssn
              - dateOfBirth
              - address
            properties:
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Controller
              title:
                type: string
                example: CEO
              ssn:
                type: string
                example: 123456789
              dateOfBirth:
                type: string
                example: 1980-01-31
              address:
                type: object
                required:
                  - address1
                  - city
                  - stateProvinceRegion
                  - postalCode
                  - country
                properties:
                  address1:
                    type: string
                    example: 1749 18th st
                  address2:
                    type: string
                    example: apt 12
                  city:
                    type: string
                    example: Des Moines
                  stateProvinceRegion:
                    type: string
                    example: IA
                  postalCode:
                    type: string
                    example: 50266
                  country:
                    type: string
                    example: US
          businessClassification:
            type: string
            example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
          businessType:
            type: string
            example: llc
          businessName:
            type: string
            example: Jane Corp
          ein:
            type: string
            example: 00-0000000
      RetryVerifiedBusinessWithInternationalController:
        title: RetryVerifiedBusinessWithInternationalController
        description: Retry Verification for Verified Business Customer where Business Details as well as International Controller Details need to be retried
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - type
          - address1
          - city
          - state
          - postalCode
          - controller
          - businessClassification
          - businessType
          - businessName
          - ein
        properties:
          operationType:
            type: string
            const: retryVerifiedBusinessWithInternationalController
          firstName:
            type: string
            example: Account
          lastName:
            type: string
            example: Admin
          email:
            type: string
            example: accountAdmin@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          type:
            type: string
            example: business
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          controller:
            type: object
            required:
              - firstName
              - lastName
              - title
              - dateOfBirth
              - address
              - passport
            properties:
              firstName:
                type: string
                example: John
              lastName:
                type: string
                example: Controller
              title:
                type: string
                example: CEO
              dateOfBirth:
                type: string
                example: 1980-01-31
              address:
                type: object
                required:
                  - address1
                  - city
                  - country
                  - stateProvinceRegion
                properties:
                  address1:
                    type: string
                    example: 462 Main Street
                  address2:
                    type: string
                    example: Suite 123
                  address3:
                    type: string
                    example: Unit 123
                  city:
                    type: string
                    example: Des Moines
                  postalCode:
                    type: string
                    example: '50309'
                  country:
                    type: string
                    example: USA
                  stateProvinceRegion:
                    type: string
                    example: 'IA'
              passport:
                type: object
                required:
                  - number
                  - country
                properties:
                  number:
                    type: string
                  country:
                    type: string
          businessClassification:
            type: string
            example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
          businessType:
            type: string
            example: llc
          businessName:
            type: string
            example: Jane Corp
          ein:
            type: string
            example: 00-0000000
      RetryVerifiedSoleProp:
        title: RetryVerifiedSoleProp
        description: Retry Verification for Verified Business Customer (Sole Proprietorship)
        type: object
        required:
          - operationType
          - firstName
          - lastName
          - email
          - type
          - dateOfBirth
          - ssn
          - address1
          - city
          - state
          - postalCode
          - businessClassification
          - businessType
          - businessName
          - ein
        properties:
          operationType:
            type: string
            const: retryVerifiedSoleProp
          firstName:
            type: string
            example: Business
          lastName:
            type: string
            example: Owner
          email:
            type: string
            example: solePropBusiness@email.com
          ipAddress:
            type: string
            example: 143.156.7.8
          type:
            type: string
            example: business
          dateOfBirth:
            type: string
            example: 1980-01-31
          ssn:
            type: string
            example: 6789
          address1:
            type: string
            example: 99-99 33rd St
          city:
            type: string
            example: Some City
          state:
            type: string
            example: NY
          postalCode:
            type: string
            example: 11101
          businessClassification:
            type: string
            example: 9ed3f670-7d6f-11e3-b1ce-5404a6144203
          businessType:
            type: string
            example: soleProprietorship
          businessName:
            type: string
            example: Jane Corp
          ein:
            type: string
            example: 00-0000000

  # Fix micro-deposits endpoint name override
  - target: $["paths"]["/funding-sources/{id}/micro-deposits"]["get"]
    update:
      x-speakeasy-name-override: get

  # Remove the original micro-deposits POST endpoint. Micro-deposits operations have been moved to path fragments.
  - target: $["paths"]["/funding-sources/{id}/micro-deposits"]["post"]
    remove: true

  # Add path fragments for separate micro-deposits operations (Initiate and Verify)
  - target: $["paths"]
    update:
      "/funding-sources/{id}/micro-deposits#initiate":
        post:
          x-speakeasy-name-override: initiate
          tags:
            - funding sources
          summary: Initiate micro-deposits
          description: Initiates two small deposits to the customer's bank account for verification purposes. No request body is required.
          operationId: initiateMicroDeposits
          x-speakeasy-group: fundingSources.microDeposits
          parameters:
            - name: id
              in: path
              description: The ID of the funding source to initiate micro-deposits for
              required: true
              schema:
                type: string
            - name: Accept
              in: header
              required: true
              schema:
                type: string
                default: application/vnd.dwolla.v1.hal+json
          responses:
            '201':
              description: Micro-deposits initiated successfully
              headers:
                Location:
                  description: URL of the micro-deposits resource
                  schema:
                    type: string
                    example: "https://api-sandbox.dwolla.com/funding-sources/e52006c3-7560-4ff1-99d5-b0f3a6f4f909/micro-deposits"
            '403':
              description: Forbidden - funding source not eligible for micro-deposits
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidResourceState
                      message:
                        type: string
                        example: Bank already verified.
            '404':
              description: Funding source not found
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotFound
                      message:
                        type: string
                        example: The requested resource was not found.
      "/funding-sources/{id}/micro-deposits#verify":
        post:
          x-speakeasy-name-override: verify
          tags:
            - funding sources
          summary: Verify micro-deposits
          description: Verifies the micro-deposit amounts received in the customer's bank account to complete funding source verification.
          operationId: verifyMicroDeposits
          x-speakeasy-group: fundingSources.microDeposits
          parameters:
            - name: id
              in: path
              description: The ID of the funding source to verify micro-deposits for
              required: true
              schema:
                type: string
            - name: Accept
              in: header
              required: true
              schema:
                type: string
                default: application/vnd.dwolla.v1.hal+json
          requestBody:
            required: true
            description: The micro-deposit amounts received in the bank account
            content:
              application/vnd.dwolla.v1.hal+json:
                schema:
                  type: object
                  required:
                    - amount1
                    - amount2
                  properties:
                    amount1:
                      type: object
                      required:
                        - value
                        - currency
                      properties:
                        value:
                          type: string
                          example: 0.02
                        currency:
                          type: string
                          example: USD
                    amount2:
                      type: object
                      required:
                        - value
                        - currency
                      properties:
                        value:
                          type: string
                          example: 0.03
                        currency:
                          type: string
                          example: USD
          responses:
            '200':
              description: Micro-deposits verified successfully
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    type: object
                    properties:
                      _links:
                        type: object
                        properties:
                          self:
                            type: object
                            properties:
                              href:
                                type: string
                                format: uri
                                example: 'https://api-sandbox.dwolla.com/funding-sources/2e446d1b-fb3c-42a0-9691-5d1d6a4dbbf0/micro-deposits'
                              type:
                                type: string
                                example: 'application/vnd.dwolla.v1.hal+json'
                              resource-type:
                                type: string
                                example: 'micro-deposits'
            '400':
              description: Bad Request - invalid deposit amounts
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    type: object
                    properties:
                      code:
                        type: string
                        example: ValidationError
                      message:
                        type: string
                        example: Validation error(s) present. See embedded errors list for more details.
                      _embedded:
                        type: object
                        properties:
                          errors:
                            type: array
                            items:
                              type: object
                              properties:
                                code:
                                  type: string
                                  example: Invalid
                                message:
                                  type: string
                                  example: Wrong amount(s).
                                path:
                                  type: string
                                  example: ""
                                _links:
                                  type: object
            '403':
              description: Forbidden - verification not allowed in current state
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    type: object
                    properties:
                      code:
                        type: string
                        example: InvalidResourceState
                      message:
                        type: string
                        example: Too many attempts.
            '404':
              description: Funding source not found
              headers: {}
              content:
                application/vnd.dwolla.v1.hal+json:
                  schema:
                    type: object
                    properties:
                      code:
                        type: string
                        example: NotFound
                      message:
                        type: string
                        example: The requested resource was not found.

  # Add discriminated unions for customer update operation
  - target: $["paths"]["/customers/{id}"]["post"]["requestBody"]["content"]["application/json"]["schema"]["oneOf"]
    remove: true
  - target: $["paths"]["/customers/{id}"]["post"]["requestBody"]["content"]["application/json"]["schema"]["oneOf"]
    update:
      oneOf:
        - $ref: '#/components/schemas/DeactivateCustomer'
        - $ref: '#/components/schemas/ReactivateCustomer'
        - $ref: '#/components/schemas/SuspendCustomer'
        - $ref: '#/components/schemas/UpdateUnverifiedAndReceiveOnly'
        - $ref: '#/components/schemas/UpdateVerifiedPersonal'
        - $ref: '#/components/schemas/UpdateVerifiedBusiness'
        - $ref: '#/components/schemas/UpgradeToVerifiedPersonal'
        - $ref: '#/components/schemas/UpgradeToVerifiedBusiness'
        - $ref: '#/components/schemas/UpgradeToVerifiedSoleProp'
        - $ref: '#/components/schemas/RetryVerifiedPersonal'
        - $ref: '#/components/schemas/RetryVerifiedBusinessNoController'
        - $ref: '#/components/schemas/RetryVerifiedBusinessWithController'
        - $ref: '#/components/schemas/RetryVerifiedBusinessWithInternationalController'
        - $ref: '#/components/schemas/RetryVerifiedSoleProp'
      discriminator:
        propertyName: operationType
        mapping:
          deactivate: '#/components/schemas/DeactivateCustomer'
          reactivate: '#/components/schemas/ReactivateCustomer'
          suspend: '#/components/schemas/SuspendCustomer'
          updateUnverifiedOrReceiveOnly: '#/components/schemas/UpdateUnverifiedAndReceiveOnly'
          updateVerifiedPersonal: '#/components/schemas/UpdateVerifiedPersonal'
          updateVerifiedBusiness: '#/components/schemas/UpdateVerifiedBusiness'
          upgradeToVerifiedPersonal: '#/components/schemas/UpgradeToVerifiedPersonal'
          upgradeToVerifiedBusiness: '#/components/schemas/UpgradeToVerifiedBusiness'
          upgradeToVerifiedSoleProp: '#/components/schemas/UpgradeToVerifiedSoleProp'
          retryVerifiedPersonal: '#/components/schemas/RetryVerifiedPersonal'
          retryVerifiedBusinessNoController: '#/components/schemas/RetryVerifiedBusinessNoController'
          retryVerifiedBusinessWithController: '#/components/schemas/RetryVerifiedBusinessWithController'
          retryVerifiedBusinessWithInternationalController: '#/components/schemas/RetryVerifiedBusinessWithInternationalController'
          retryVerifiedSoleProp: '#/components/schemas/RetryVerifiedSoleProp'
