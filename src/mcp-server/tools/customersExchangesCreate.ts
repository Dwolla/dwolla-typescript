/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersExchangesCreate } from "../../funcs/customersExchangesCreate.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.CreateCustomerExchangeRequest$inboundSchema,
};

export const tool$customersExchangesCreate: ToolDefinition<typeof args> = {
  name: "customers-exchanges-create",
  description: `Create an exchange for a customer

Create an exchange for a customer. The request body will vary based on the exchange partner.
For Finicity, the request body will include finicity-specific fields.
For MX Secure Exchange, the request body will include an MX token.
For MX Open Banking, the request body will include an available connection token.
For Flinks Secure Exchange, the request body will include a token.
For Plaid Secure Exchange, the request body will include a processor token.
For Plaid Open Banking, the request body will include a public token.
`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await customersExchangesCreate(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    return formatResult(void 0, apiCall);
  },
};
