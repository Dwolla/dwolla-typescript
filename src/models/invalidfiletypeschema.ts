/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type InvalidFileTypeSchema = {
  code: string;
  message: string;
};

/** @internal */
export const InvalidFileTypeSchema$inboundSchema: z.ZodType<
  InvalidFileTypeSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  message: z.string(),
});

/** @internal */
export type InvalidFileTypeSchema$Outbound = {
  code: string;
  message: string;
};

/** @internal */
export const InvalidFileTypeSchema$outboundSchema: z.ZodType<
  InvalidFileTypeSchema$Outbound,
  z.ZodTypeDef,
  InvalidFileTypeSchema
> = z.object({
  code: z.string(),
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvalidFileTypeSchema$ {
  /** @deprecated use `InvalidFileTypeSchema$inboundSchema` instead. */
  export const inboundSchema = InvalidFileTypeSchema$inboundSchema;
  /** @deprecated use `InvalidFileTypeSchema$outboundSchema` instead. */
  export const outboundSchema = InvalidFileTypeSchema$outboundSchema;
  /** @deprecated use `InvalidFileTypeSchema$Outbound` instead. */
  export type Outbound = InvalidFileTypeSchema$Outbound;
}

export function invalidFileTypeSchemaToJSON(
  invalidFileTypeSchema: InvalidFileTypeSchema,
): string {
  return JSON.stringify(
    InvalidFileTypeSchema$outboundSchema.parse(invalidFileTypeSchema),
  );
}

export function invalidFileTypeSchemaFromJSON(
  jsonString: string,
): SafeParseResult<InvalidFileTypeSchema, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvalidFileTypeSchema$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvalidFileTypeSchema' from JSON`,
  );
}
