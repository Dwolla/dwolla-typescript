/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as models from "../index.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

/**
 * forbidden
 */
export type CreateAccountFundingSourceDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * forbidden
 */
export class CreateAccountFundingSourceDwollaV1HalJSONError extends Error {
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateAccountFundingSourceDwollaV1HalJSONErrorData;

  constructor(err: CreateAccountFundingSourceDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;

    this.name = "CreateAccountFundingSourceDwollaV1HalJSONError";
  }
}

/**
 * Bad request or duplicate resource
 */
export type CreateAccountFundingSourceDwollaV1HalJSON =
  | models.BadRequestSchema
  | models.DuplicateResourceSchema;

/** @internal */
export const CreateAccountFundingSourceDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    CreateAccountFundingSourceDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  })
    .transform((v) => {
      return new CreateAccountFundingSourceDwollaV1HalJSONError(v);
    });

/** @internal */
export type CreateAccountFundingSourceDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const CreateAccountFundingSourceDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    CreateAccountFundingSourceDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    CreateAccountFundingSourceDwollaV1HalJSONError
  > = z.instanceof(CreateAccountFundingSourceDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAccountFundingSourceDwollaV1HalJSONError$ {
  /** @deprecated use `CreateAccountFundingSourceDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    CreateAccountFundingSourceDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `CreateAccountFundingSourceDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    CreateAccountFundingSourceDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `CreateAccountFundingSourceDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    CreateAccountFundingSourceDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const CreateAccountFundingSourceDwollaV1HalJSON$inboundSchema: z.ZodType<
  CreateAccountFundingSourceDwollaV1HalJSON,
  z.ZodTypeDef,
  unknown
> = z.union([
  models.BadRequestSchema$inboundSchema,
  models.DuplicateResourceSchema$inboundSchema,
]);

/** @internal */
export type CreateAccountFundingSourceDwollaV1HalJSON$Outbound =
  | models.BadRequestSchema$Outbound
  | models.DuplicateResourceSchema$Outbound;

/** @internal */
export const CreateAccountFundingSourceDwollaV1HalJSON$outboundSchema:
  z.ZodType<
    CreateAccountFundingSourceDwollaV1HalJSON$Outbound,
    z.ZodTypeDef,
    CreateAccountFundingSourceDwollaV1HalJSON
  > = z.union([
    models.BadRequestSchema$outboundSchema,
    models.DuplicateResourceSchema$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAccountFundingSourceDwollaV1HalJSON$ {
  /** @deprecated use `CreateAccountFundingSourceDwollaV1HalJSON$inboundSchema` instead. */
  export const inboundSchema =
    CreateAccountFundingSourceDwollaV1HalJSON$inboundSchema;
  /** @deprecated use `CreateAccountFundingSourceDwollaV1HalJSON$outboundSchema` instead. */
  export const outboundSchema =
    CreateAccountFundingSourceDwollaV1HalJSON$outboundSchema;
  /** @deprecated use `CreateAccountFundingSourceDwollaV1HalJSON$Outbound` instead. */
  export type Outbound = CreateAccountFundingSourceDwollaV1HalJSON$Outbound;
}

export function createAccountFundingSourceDwollaV1HalJSONToJSON(
  createAccountFundingSourceDwollaV1HalJSON:
    CreateAccountFundingSourceDwollaV1HalJSON,
): string {
  return JSON.stringify(
    CreateAccountFundingSourceDwollaV1HalJSON$outboundSchema.parse(
      createAccountFundingSourceDwollaV1HalJSON,
    ),
  );
}

export function createAccountFundingSourceDwollaV1HalJSONFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateAccountFundingSourceDwollaV1HalJSON,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateAccountFundingSourceDwollaV1HalJSON$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateAccountFundingSourceDwollaV1HalJSON' from JSON`,
  );
}
