/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  DuplicateResourceSchemaError,
  DuplicateResourceSchemaError$inboundSchema,
  DuplicateResourceSchemaError$Outbound,
  DuplicateResourceSchemaError$outboundSchema,
} from "./duplicateresourceschemaerror.js";
import { DwollaError } from "./dwollaerror.js";
import {
  InvalidFileTypeSchemaError,
  InvalidFileTypeSchemaError$inboundSchema,
  InvalidFileTypeSchemaError$Outbound,
  InvalidFileTypeSchemaError$outboundSchema,
} from "./invalidfiletypeschemaerror.js";
import {
  MaximumNumberOfResourcesSchemaError,
  MaximumNumberOfResourcesSchemaError$inboundSchema,
  MaximumNumberOfResourcesSchemaError$Outbound,
  MaximumNumberOfResourcesSchemaError$outboundSchema,
} from "./maximumnumberofresourcesschemaerror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

/**
 * request entity too large
 */
export type CreateBeneficialOwnerDocumentDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * request entity too large
 */
export class CreateBeneficialOwnerDocumentDwollaV1HalJSONError
  extends DwollaError
{
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateBeneficialOwnerDocumentDwollaV1HalJSONErrorData;

  constructor(
    err: CreateBeneficialOwnerDocumentDwollaV1HalJSONErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.code != null) this.code = err.code;

    this.name = "CreateBeneficialOwnerDocumentDwollaV1HalJSONError";
  }
}

/**
 * Bad Request
 */
export type CreateBeneficialOwnerDocumentDwollaV1HalJSON =
  | MaximumNumberOfResourcesSchemaError
  | InvalidFileTypeSchemaError
  | DuplicateResourceSchemaError;

/** @internal */
export const CreateBeneficialOwnerDocumentDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    CreateBeneficialOwnerDocumentDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new CreateBeneficialOwnerDocumentDwollaV1HalJSONError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type CreateBeneficialOwnerDocumentDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const CreateBeneficialOwnerDocumentDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    CreateBeneficialOwnerDocumentDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    CreateBeneficialOwnerDocumentDwollaV1HalJSONError
  > = z.instanceof(CreateBeneficialOwnerDocumentDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBeneficialOwnerDocumentDwollaV1HalJSONError$ {
  /** @deprecated use `CreateBeneficialOwnerDocumentDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    CreateBeneficialOwnerDocumentDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    CreateBeneficialOwnerDocumentDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    CreateBeneficialOwnerDocumentDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const CreateBeneficialOwnerDocumentDwollaV1HalJSON$inboundSchema:
  z.ZodType<
    CreateBeneficialOwnerDocumentDwollaV1HalJSON,
    z.ZodTypeDef,
    unknown
  > = z.union([
    MaximumNumberOfResourcesSchemaError$inboundSchema,
    InvalidFileTypeSchemaError$inboundSchema,
    DuplicateResourceSchemaError$inboundSchema,
  ]);

/** @internal */
export type CreateBeneficialOwnerDocumentDwollaV1HalJSON$Outbound =
  | MaximumNumberOfResourcesSchemaError$Outbound
  | InvalidFileTypeSchemaError$Outbound
  | DuplicateResourceSchemaError$Outbound;

/** @internal */
export const CreateBeneficialOwnerDocumentDwollaV1HalJSON$outboundSchema:
  z.ZodType<
    CreateBeneficialOwnerDocumentDwollaV1HalJSON$Outbound,
    z.ZodTypeDef,
    unknown
  > = z.union([
    MaximumNumberOfResourcesSchemaError$outboundSchema,
    InvalidFileTypeSchemaError$outboundSchema,
    DuplicateResourceSchemaError$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBeneficialOwnerDocumentDwollaV1HalJSON$ {
  /** @deprecated use `CreateBeneficialOwnerDocumentDwollaV1HalJSON$inboundSchema` instead. */
  export const inboundSchema =
    CreateBeneficialOwnerDocumentDwollaV1HalJSON$inboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentDwollaV1HalJSON$outboundSchema` instead. */
  export const outboundSchema =
    CreateBeneficialOwnerDocumentDwollaV1HalJSON$outboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentDwollaV1HalJSON$Outbound` instead. */
  export type Outbound = CreateBeneficialOwnerDocumentDwollaV1HalJSON$Outbound;
}

export function createBeneficialOwnerDocumentDwollaV1HalJSONToJSON(
  createBeneficialOwnerDocumentDwollaV1HalJSON:
    CreateBeneficialOwnerDocumentDwollaV1HalJSON,
): string {
  return JSON.stringify(
    CreateBeneficialOwnerDocumentDwollaV1HalJSON$outboundSchema.parse(
      createBeneficialOwnerDocumentDwollaV1HalJSON,
    ),
  );
}

export function createBeneficialOwnerDocumentDwollaV1HalJSONFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateBeneficialOwnerDocumentDwollaV1HalJSON,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateBeneficialOwnerDocumentDwollaV1HalJSON$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateBeneficialOwnerDocumentDwollaV1HalJSON' from JSON`,
  );
}
