/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as models from "../index.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

/**
 * request entity too large
 */
export type RequestEntityTooLargeDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * request entity too large
 */
export class RequestEntityTooLargeDwollaV1HalJSONError extends Error {
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: RequestEntityTooLargeDwollaV1HalJSONErrorData;

  constructor(err: RequestEntityTooLargeDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;

    this.name = "RequestEntityTooLargeDwollaV1HalJSONError";
  }
}

/**
 * not found
 */
export type CreateCustomerDocumentNotFoundDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * not found
 */
export class CreateCustomerDocumentNotFoundDwollaV1HalJSONError extends Error {
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateCustomerDocumentNotFoundDwollaV1HalJSONErrorData;

  constructor(err: CreateCustomerDocumentNotFoundDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;

    this.name = "CreateCustomerDocumentNotFoundDwollaV1HalJSONError";
  }
}

/**
 * not found
 */
export type CreateCustomerDocumentForbiddenDwollaV1HalJSON =
  | models.InvalidResourceStateSchema
  | models.NotAuthorizedSchema;

/**
 * Bad Request
 */
export type CreateCustomerDocumentBadRequestDwollaV1HalJSON =
  | models.MaximumNumberOfResourcesSchema
  | models.InvalidFileTypeSchema
  | models.DuplicateResourceSchema;

/** @internal */
export const RequestEntityTooLargeDwollaV1HalJSONError$inboundSchema: z.ZodType<
  RequestEntityTooLargeDwollaV1HalJSONError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
})
  .transform((v) => {
    return new RequestEntityTooLargeDwollaV1HalJSONError(v);
  });

/** @internal */
export type RequestEntityTooLargeDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const RequestEntityTooLargeDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    RequestEntityTooLargeDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    RequestEntityTooLargeDwollaV1HalJSONError
  > = z.instanceof(RequestEntityTooLargeDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestEntityTooLargeDwollaV1HalJSONError$ {
  /** @deprecated use `RequestEntityTooLargeDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    RequestEntityTooLargeDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `RequestEntityTooLargeDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    RequestEntityTooLargeDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `RequestEntityTooLargeDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound = RequestEntityTooLargeDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const CreateCustomerDocumentNotFoundDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    CreateCustomerDocumentNotFoundDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  })
    .transform((v) => {
      return new CreateCustomerDocumentNotFoundDwollaV1HalJSONError(v);
    });

/** @internal */
export type CreateCustomerDocumentNotFoundDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const CreateCustomerDocumentNotFoundDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    CreateCustomerDocumentNotFoundDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    CreateCustomerDocumentNotFoundDwollaV1HalJSONError
  > = z.instanceof(CreateCustomerDocumentNotFoundDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerDocumentNotFoundDwollaV1HalJSONError$ {
  /** @deprecated use `CreateCustomerDocumentNotFoundDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerDocumentNotFoundDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `CreateCustomerDocumentNotFoundDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerDocumentNotFoundDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `CreateCustomerDocumentNotFoundDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    CreateCustomerDocumentNotFoundDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const CreateCustomerDocumentForbiddenDwollaV1HalJSON$inboundSchema:
  z.ZodType<
    CreateCustomerDocumentForbiddenDwollaV1HalJSON,
    z.ZodTypeDef,
    unknown
  > = z.union([
    models.InvalidResourceStateSchema$inboundSchema,
    models.NotAuthorizedSchema$inboundSchema,
  ]);

/** @internal */
export type CreateCustomerDocumentForbiddenDwollaV1HalJSON$Outbound =
  | models.InvalidResourceStateSchema$Outbound
  | models.NotAuthorizedSchema$Outbound;

/** @internal */
export const CreateCustomerDocumentForbiddenDwollaV1HalJSON$outboundSchema:
  z.ZodType<
    CreateCustomerDocumentForbiddenDwollaV1HalJSON$Outbound,
    z.ZodTypeDef,
    CreateCustomerDocumentForbiddenDwollaV1HalJSON
  > = z.union([
    models.InvalidResourceStateSchema$outboundSchema,
    models.NotAuthorizedSchema$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerDocumentForbiddenDwollaV1HalJSON$ {
  /** @deprecated use `CreateCustomerDocumentForbiddenDwollaV1HalJSON$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerDocumentForbiddenDwollaV1HalJSON$inboundSchema;
  /** @deprecated use `CreateCustomerDocumentForbiddenDwollaV1HalJSON$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerDocumentForbiddenDwollaV1HalJSON$outboundSchema;
  /** @deprecated use `CreateCustomerDocumentForbiddenDwollaV1HalJSON$Outbound` instead. */
  export type Outbound =
    CreateCustomerDocumentForbiddenDwollaV1HalJSON$Outbound;
}

export function createCustomerDocumentForbiddenDwollaV1HalJSONToJSON(
  createCustomerDocumentForbiddenDwollaV1HalJSON:
    CreateCustomerDocumentForbiddenDwollaV1HalJSON,
): string {
  return JSON.stringify(
    CreateCustomerDocumentForbiddenDwollaV1HalJSON$outboundSchema.parse(
      createCustomerDocumentForbiddenDwollaV1HalJSON,
    ),
  );
}

export function createCustomerDocumentForbiddenDwollaV1HalJSONFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerDocumentForbiddenDwollaV1HalJSON,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerDocumentForbiddenDwollaV1HalJSON$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCustomerDocumentForbiddenDwollaV1HalJSON' from JSON`,
  );
}

/** @internal */
export const CreateCustomerDocumentBadRequestDwollaV1HalJSON$inboundSchema:
  z.ZodType<
    CreateCustomerDocumentBadRequestDwollaV1HalJSON,
    z.ZodTypeDef,
    unknown
  > = z.union([
    models.MaximumNumberOfResourcesSchema$inboundSchema,
    models.InvalidFileTypeSchema$inboundSchema,
    models.DuplicateResourceSchema$inboundSchema,
  ]);

/** @internal */
export type CreateCustomerDocumentBadRequestDwollaV1HalJSON$Outbound =
  | models.MaximumNumberOfResourcesSchema$Outbound
  | models.InvalidFileTypeSchema$Outbound
  | models.DuplicateResourceSchema$Outbound;

/** @internal */
export const CreateCustomerDocumentBadRequestDwollaV1HalJSON$outboundSchema:
  z.ZodType<
    CreateCustomerDocumentBadRequestDwollaV1HalJSON$Outbound,
    z.ZodTypeDef,
    CreateCustomerDocumentBadRequestDwollaV1HalJSON
  > = z.union([
    models.MaximumNumberOfResourcesSchema$outboundSchema,
    models.InvalidFileTypeSchema$outboundSchema,
    models.DuplicateResourceSchema$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerDocumentBadRequestDwollaV1HalJSON$ {
  /** @deprecated use `CreateCustomerDocumentBadRequestDwollaV1HalJSON$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerDocumentBadRequestDwollaV1HalJSON$inboundSchema;
  /** @deprecated use `CreateCustomerDocumentBadRequestDwollaV1HalJSON$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerDocumentBadRequestDwollaV1HalJSON$outboundSchema;
  /** @deprecated use `CreateCustomerDocumentBadRequestDwollaV1HalJSON$Outbound` instead. */
  export type Outbound =
    CreateCustomerDocumentBadRequestDwollaV1HalJSON$Outbound;
}

export function createCustomerDocumentBadRequestDwollaV1HalJSONToJSON(
  createCustomerDocumentBadRequestDwollaV1HalJSON:
    CreateCustomerDocumentBadRequestDwollaV1HalJSON,
): string {
  return JSON.stringify(
    CreateCustomerDocumentBadRequestDwollaV1HalJSON$outboundSchema.parse(
      createCustomerDocumentBadRequestDwollaV1HalJSON,
    ),
  );
}

export function createCustomerDocumentBadRequestDwollaV1HalJSONFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerDocumentBadRequestDwollaV1HalJSON,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerDocumentBadRequestDwollaV1HalJSON$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCustomerDocumentBadRequestDwollaV1HalJSON' from JSON`,
  );
}
