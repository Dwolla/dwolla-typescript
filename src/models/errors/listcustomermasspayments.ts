/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Customer not found
 */
export type ListCustomerMassPaymentsNotFoundDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * Customer not found
 */
export class ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError
  extends Error
{
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListCustomerMassPaymentsNotFoundDwollaV1HalJSONErrorData;

  constructor(err: ListCustomerMassPaymentsNotFoundDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;

    this.name = "ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError";
  }
}

/**
 * Not authorized to list mass payments
 */
export type ListCustomerMassPaymentsForbiddenDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * Not authorized to list mass payments
 */
export class ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError
  extends Error
{
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: ListCustomerMassPaymentsForbiddenDwollaV1HalJSONErrorData;

  constructor(err: ListCustomerMassPaymentsForbiddenDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;

    this.name = "ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError";
  }
}

/** @internal */
export const ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  })
    .transform((v) => {
      return new ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError(v);
    });

/** @internal */
export type ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError
  > = z.instanceof(ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$ {
  /** @deprecated use `ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    ListCustomerMassPaymentsNotFoundDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  })
    .transform((v) => {
      return new ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError(v);
    });

/** @internal */
export type ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError
  > = z.instanceof(ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$ {
  /** @deprecated use `ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    ListCustomerMassPaymentsForbiddenDwollaV1HalJSONError$Outbound;
}
