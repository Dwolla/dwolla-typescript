/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as operations from "../operations/index.js";

/**
 * not found
 */
export type UpdateBeneficialOwnerNotFoundDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * not found
 */
export class UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError extends Error {
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: UpdateBeneficialOwnerNotFoundDwollaV1HalJSONErrorData;

  constructor(err: UpdateBeneficialOwnerNotFoundDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;

    this.name = "UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError";
  }
}

/**
 * forbidden
 */
export type UpdateBeneficialOwnerForbiddenDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * forbidden
 */
export class UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError extends Error {
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: UpdateBeneficialOwnerForbiddenDwollaV1HalJSONErrorData;

  constructor(err: UpdateBeneficialOwnerForbiddenDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;

    this.name = "UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError";
  }
}

/**
 * ValidationError
 */
export type UpdateBeneficialOwnerBadRequestDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
  embedded?: operations.UpdateBeneficialOwnerEmbedded | undefined;
};

/**
 * ValidationError
 */
export class UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError extends Error {
  code?: string | undefined;
  embedded?: operations.UpdateBeneficialOwnerEmbedded | undefined;

  /** The original data that was passed to this error instance. */
  data$: UpdateBeneficialOwnerBadRequestDwollaV1HalJSONErrorData;

  constructor(err: UpdateBeneficialOwnerBadRequestDwollaV1HalJSONErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    if (err.code != null) this.code = err.code;
    if (err.embedded != null) this.embedded = err.embedded;

    this.name = "UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError";
  }
}

/** @internal */
export const UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  })
    .transform((v) => {
      return new UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError(v);
    });

/** @internal */
export type UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError
  > = z.instanceof(UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$ {
  /** @deprecated use `UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    UpdateBeneficialOwnerNotFoundDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
  })
    .transform((v) => {
      return new UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError(v);
    });

/** @internal */
export type UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError
  > = z.instanceof(UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$ {
  /** @deprecated use `UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    UpdateBeneficialOwnerForbiddenDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
    _embedded: z.lazy(() =>
      operations.UpdateBeneficialOwnerEmbedded$inboundSchema
    ).optional(),
  })
    .transform((v) => {
      const remapped = remap$(v, {
        "_embedded": "embedded",
      });

      return new UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError(remapped);
    });

/** @internal */
export type UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
  _embedded?: operations.UpdateBeneficialOwnerEmbedded$Outbound | undefined;
};

/** @internal */
export const UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError
  > = z.instanceof(UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(
      z.object({
        code: z.string().optional(),
        message: z.string().optional(),
        embedded: z.lazy(() =>
          operations.UpdateBeneficialOwnerEmbedded$outboundSchema
        ).optional(),
      }).transform((v) => {
        return remap$(v, {
          embedded: "_embedded",
        });
      }),
    );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$ {
  /** @deprecated use `UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    UpdateBeneficialOwnerBadRequestDwollaV1HalJSONError$Outbound;
}
