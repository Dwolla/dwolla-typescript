/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as models from "../index.js";

export type DepositAccountRestrictedErrorData = {
  code: string;
  message: string;
  embedded?: models.DepositAccountRestrictedErrorEmbedded | undefined;
};

export class DepositAccountRestrictedError extends Error {
  code: string;
  embedded?: models.DepositAccountRestrictedErrorEmbedded | undefined;

  /** The original data that was passed to this error instance. */
  data$: DepositAccountRestrictedErrorData;

  constructor(err: DepositAccountRestrictedErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.code = err.code;
    if (err.embedded != null) this.embedded = err.embedded;

    this.name = "DepositAccountRestrictedError";
  }
}

/** @internal */
export const DepositAccountRestrictedError$inboundSchema: z.ZodType<
  DepositAccountRestrictedError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  message: z.string(),
  _embedded: z.lazy(() =>
    models.DepositAccountRestrictedErrorEmbedded$inboundSchema
  ).optional(),
})
  .transform((v) => {
    const remapped = remap$(v, {
      "_embedded": "embedded",
    });

    return new DepositAccountRestrictedError(remapped);
  });

/** @internal */
export type DepositAccountRestrictedError$Outbound = {
  code: string;
  message: string;
  _embedded?: models.DepositAccountRestrictedErrorEmbedded$Outbound | undefined;
};

/** @internal */
export const DepositAccountRestrictedError$outboundSchema: z.ZodType<
  DepositAccountRestrictedError$Outbound,
  z.ZodTypeDef,
  DepositAccountRestrictedError
> = z.instanceof(DepositAccountRestrictedError)
  .transform(v => v.data$)
  .pipe(
    z.object({
      code: z.string(),
      message: z.string(),
      embedded: z.lazy(() =>
        models.DepositAccountRestrictedErrorEmbedded$outboundSchema
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        embedded: "_embedded",
      });
    }),
  );

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DepositAccountRestrictedError$ {
  /** @deprecated use `DepositAccountRestrictedError$inboundSchema` instead. */
  export const inboundSchema = DepositAccountRestrictedError$inboundSchema;
  /** @deprecated use `DepositAccountRestrictedError$outboundSchema` instead. */
  export const outboundSchema = DepositAccountRestrictedError$outboundSchema;
  /** @deprecated use `DepositAccountRestrictedError$Outbound` instead. */
  export type Outbound = DepositAccountRestrictedError$Outbound;
}
