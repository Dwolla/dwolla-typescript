/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { DwollaError } from "./dwollaerror.js";

/**
 * Not Found
 */
export type CreateLabelReallocationNotFoundDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * Not Found
 */
export class CreateLabelReallocationNotFoundDwollaV1HalJSONError
  extends DwollaError
{
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateLabelReallocationNotFoundDwollaV1HalJSONErrorData;

  constructor(
    err: CreateLabelReallocationNotFoundDwollaV1HalJSONErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.code != null) this.code = err.code;

    this.name = "CreateLabelReallocationNotFoundDwollaV1HalJSONError";
  }
}

/**
 * Forbidden
 */
export type CreateLabelReallocationForbiddenDwollaV1HalJSONErrorData = {
  code?: string | undefined;
  message?: string | undefined;
};

/**
 * Forbidden
 */
export class CreateLabelReallocationForbiddenDwollaV1HalJSONError
  extends DwollaError
{
  code?: string | undefined;

  /** The original data that was passed to this error instance. */
  data$: CreateLabelReallocationForbiddenDwollaV1HalJSONErrorData;

  constructor(
    err: CreateLabelReallocationForbiddenDwollaV1HalJSONErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    if (err.code != null) this.code = err.code;

    this.name = "CreateLabelReallocationForbiddenDwollaV1HalJSONError";
  }
}

/** @internal */
export const CreateLabelReallocationNotFoundDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    CreateLabelReallocationNotFoundDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new CreateLabelReallocationNotFoundDwollaV1HalJSONError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type CreateLabelReallocationNotFoundDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const CreateLabelReallocationNotFoundDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    CreateLabelReallocationNotFoundDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    CreateLabelReallocationNotFoundDwollaV1HalJSONError
  > = z.instanceof(CreateLabelReallocationNotFoundDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLabelReallocationNotFoundDwollaV1HalJSONError$ {
  /** @deprecated use `CreateLabelReallocationNotFoundDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    CreateLabelReallocationNotFoundDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `CreateLabelReallocationNotFoundDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    CreateLabelReallocationNotFoundDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `CreateLabelReallocationNotFoundDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    CreateLabelReallocationNotFoundDwollaV1HalJSONError$Outbound;
}

/** @internal */
export const CreateLabelReallocationForbiddenDwollaV1HalJSONError$inboundSchema:
  z.ZodType<
    CreateLabelReallocationForbiddenDwollaV1HalJSONError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    code: z.string().optional(),
    message: z.string().optional(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new CreateLabelReallocationForbiddenDwollaV1HalJSONError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type CreateLabelReallocationForbiddenDwollaV1HalJSONError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
};

/** @internal */
export const CreateLabelReallocationForbiddenDwollaV1HalJSONError$outboundSchema:
  z.ZodType<
    CreateLabelReallocationForbiddenDwollaV1HalJSONError$Outbound,
    z.ZodTypeDef,
    CreateLabelReallocationForbiddenDwollaV1HalJSONError
  > = z.instanceof(CreateLabelReallocationForbiddenDwollaV1HalJSONError)
    .transform(v => v.data$)
    .pipe(z.object({
      code: z.string().optional(),
      message: z.string().optional(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLabelReallocationForbiddenDwollaV1HalJSONError$ {
  /** @deprecated use `CreateLabelReallocationForbiddenDwollaV1HalJSONError$inboundSchema` instead. */
  export const inboundSchema =
    CreateLabelReallocationForbiddenDwollaV1HalJSONError$inboundSchema;
  /** @deprecated use `CreateLabelReallocationForbiddenDwollaV1HalJSONError$outboundSchema` instead. */
  export const outboundSchema =
    CreateLabelReallocationForbiddenDwollaV1HalJSONError$outboundSchema;
  /** @deprecated use `CreateLabelReallocationForbiddenDwollaV1HalJSONError$Outbound` instead. */
  export type Outbound =
    CreateLabelReallocationForbiddenDwollaV1HalJSONError$Outbound;
}
