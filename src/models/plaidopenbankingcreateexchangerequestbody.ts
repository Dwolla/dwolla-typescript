/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type PlaidOpenBankingCreateExchangeRequestBodyExchangePartner = {
  href: string;
};

export type PlaidOpenBankingCreateExchangeRequestBodyLinks = {
  exchangePartner: PlaidOpenBankingCreateExchangeRequestBodyExchangePartner;
};

export type Plaid = {
  /**
   * The Plaid public token for the connection
   */
  publicToken: string;
};

export type PlaidOpenBankingCreateExchangeRequestBody = {
  links: PlaidOpenBankingCreateExchangeRequestBodyLinks;
  plaid: Plaid;
};

/** @internal */
export const PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$inboundSchema:
  z.ZodType<
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner,
    z.ZodTypeDef,
    unknown
  > = z.object({
    href: z.string(),
  });

/** @internal */
export type PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$Outbound =
  {
    href: string;
  };

/** @internal */
export const PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$outboundSchema:
  z.ZodType<
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$Outbound,
    z.ZodTypeDef,
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner
  > = z.object({
    href: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$ {
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$inboundSchema` instead. */
  export const inboundSchema =
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$inboundSchema;
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$outboundSchema` instead. */
  export const outboundSchema =
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$outboundSchema;
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$Outbound` instead. */
  export type Outbound =
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$Outbound;
}

export function plaidOpenBankingCreateExchangeRequestBodyExchangePartnerToJSON(
  plaidOpenBankingCreateExchangeRequestBodyExchangePartner:
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner,
): string {
  return JSON.stringify(
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$outboundSchema
      .parse(plaidOpenBankingCreateExchangeRequestBodyExchangePartner),
  );
}

export function plaidOpenBankingCreateExchangeRequestBodyExchangePartnerFromJSON(
  jsonString: string,
): SafeParseResult<
  PlaidOpenBankingCreateExchangeRequestBodyExchangePartner,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PlaidOpenBankingCreateExchangeRequestBodyExchangePartner' from JSON`,
  );
}

/** @internal */
export const PlaidOpenBankingCreateExchangeRequestBodyLinks$inboundSchema:
  z.ZodType<
    PlaidOpenBankingCreateExchangeRequestBodyLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "exchange-partner": z.lazy(() =>
      PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "exchange-partner": "exchangePartner",
    });
  });

/** @internal */
export type PlaidOpenBankingCreateExchangeRequestBodyLinks$Outbound = {
  "exchange-partner":
    PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$Outbound;
};

/** @internal */
export const PlaidOpenBankingCreateExchangeRequestBodyLinks$outboundSchema:
  z.ZodType<
    PlaidOpenBankingCreateExchangeRequestBodyLinks$Outbound,
    z.ZodTypeDef,
    PlaidOpenBankingCreateExchangeRequestBodyLinks
  > = z.object({
    exchangePartner: z.lazy(() =>
      PlaidOpenBankingCreateExchangeRequestBodyExchangePartner$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      exchangePartner: "exchange-partner",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlaidOpenBankingCreateExchangeRequestBodyLinks$ {
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBodyLinks$inboundSchema` instead. */
  export const inboundSchema =
    PlaidOpenBankingCreateExchangeRequestBodyLinks$inboundSchema;
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBodyLinks$outboundSchema` instead. */
  export const outboundSchema =
    PlaidOpenBankingCreateExchangeRequestBodyLinks$outboundSchema;
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBodyLinks$Outbound` instead. */
  export type Outbound =
    PlaidOpenBankingCreateExchangeRequestBodyLinks$Outbound;
}

export function plaidOpenBankingCreateExchangeRequestBodyLinksToJSON(
  plaidOpenBankingCreateExchangeRequestBodyLinks:
    PlaidOpenBankingCreateExchangeRequestBodyLinks,
): string {
  return JSON.stringify(
    PlaidOpenBankingCreateExchangeRequestBodyLinks$outboundSchema.parse(
      plaidOpenBankingCreateExchangeRequestBodyLinks,
    ),
  );
}

export function plaidOpenBankingCreateExchangeRequestBodyLinksFromJSON(
  jsonString: string,
): SafeParseResult<
  PlaidOpenBankingCreateExchangeRequestBodyLinks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PlaidOpenBankingCreateExchangeRequestBodyLinks$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PlaidOpenBankingCreateExchangeRequestBodyLinks' from JSON`,
  );
}

/** @internal */
export const Plaid$inboundSchema: z.ZodType<Plaid, z.ZodTypeDef, unknown> = z
  .object({
    publicToken: z.string(),
  });

/** @internal */
export type Plaid$Outbound = {
  publicToken: string;
};

/** @internal */
export const Plaid$outboundSchema: z.ZodType<
  Plaid$Outbound,
  z.ZodTypeDef,
  Plaid
> = z.object({
  publicToken: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Plaid$ {
  /** @deprecated use `Plaid$inboundSchema` instead. */
  export const inboundSchema = Plaid$inboundSchema;
  /** @deprecated use `Plaid$outboundSchema` instead. */
  export const outboundSchema = Plaid$outboundSchema;
  /** @deprecated use `Plaid$Outbound` instead. */
  export type Outbound = Plaid$Outbound;
}

export function plaidToJSON(plaid: Plaid): string {
  return JSON.stringify(Plaid$outboundSchema.parse(plaid));
}

export function plaidFromJSON(
  jsonString: string,
): SafeParseResult<Plaid, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Plaid$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Plaid' from JSON`,
  );
}

/** @internal */
export const PlaidOpenBankingCreateExchangeRequestBody$inboundSchema: z.ZodType<
  PlaidOpenBankingCreateExchangeRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() =>
    PlaidOpenBankingCreateExchangeRequestBodyLinks$inboundSchema
  ),
  plaid: z.lazy(() => Plaid$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type PlaidOpenBankingCreateExchangeRequestBody$Outbound = {
  _links: PlaidOpenBankingCreateExchangeRequestBodyLinks$Outbound;
  plaid: Plaid$Outbound;
};

/** @internal */
export const PlaidOpenBankingCreateExchangeRequestBody$outboundSchema:
  z.ZodType<
    PlaidOpenBankingCreateExchangeRequestBody$Outbound,
    z.ZodTypeDef,
    PlaidOpenBankingCreateExchangeRequestBody
  > = z.object({
    links: z.lazy(() =>
      PlaidOpenBankingCreateExchangeRequestBodyLinks$outboundSchema
    ),
    plaid: z.lazy(() => Plaid$outboundSchema),
  }).transform((v) => {
    return remap$(v, {
      links: "_links",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlaidOpenBankingCreateExchangeRequestBody$ {
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PlaidOpenBankingCreateExchangeRequestBody$inboundSchema;
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PlaidOpenBankingCreateExchangeRequestBody$outboundSchema;
  /** @deprecated use `PlaidOpenBankingCreateExchangeRequestBody$Outbound` instead. */
  export type Outbound = PlaidOpenBankingCreateExchangeRequestBody$Outbound;
}

export function plaidOpenBankingCreateExchangeRequestBodyToJSON(
  plaidOpenBankingCreateExchangeRequestBody:
    PlaidOpenBankingCreateExchangeRequestBody,
): string {
  return JSON.stringify(
    PlaidOpenBankingCreateExchangeRequestBody$outboundSchema.parse(
      plaidOpenBankingCreateExchangeRequestBody,
    ),
  );
}

export function plaidOpenBankingCreateExchangeRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PlaidOpenBankingCreateExchangeRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PlaidOpenBankingCreateExchangeRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PlaidOpenBankingCreateExchangeRequestBody' from JSON`,
  );
}
