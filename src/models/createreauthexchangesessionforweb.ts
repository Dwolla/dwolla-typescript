/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Create re-auth exchange session for web (Plaid web sessions where request body is optional)
 */
export type CreateReAuthExchangeSessionForWeb = {};

/** @internal */
export const CreateReAuthExchangeSessionForWeb$inboundSchema: z.ZodType<
  CreateReAuthExchangeSessionForWeb,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateReAuthExchangeSessionForWeb$Outbound = {};

/** @internal */
export const CreateReAuthExchangeSessionForWeb$outboundSchema: z.ZodType<
  CreateReAuthExchangeSessionForWeb$Outbound,
  z.ZodTypeDef,
  CreateReAuthExchangeSessionForWeb
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateReAuthExchangeSessionForWeb$ {
  /** @deprecated use `CreateReAuthExchangeSessionForWeb$inboundSchema` instead. */
  export const inboundSchema = CreateReAuthExchangeSessionForWeb$inboundSchema;
  /** @deprecated use `CreateReAuthExchangeSessionForWeb$outboundSchema` instead. */
  export const outboundSchema =
    CreateReAuthExchangeSessionForWeb$outboundSchema;
  /** @deprecated use `CreateReAuthExchangeSessionForWeb$Outbound` instead. */
  export type Outbound = CreateReAuthExchangeSessionForWeb$Outbound;
}

export function createReAuthExchangeSessionForWebToJSON(
  createReAuthExchangeSessionForWeb: CreateReAuthExchangeSessionForWeb,
): string {
  return JSON.stringify(
    CreateReAuthExchangeSessionForWeb$outboundSchema.parse(
      createReAuthExchangeSessionForWeb,
    ),
  );
}

export function createReAuthExchangeSessionForWebFromJSON(
  jsonString: string,
): SafeParseResult<CreateReAuthExchangeSessionForWeb, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateReAuthExchangeSessionForWeb$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateReAuthExchangeSessionForWeb' from JSON`,
  );
}
