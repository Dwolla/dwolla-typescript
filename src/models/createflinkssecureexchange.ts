/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CreateFlinksSecureExchangeExchangePartner = {
  href: string;
};

export type CreateFlinksSecureExchangeLinks = {
  exchangePartner: CreateFlinksSecureExchangeExchangePartner;
};

export type CreateFlinksSecureExchange = {
  links: CreateFlinksSecureExchangeLinks;
  /**
   * The Flinks connection token
   */
  token: string;
};

/** @internal */
export const CreateFlinksSecureExchangeExchangePartner$inboundSchema: z.ZodType<
  CreateFlinksSecureExchangeExchangePartner,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string(),
});

/** @internal */
export type CreateFlinksSecureExchangeExchangePartner$Outbound = {
  href: string;
};

/** @internal */
export const CreateFlinksSecureExchangeExchangePartner$outboundSchema:
  z.ZodType<
    CreateFlinksSecureExchangeExchangePartner$Outbound,
    z.ZodTypeDef,
    CreateFlinksSecureExchangeExchangePartner
  > = z.object({
    href: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFlinksSecureExchangeExchangePartner$ {
  /** @deprecated use `CreateFlinksSecureExchangeExchangePartner$inboundSchema` instead. */
  export const inboundSchema =
    CreateFlinksSecureExchangeExchangePartner$inboundSchema;
  /** @deprecated use `CreateFlinksSecureExchangeExchangePartner$outboundSchema` instead. */
  export const outboundSchema =
    CreateFlinksSecureExchangeExchangePartner$outboundSchema;
  /** @deprecated use `CreateFlinksSecureExchangeExchangePartner$Outbound` instead. */
  export type Outbound = CreateFlinksSecureExchangeExchangePartner$Outbound;
}

export function createFlinksSecureExchangeExchangePartnerToJSON(
  createFlinksSecureExchangeExchangePartner:
    CreateFlinksSecureExchangeExchangePartner,
): string {
  return JSON.stringify(
    CreateFlinksSecureExchangeExchangePartner$outboundSchema.parse(
      createFlinksSecureExchangeExchangePartner,
    ),
  );
}

export function createFlinksSecureExchangeExchangePartnerFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateFlinksSecureExchangeExchangePartner,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateFlinksSecureExchangeExchangePartner$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateFlinksSecureExchangeExchangePartner' from JSON`,
  );
}

/** @internal */
export const CreateFlinksSecureExchangeLinks$inboundSchema: z.ZodType<
  CreateFlinksSecureExchangeLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  "exchange-partner": z.lazy(() =>
    CreateFlinksSecureExchangeExchangePartner$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "exchange-partner": "exchangePartner",
  });
});

/** @internal */
export type CreateFlinksSecureExchangeLinks$Outbound = {
  "exchange-partner": CreateFlinksSecureExchangeExchangePartner$Outbound;
};

/** @internal */
export const CreateFlinksSecureExchangeLinks$outboundSchema: z.ZodType<
  CreateFlinksSecureExchangeLinks$Outbound,
  z.ZodTypeDef,
  CreateFlinksSecureExchangeLinks
> = z.object({
  exchangePartner: z.lazy(() =>
    CreateFlinksSecureExchangeExchangePartner$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    exchangePartner: "exchange-partner",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFlinksSecureExchangeLinks$ {
  /** @deprecated use `CreateFlinksSecureExchangeLinks$inboundSchema` instead. */
  export const inboundSchema = CreateFlinksSecureExchangeLinks$inboundSchema;
  /** @deprecated use `CreateFlinksSecureExchangeLinks$outboundSchema` instead. */
  export const outboundSchema = CreateFlinksSecureExchangeLinks$outboundSchema;
  /** @deprecated use `CreateFlinksSecureExchangeLinks$Outbound` instead. */
  export type Outbound = CreateFlinksSecureExchangeLinks$Outbound;
}

export function createFlinksSecureExchangeLinksToJSON(
  createFlinksSecureExchangeLinks: CreateFlinksSecureExchangeLinks,
): string {
  return JSON.stringify(
    CreateFlinksSecureExchangeLinks$outboundSchema.parse(
      createFlinksSecureExchangeLinks,
    ),
  );
}

export function createFlinksSecureExchangeLinksFromJSON(
  jsonString: string,
): SafeParseResult<CreateFlinksSecureExchangeLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateFlinksSecureExchangeLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateFlinksSecureExchangeLinks' from JSON`,
  );
}

/** @internal */
export const CreateFlinksSecureExchange$inboundSchema: z.ZodType<
  CreateFlinksSecureExchange,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => CreateFlinksSecureExchangeLinks$inboundSchema),
  token: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type CreateFlinksSecureExchange$Outbound = {
  _links: CreateFlinksSecureExchangeLinks$Outbound;
  token: string;
};

/** @internal */
export const CreateFlinksSecureExchange$outboundSchema: z.ZodType<
  CreateFlinksSecureExchange$Outbound,
  z.ZodTypeDef,
  CreateFlinksSecureExchange
> = z.object({
  links: z.lazy(() => CreateFlinksSecureExchangeLinks$outboundSchema),
  token: z.string(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFlinksSecureExchange$ {
  /** @deprecated use `CreateFlinksSecureExchange$inboundSchema` instead. */
  export const inboundSchema = CreateFlinksSecureExchange$inboundSchema;
  /** @deprecated use `CreateFlinksSecureExchange$outboundSchema` instead. */
  export const outboundSchema = CreateFlinksSecureExchange$outboundSchema;
  /** @deprecated use `CreateFlinksSecureExchange$Outbound` instead. */
  export type Outbound = CreateFlinksSecureExchange$Outbound;
}

export function createFlinksSecureExchangeToJSON(
  createFlinksSecureExchange: CreateFlinksSecureExchange,
): string {
  return JSON.stringify(
    CreateFlinksSecureExchange$outboundSchema.parse(createFlinksSecureExchange),
  );
}

export function createFlinksSecureExchangeFromJSON(
  jsonString: string,
): SafeParseResult<CreateFlinksSecureExchange, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateFlinksSecureExchange$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateFlinksSecureExchange' from JSON`,
  );
}
