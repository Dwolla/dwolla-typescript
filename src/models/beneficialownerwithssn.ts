/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  InternationalAddress,
  InternationalAddress$inboundSchema,
  InternationalAddress$Outbound,
  InternationalAddress$outboundSchema,
} from "./internationaladdress.js";

/**
 * Request body for creating and updating a Beneficial Owner with an SSN
 */
export type BeneficialOwnerWithSsn = {
  firstName: string;
  lastName: string;
  dateOfBirth: string;
  address: InternationalAddress;
  ssn: string;
};

/** @internal */
export const BeneficialOwnerWithSsn$inboundSchema: z.ZodType<
  BeneficialOwnerWithSsn,
  z.ZodTypeDef,
  unknown
> = z.object({
  firstName: z.string(),
  lastName: z.string(),
  dateOfBirth: z.string(),
  address: InternationalAddress$inboundSchema,
  ssn: z.string(),
});

/** @internal */
export type BeneficialOwnerWithSsn$Outbound = {
  firstName: string;
  lastName: string;
  dateOfBirth: string;
  address: InternationalAddress$Outbound;
  ssn: string;
};

/** @internal */
export const BeneficialOwnerWithSsn$outboundSchema: z.ZodType<
  BeneficialOwnerWithSsn$Outbound,
  z.ZodTypeDef,
  BeneficialOwnerWithSsn
> = z.object({
  firstName: z.string(),
  lastName: z.string(),
  dateOfBirth: z.string(),
  address: InternationalAddress$outboundSchema,
  ssn: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BeneficialOwnerWithSsn$ {
  /** @deprecated use `BeneficialOwnerWithSsn$inboundSchema` instead. */
  export const inboundSchema = BeneficialOwnerWithSsn$inboundSchema;
  /** @deprecated use `BeneficialOwnerWithSsn$outboundSchema` instead. */
  export const outboundSchema = BeneficialOwnerWithSsn$outboundSchema;
  /** @deprecated use `BeneficialOwnerWithSsn$Outbound` instead. */
  export type Outbound = BeneficialOwnerWithSsn$Outbound;
}

export function beneficialOwnerWithSsnToJSON(
  beneficialOwnerWithSsn: BeneficialOwnerWithSsn,
): string {
  return JSON.stringify(
    BeneficialOwnerWithSsn$outboundSchema.parse(beneficialOwnerWithSsn),
  );
}

export function beneficialOwnerWithSsnFromJSON(
  jsonString: string,
): SafeParseResult<BeneficialOwnerWithSsn, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BeneficialOwnerWithSsn$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BeneficialOwnerWithSsn' from JSON`,
  );
}
