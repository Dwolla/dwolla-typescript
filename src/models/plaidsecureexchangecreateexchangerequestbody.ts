/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner = {
  href?: string | undefined;
};

export type PlaidSecureExchangeCreateExchangeRequestBodyLinks = {
  exchangePartner?:
    | PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner
    | undefined;
};

export type PlaidSecureExchangeCreateExchangeRequestBody = {
  links?: PlaidSecureExchangeCreateExchangeRequestBodyLinks | undefined;
  token?: string | undefined;
};

/** @internal */
export const PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$inboundSchema:
  z.ZodType<
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner,
    z.ZodTypeDef,
    unknown
  > = z.object({
    href: z.string().optional(),
  });

/** @internal */
export type PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$Outbound =
  {
    href?: string | undefined;
  };

/** @internal */
export const PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$outboundSchema:
  z.ZodType<
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$Outbound,
    z.ZodTypeDef,
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner
  > = z.object({
    href: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$ {
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$inboundSchema` instead. */
  export const inboundSchema =
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$inboundSchema;
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$outboundSchema` instead. */
  export const outboundSchema =
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$outboundSchema;
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$Outbound` instead. */
  export type Outbound =
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$Outbound;
}

export function plaidSecureExchangeCreateExchangeRequestBodyExchangePartnerToJSON(
  plaidSecureExchangeCreateExchangeRequestBodyExchangePartner:
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner,
): string {
  return JSON.stringify(
    PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$outboundSchema
      .parse(plaidSecureExchangeCreateExchangeRequestBodyExchangePartner),
  );
}

export function plaidSecureExchangeCreateExchangeRequestBodyExchangePartnerFromJSON(
  jsonString: string,
): SafeParseResult<
  PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner' from JSON`,
  );
}

/** @internal */
export const PlaidSecureExchangeCreateExchangeRequestBodyLinks$inboundSchema:
  z.ZodType<
    PlaidSecureExchangeCreateExchangeRequestBodyLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "exchange-partner": z.lazy(() =>
      PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "exchange-partner": "exchangePartner",
    });
  });

/** @internal */
export type PlaidSecureExchangeCreateExchangeRequestBodyLinks$Outbound = {
  "exchange-partner"?:
    | PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$Outbound
    | undefined;
};

/** @internal */
export const PlaidSecureExchangeCreateExchangeRequestBodyLinks$outboundSchema:
  z.ZodType<
    PlaidSecureExchangeCreateExchangeRequestBodyLinks$Outbound,
    z.ZodTypeDef,
    PlaidSecureExchangeCreateExchangeRequestBodyLinks
  > = z.object({
    exchangePartner: z.lazy(() =>
      PlaidSecureExchangeCreateExchangeRequestBodyExchangePartner$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      exchangePartner: "exchange-partner",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlaidSecureExchangeCreateExchangeRequestBodyLinks$ {
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBodyLinks$inboundSchema` instead. */
  export const inboundSchema =
    PlaidSecureExchangeCreateExchangeRequestBodyLinks$inboundSchema;
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBodyLinks$outboundSchema` instead. */
  export const outboundSchema =
    PlaidSecureExchangeCreateExchangeRequestBodyLinks$outboundSchema;
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBodyLinks$Outbound` instead. */
  export type Outbound =
    PlaidSecureExchangeCreateExchangeRequestBodyLinks$Outbound;
}

export function plaidSecureExchangeCreateExchangeRequestBodyLinksToJSON(
  plaidSecureExchangeCreateExchangeRequestBodyLinks:
    PlaidSecureExchangeCreateExchangeRequestBodyLinks,
): string {
  return JSON.stringify(
    PlaidSecureExchangeCreateExchangeRequestBodyLinks$outboundSchema.parse(
      plaidSecureExchangeCreateExchangeRequestBodyLinks,
    ),
  );
}

export function plaidSecureExchangeCreateExchangeRequestBodyLinksFromJSON(
  jsonString: string,
): SafeParseResult<
  PlaidSecureExchangeCreateExchangeRequestBodyLinks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PlaidSecureExchangeCreateExchangeRequestBodyLinks$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PlaidSecureExchangeCreateExchangeRequestBodyLinks' from JSON`,
  );
}

/** @internal */
export const PlaidSecureExchangeCreateExchangeRequestBody$inboundSchema:
  z.ZodType<
    PlaidSecureExchangeCreateExchangeRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    _links: z.lazy(() =>
      PlaidSecureExchangeCreateExchangeRequestBodyLinks$inboundSchema
    ).optional(),
    token: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "_links": "links",
    });
  });

/** @internal */
export type PlaidSecureExchangeCreateExchangeRequestBody$Outbound = {
  _links?:
    | PlaidSecureExchangeCreateExchangeRequestBodyLinks$Outbound
    | undefined;
  token?: string | undefined;
};

/** @internal */
export const PlaidSecureExchangeCreateExchangeRequestBody$outboundSchema:
  z.ZodType<
    PlaidSecureExchangeCreateExchangeRequestBody$Outbound,
    z.ZodTypeDef,
    PlaidSecureExchangeCreateExchangeRequestBody
  > = z.object({
    links: z.lazy(() =>
      PlaidSecureExchangeCreateExchangeRequestBodyLinks$outboundSchema
    ).optional(),
    token: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      links: "_links",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlaidSecureExchangeCreateExchangeRequestBody$ {
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PlaidSecureExchangeCreateExchangeRequestBody$inboundSchema;
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PlaidSecureExchangeCreateExchangeRequestBody$outboundSchema;
  /** @deprecated use `PlaidSecureExchangeCreateExchangeRequestBody$Outbound` instead. */
  export type Outbound = PlaidSecureExchangeCreateExchangeRequestBody$Outbound;
}

export function plaidSecureExchangeCreateExchangeRequestBodyToJSON(
  plaidSecureExchangeCreateExchangeRequestBody:
    PlaidSecureExchangeCreateExchangeRequestBody,
): string {
  return JSON.stringify(
    PlaidSecureExchangeCreateExchangeRequestBody$outboundSchema.parse(
      plaidSecureExchangeCreateExchangeRequestBody,
    ),
  );
}

export function plaidSecureExchangeCreateExchangeRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  PlaidSecureExchangeCreateExchangeRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PlaidSecureExchangeCreateExchangeRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PlaidSecureExchangeCreateExchangeRequestBody' from JSON`,
  );
}
