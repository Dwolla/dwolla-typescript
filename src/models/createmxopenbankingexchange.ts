/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CreateMXOpenBankingExchangeExchangePartner = {
  href: string;
};

export type CreateMXOpenBankingExchangeLinks = {
  exchangePartner: CreateMXOpenBankingExchangeExchangePartner;
};

export type Mx = {
  /**
   * The MX connection token for the available connection
   */
  availableConnectionToken: string;
};

export type CreateMXOpenBankingExchange = {
  links: CreateMXOpenBankingExchangeLinks;
  mx: Mx;
};

/** @internal */
export const CreateMXOpenBankingExchangeExchangePartner$inboundSchema:
  z.ZodType<CreateMXOpenBankingExchangeExchangePartner, z.ZodTypeDef, unknown> =
    z.object({
      href: z.string(),
    });

/** @internal */
export type CreateMXOpenBankingExchangeExchangePartner$Outbound = {
  href: string;
};

/** @internal */
export const CreateMXOpenBankingExchangeExchangePartner$outboundSchema:
  z.ZodType<
    CreateMXOpenBankingExchangeExchangePartner$Outbound,
    z.ZodTypeDef,
    CreateMXOpenBankingExchangeExchangePartner
  > = z.object({
    href: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateMXOpenBankingExchangeExchangePartner$ {
  /** @deprecated use `CreateMXOpenBankingExchangeExchangePartner$inboundSchema` instead. */
  export const inboundSchema =
    CreateMXOpenBankingExchangeExchangePartner$inboundSchema;
  /** @deprecated use `CreateMXOpenBankingExchangeExchangePartner$outboundSchema` instead. */
  export const outboundSchema =
    CreateMXOpenBankingExchangeExchangePartner$outboundSchema;
  /** @deprecated use `CreateMXOpenBankingExchangeExchangePartner$Outbound` instead. */
  export type Outbound = CreateMXOpenBankingExchangeExchangePartner$Outbound;
}

export function createMXOpenBankingExchangeExchangePartnerToJSON(
  createMXOpenBankingExchangeExchangePartner:
    CreateMXOpenBankingExchangeExchangePartner,
): string {
  return JSON.stringify(
    CreateMXOpenBankingExchangeExchangePartner$outboundSchema.parse(
      createMXOpenBankingExchangeExchangePartner,
    ),
  );
}

export function createMXOpenBankingExchangeExchangePartnerFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateMXOpenBankingExchangeExchangePartner,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateMXOpenBankingExchangeExchangePartner$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateMXOpenBankingExchangeExchangePartner' from JSON`,
  );
}

/** @internal */
export const CreateMXOpenBankingExchangeLinks$inboundSchema: z.ZodType<
  CreateMXOpenBankingExchangeLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  "exchange-partner": z.lazy(() =>
    CreateMXOpenBankingExchangeExchangePartner$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "exchange-partner": "exchangePartner",
  });
});

/** @internal */
export type CreateMXOpenBankingExchangeLinks$Outbound = {
  "exchange-partner": CreateMXOpenBankingExchangeExchangePartner$Outbound;
};

/** @internal */
export const CreateMXOpenBankingExchangeLinks$outboundSchema: z.ZodType<
  CreateMXOpenBankingExchangeLinks$Outbound,
  z.ZodTypeDef,
  CreateMXOpenBankingExchangeLinks
> = z.object({
  exchangePartner: z.lazy(() =>
    CreateMXOpenBankingExchangeExchangePartner$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    exchangePartner: "exchange-partner",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateMXOpenBankingExchangeLinks$ {
  /** @deprecated use `CreateMXOpenBankingExchangeLinks$inboundSchema` instead. */
  export const inboundSchema = CreateMXOpenBankingExchangeLinks$inboundSchema;
  /** @deprecated use `CreateMXOpenBankingExchangeLinks$outboundSchema` instead. */
  export const outboundSchema = CreateMXOpenBankingExchangeLinks$outboundSchema;
  /** @deprecated use `CreateMXOpenBankingExchangeLinks$Outbound` instead. */
  export type Outbound = CreateMXOpenBankingExchangeLinks$Outbound;
}

export function createMXOpenBankingExchangeLinksToJSON(
  createMXOpenBankingExchangeLinks: CreateMXOpenBankingExchangeLinks,
): string {
  return JSON.stringify(
    CreateMXOpenBankingExchangeLinks$outboundSchema.parse(
      createMXOpenBankingExchangeLinks,
    ),
  );
}

export function createMXOpenBankingExchangeLinksFromJSON(
  jsonString: string,
): SafeParseResult<CreateMXOpenBankingExchangeLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateMXOpenBankingExchangeLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateMXOpenBankingExchangeLinks' from JSON`,
  );
}

/** @internal */
export const Mx$inboundSchema: z.ZodType<Mx, z.ZodTypeDef, unknown> = z.object({
  availableConnectionToken: z.string(),
});

/** @internal */
export type Mx$Outbound = {
  availableConnectionToken: string;
};

/** @internal */
export const Mx$outboundSchema: z.ZodType<Mx$Outbound, z.ZodTypeDef, Mx> = z
  .object({
    availableConnectionToken: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Mx$ {
  /** @deprecated use `Mx$inboundSchema` instead. */
  export const inboundSchema = Mx$inboundSchema;
  /** @deprecated use `Mx$outboundSchema` instead. */
  export const outboundSchema = Mx$outboundSchema;
  /** @deprecated use `Mx$Outbound` instead. */
  export type Outbound = Mx$Outbound;
}

export function mxToJSON(mx: Mx): string {
  return JSON.stringify(Mx$outboundSchema.parse(mx));
}

export function mxFromJSON(
  jsonString: string,
): SafeParseResult<Mx, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Mx$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Mx' from JSON`,
  );
}

/** @internal */
export const CreateMXOpenBankingExchange$inboundSchema: z.ZodType<
  CreateMXOpenBankingExchange,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => CreateMXOpenBankingExchangeLinks$inboundSchema),
  mx: z.lazy(() => Mx$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type CreateMXOpenBankingExchange$Outbound = {
  _links: CreateMXOpenBankingExchangeLinks$Outbound;
  mx: Mx$Outbound;
};

/** @internal */
export const CreateMXOpenBankingExchange$outboundSchema: z.ZodType<
  CreateMXOpenBankingExchange$Outbound,
  z.ZodTypeDef,
  CreateMXOpenBankingExchange
> = z.object({
  links: z.lazy(() => CreateMXOpenBankingExchangeLinks$outboundSchema),
  mx: z.lazy(() => Mx$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateMXOpenBankingExchange$ {
  /** @deprecated use `CreateMXOpenBankingExchange$inboundSchema` instead. */
  export const inboundSchema = CreateMXOpenBankingExchange$inboundSchema;
  /** @deprecated use `CreateMXOpenBankingExchange$outboundSchema` instead. */
  export const outboundSchema = CreateMXOpenBankingExchange$outboundSchema;
  /** @deprecated use `CreateMXOpenBankingExchange$Outbound` instead. */
  export type Outbound = CreateMXOpenBankingExchange$Outbound;
}

export function createMXOpenBankingExchangeToJSON(
  createMXOpenBankingExchange: CreateMXOpenBankingExchange,
): string {
  return JSON.stringify(
    CreateMXOpenBankingExchange$outboundSchema.parse(
      createMXOpenBankingExchange,
    ),
  );
}

export function createMXOpenBankingExchangeFromJSON(
  jsonString: string,
): SafeParseResult<CreateMXOpenBankingExchange, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateMXOpenBankingExchange$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateMXOpenBankingExchange' from JSON`,
  );
}
