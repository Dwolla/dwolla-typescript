/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type InvalidCorrelationIdErrorLinks = {};

export type InvalidCorrelationIdErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  links?: InvalidCorrelationIdErrorLinks | undefined;
};

export type InvalidCorrelationIdErrorEmbedded = {
  errors?: Array<InvalidCorrelationIdErrorError> | undefined;
};

/** @internal */
export const InvalidCorrelationIdErrorLinks$inboundSchema: z.ZodType<
  InvalidCorrelationIdErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type InvalidCorrelationIdErrorLinks$Outbound = {};

/** @internal */
export const InvalidCorrelationIdErrorLinks$outboundSchema: z.ZodType<
  InvalidCorrelationIdErrorLinks$Outbound,
  z.ZodTypeDef,
  InvalidCorrelationIdErrorLinks
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvalidCorrelationIdErrorLinks$ {
  /** @deprecated use `InvalidCorrelationIdErrorLinks$inboundSchema` instead. */
  export const inboundSchema = InvalidCorrelationIdErrorLinks$inboundSchema;
  /** @deprecated use `InvalidCorrelationIdErrorLinks$outboundSchema` instead. */
  export const outboundSchema = InvalidCorrelationIdErrorLinks$outboundSchema;
  /** @deprecated use `InvalidCorrelationIdErrorLinks$Outbound` instead. */
  export type Outbound = InvalidCorrelationIdErrorLinks$Outbound;
}

export function invalidCorrelationIdErrorLinksToJSON(
  invalidCorrelationIdErrorLinks: InvalidCorrelationIdErrorLinks,
): string {
  return JSON.stringify(
    InvalidCorrelationIdErrorLinks$outboundSchema.parse(
      invalidCorrelationIdErrorLinks,
    ),
  );
}

export function invalidCorrelationIdErrorLinksFromJSON(
  jsonString: string,
): SafeParseResult<InvalidCorrelationIdErrorLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvalidCorrelationIdErrorLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvalidCorrelationIdErrorLinks' from JSON`,
  );
}

/** @internal */
export const InvalidCorrelationIdErrorError$inboundSchema: z.ZodType<
  InvalidCorrelationIdErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
  _links: z.lazy(() => InvalidCorrelationIdErrorLinks$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type InvalidCorrelationIdErrorError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: InvalidCorrelationIdErrorLinks$Outbound | undefined;
};

/** @internal */
export const InvalidCorrelationIdErrorError$outboundSchema: z.ZodType<
  InvalidCorrelationIdErrorError$Outbound,
  z.ZodTypeDef,
  InvalidCorrelationIdErrorError
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
  links: z.lazy(() => InvalidCorrelationIdErrorLinks$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvalidCorrelationIdErrorError$ {
  /** @deprecated use `InvalidCorrelationIdErrorError$inboundSchema` instead. */
  export const inboundSchema = InvalidCorrelationIdErrorError$inboundSchema;
  /** @deprecated use `InvalidCorrelationIdErrorError$outboundSchema` instead. */
  export const outboundSchema = InvalidCorrelationIdErrorError$outboundSchema;
  /** @deprecated use `InvalidCorrelationIdErrorError$Outbound` instead. */
  export type Outbound = InvalidCorrelationIdErrorError$Outbound;
}

export function invalidCorrelationIdErrorErrorToJSON(
  invalidCorrelationIdErrorError: InvalidCorrelationIdErrorError,
): string {
  return JSON.stringify(
    InvalidCorrelationIdErrorError$outboundSchema.parse(
      invalidCorrelationIdErrorError,
    ),
  );
}

export function invalidCorrelationIdErrorErrorFromJSON(
  jsonString: string,
): SafeParseResult<InvalidCorrelationIdErrorError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvalidCorrelationIdErrorError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvalidCorrelationIdErrorError' from JSON`,
  );
}

/** @internal */
export const InvalidCorrelationIdErrorEmbedded$inboundSchema: z.ZodType<
  InvalidCorrelationIdErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => InvalidCorrelationIdErrorError$inboundSchema))
    .optional(),
});

/** @internal */
export type InvalidCorrelationIdErrorEmbedded$Outbound = {
  errors?: Array<InvalidCorrelationIdErrorError$Outbound> | undefined;
};

/** @internal */
export const InvalidCorrelationIdErrorEmbedded$outboundSchema: z.ZodType<
  InvalidCorrelationIdErrorEmbedded$Outbound,
  z.ZodTypeDef,
  InvalidCorrelationIdErrorEmbedded
> = z.object({
  errors: z.array(z.lazy(() => InvalidCorrelationIdErrorError$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvalidCorrelationIdErrorEmbedded$ {
  /** @deprecated use `InvalidCorrelationIdErrorEmbedded$inboundSchema` instead. */
  export const inboundSchema = InvalidCorrelationIdErrorEmbedded$inboundSchema;
  /** @deprecated use `InvalidCorrelationIdErrorEmbedded$outboundSchema` instead. */
  export const outboundSchema =
    InvalidCorrelationIdErrorEmbedded$outboundSchema;
  /** @deprecated use `InvalidCorrelationIdErrorEmbedded$Outbound` instead. */
  export type Outbound = InvalidCorrelationIdErrorEmbedded$Outbound;
}

export function invalidCorrelationIdErrorEmbeddedToJSON(
  invalidCorrelationIdErrorEmbedded: InvalidCorrelationIdErrorEmbedded,
): string {
  return JSON.stringify(
    InvalidCorrelationIdErrorEmbedded$outboundSchema.parse(
      invalidCorrelationIdErrorEmbedded,
    ),
  );
}

export function invalidCorrelationIdErrorEmbeddedFromJSON(
  jsonString: string,
): SafeParseResult<InvalidCorrelationIdErrorEmbedded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvalidCorrelationIdErrorEmbedded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvalidCorrelationIdErrorEmbedded' from JSON`,
  );
}
