/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type WireAccountRestrictedErrorLinks = {};

export type WireAccountRestrictedErrorError = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  links?: WireAccountRestrictedErrorLinks | undefined;
};

export type WireAccountRestrictedErrorEmbedded = {
  errors?: Array<WireAccountRestrictedErrorError> | undefined;
};

/** @internal */
export const WireAccountRestrictedErrorLinks$inboundSchema: z.ZodType<
  WireAccountRestrictedErrorLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type WireAccountRestrictedErrorLinks$Outbound = {};

/** @internal */
export const WireAccountRestrictedErrorLinks$outboundSchema: z.ZodType<
  WireAccountRestrictedErrorLinks$Outbound,
  z.ZodTypeDef,
  WireAccountRestrictedErrorLinks
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WireAccountRestrictedErrorLinks$ {
  /** @deprecated use `WireAccountRestrictedErrorLinks$inboundSchema` instead. */
  export const inboundSchema = WireAccountRestrictedErrorLinks$inboundSchema;
  /** @deprecated use `WireAccountRestrictedErrorLinks$outboundSchema` instead. */
  export const outboundSchema = WireAccountRestrictedErrorLinks$outboundSchema;
  /** @deprecated use `WireAccountRestrictedErrorLinks$Outbound` instead. */
  export type Outbound = WireAccountRestrictedErrorLinks$Outbound;
}

export function wireAccountRestrictedErrorLinksToJSON(
  wireAccountRestrictedErrorLinks: WireAccountRestrictedErrorLinks,
): string {
  return JSON.stringify(
    WireAccountRestrictedErrorLinks$outboundSchema.parse(
      wireAccountRestrictedErrorLinks,
    ),
  );
}

export function wireAccountRestrictedErrorLinksFromJSON(
  jsonString: string,
): SafeParseResult<WireAccountRestrictedErrorLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WireAccountRestrictedErrorLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WireAccountRestrictedErrorLinks' from JSON`,
  );
}

/** @internal */
export const WireAccountRestrictedErrorError$inboundSchema: z.ZodType<
  WireAccountRestrictedErrorError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
  _links: z.lazy(() => WireAccountRestrictedErrorLinks$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type WireAccountRestrictedErrorError$Outbound = {
  code?: string | undefined;
  message?: string | undefined;
  path?: string | undefined;
  _links?: WireAccountRestrictedErrorLinks$Outbound | undefined;
};

/** @internal */
export const WireAccountRestrictedErrorError$outboundSchema: z.ZodType<
  WireAccountRestrictedErrorError$Outbound,
  z.ZodTypeDef,
  WireAccountRestrictedErrorError
> = z.object({
  code: z.string().optional(),
  message: z.string().optional(),
  path: z.string().optional(),
  links: z.lazy(() => WireAccountRestrictedErrorLinks$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WireAccountRestrictedErrorError$ {
  /** @deprecated use `WireAccountRestrictedErrorError$inboundSchema` instead. */
  export const inboundSchema = WireAccountRestrictedErrorError$inboundSchema;
  /** @deprecated use `WireAccountRestrictedErrorError$outboundSchema` instead. */
  export const outboundSchema = WireAccountRestrictedErrorError$outboundSchema;
  /** @deprecated use `WireAccountRestrictedErrorError$Outbound` instead. */
  export type Outbound = WireAccountRestrictedErrorError$Outbound;
}

export function wireAccountRestrictedErrorErrorToJSON(
  wireAccountRestrictedErrorError: WireAccountRestrictedErrorError,
): string {
  return JSON.stringify(
    WireAccountRestrictedErrorError$outboundSchema.parse(
      wireAccountRestrictedErrorError,
    ),
  );
}

export function wireAccountRestrictedErrorErrorFromJSON(
  jsonString: string,
): SafeParseResult<WireAccountRestrictedErrorError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WireAccountRestrictedErrorError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WireAccountRestrictedErrorError' from JSON`,
  );
}

/** @internal */
export const WireAccountRestrictedErrorEmbedded$inboundSchema: z.ZodType<
  WireAccountRestrictedErrorEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  errors: z.array(z.lazy(() => WireAccountRestrictedErrorError$inboundSchema))
    .optional(),
});

/** @internal */
export type WireAccountRestrictedErrorEmbedded$Outbound = {
  errors?: Array<WireAccountRestrictedErrorError$Outbound> | undefined;
};

/** @internal */
export const WireAccountRestrictedErrorEmbedded$outboundSchema: z.ZodType<
  WireAccountRestrictedErrorEmbedded$Outbound,
  z.ZodTypeDef,
  WireAccountRestrictedErrorEmbedded
> = z.object({
  errors: z.array(z.lazy(() => WireAccountRestrictedErrorError$outboundSchema))
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WireAccountRestrictedErrorEmbedded$ {
  /** @deprecated use `WireAccountRestrictedErrorEmbedded$inboundSchema` instead. */
  export const inboundSchema = WireAccountRestrictedErrorEmbedded$inboundSchema;
  /** @deprecated use `WireAccountRestrictedErrorEmbedded$outboundSchema` instead. */
  export const outboundSchema =
    WireAccountRestrictedErrorEmbedded$outboundSchema;
  /** @deprecated use `WireAccountRestrictedErrorEmbedded$Outbound` instead. */
  export type Outbound = WireAccountRestrictedErrorEmbedded$Outbound;
}

export function wireAccountRestrictedErrorEmbeddedToJSON(
  wireAccountRestrictedErrorEmbedded: WireAccountRestrictedErrorEmbedded,
): string {
  return JSON.stringify(
    WireAccountRestrictedErrorEmbedded$outboundSchema.parse(
      wireAccountRestrictedErrorEmbedded,
    ),
  );
}

export function wireAccountRestrictedErrorEmbeddedFromJSON(
  jsonString: string,
): SafeParseResult<WireAccountRestrictedErrorEmbedded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      WireAccountRestrictedErrorEmbedded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WireAccountRestrictedErrorEmbedded' from JSON`,
  );
}
