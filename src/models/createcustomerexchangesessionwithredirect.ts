/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type CreateCustomerExchangeSessionWithRedirectExchangePartner = {
  href: string;
};

export type CreateCustomerExchangeSessionWithRedirectRedirectUrl = {
  /**
   * Required for Visa and Plaid mobile sessions
   */
  href: string;
};

export type CreateCustomerExchangeSessionWithRedirectLinks = {
  exchangePartner: CreateCustomerExchangeSessionWithRedirectExchangePartner;
  redirectUrl: CreateCustomerExchangeSessionWithRedirectRedirectUrl;
};

/**
 * Create exchange session with redirect URL (required for Visa and for mobile sessions with Plaid)
 */
export type CreateCustomerExchangeSessionWithRedirect = {
  links: CreateCustomerExchangeSessionWithRedirectLinks;
};

/** @internal */
export const CreateCustomerExchangeSessionWithRedirectExchangePartner$inboundSchema:
  z.ZodType<
    CreateCustomerExchangeSessionWithRedirectExchangePartner,
    z.ZodTypeDef,
    unknown
  > = z.object({
    href: z.string(),
  });

/** @internal */
export type CreateCustomerExchangeSessionWithRedirectExchangePartner$Outbound =
  {
    href: string;
  };

/** @internal */
export const CreateCustomerExchangeSessionWithRedirectExchangePartner$outboundSchema:
  z.ZodType<
    CreateCustomerExchangeSessionWithRedirectExchangePartner$Outbound,
    z.ZodTypeDef,
    CreateCustomerExchangeSessionWithRedirectExchangePartner
  > = z.object({
    href: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerExchangeSessionWithRedirectExchangePartner$ {
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectExchangePartner$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerExchangeSessionWithRedirectExchangePartner$inboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectExchangePartner$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerExchangeSessionWithRedirectExchangePartner$outboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectExchangePartner$Outbound` instead. */
  export type Outbound =
    CreateCustomerExchangeSessionWithRedirectExchangePartner$Outbound;
}

export function createCustomerExchangeSessionWithRedirectExchangePartnerToJSON(
  createCustomerExchangeSessionWithRedirectExchangePartner:
    CreateCustomerExchangeSessionWithRedirectExchangePartner,
): string {
  return JSON.stringify(
    CreateCustomerExchangeSessionWithRedirectExchangePartner$outboundSchema
      .parse(createCustomerExchangeSessionWithRedirectExchangePartner),
  );
}

export function createCustomerExchangeSessionWithRedirectExchangePartnerFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerExchangeSessionWithRedirectExchangePartner,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerExchangeSessionWithRedirectExchangePartner$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerExchangeSessionWithRedirectExchangePartner' from JSON`,
  );
}

/** @internal */
export const CreateCustomerExchangeSessionWithRedirectRedirectUrl$inboundSchema:
  z.ZodType<
    CreateCustomerExchangeSessionWithRedirectRedirectUrl,
    z.ZodTypeDef,
    unknown
  > = z.object({
    href: z.string(),
  });

/** @internal */
export type CreateCustomerExchangeSessionWithRedirectRedirectUrl$Outbound = {
  href: string;
};

/** @internal */
export const CreateCustomerExchangeSessionWithRedirectRedirectUrl$outboundSchema:
  z.ZodType<
    CreateCustomerExchangeSessionWithRedirectRedirectUrl$Outbound,
    z.ZodTypeDef,
    CreateCustomerExchangeSessionWithRedirectRedirectUrl
  > = z.object({
    href: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerExchangeSessionWithRedirectRedirectUrl$ {
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectRedirectUrl$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerExchangeSessionWithRedirectRedirectUrl$inboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectRedirectUrl$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerExchangeSessionWithRedirectRedirectUrl$outboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectRedirectUrl$Outbound` instead. */
  export type Outbound =
    CreateCustomerExchangeSessionWithRedirectRedirectUrl$Outbound;
}

export function createCustomerExchangeSessionWithRedirectRedirectUrlToJSON(
  createCustomerExchangeSessionWithRedirectRedirectUrl:
    CreateCustomerExchangeSessionWithRedirectRedirectUrl,
): string {
  return JSON.stringify(
    CreateCustomerExchangeSessionWithRedirectRedirectUrl$outboundSchema.parse(
      createCustomerExchangeSessionWithRedirectRedirectUrl,
    ),
  );
}

export function createCustomerExchangeSessionWithRedirectRedirectUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerExchangeSessionWithRedirectRedirectUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerExchangeSessionWithRedirectRedirectUrl$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCustomerExchangeSessionWithRedirectRedirectUrl' from JSON`,
  );
}

/** @internal */
export const CreateCustomerExchangeSessionWithRedirectLinks$inboundSchema:
  z.ZodType<
    CreateCustomerExchangeSessionWithRedirectLinks,
    z.ZodTypeDef,
    unknown
  > = z.object({
    "exchange-partner": z.lazy(() =>
      CreateCustomerExchangeSessionWithRedirectExchangePartner$inboundSchema
    ),
    "redirect-url": z.lazy(() =>
      CreateCustomerExchangeSessionWithRedirectRedirectUrl$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "exchange-partner": "exchangePartner",
      "redirect-url": "redirectUrl",
    });
  });

/** @internal */
export type CreateCustomerExchangeSessionWithRedirectLinks$Outbound = {
  "exchange-partner":
    CreateCustomerExchangeSessionWithRedirectExchangePartner$Outbound;
  "redirect-url": CreateCustomerExchangeSessionWithRedirectRedirectUrl$Outbound;
};

/** @internal */
export const CreateCustomerExchangeSessionWithRedirectLinks$outboundSchema:
  z.ZodType<
    CreateCustomerExchangeSessionWithRedirectLinks$Outbound,
    z.ZodTypeDef,
    CreateCustomerExchangeSessionWithRedirectLinks
  > = z.object({
    exchangePartner: z.lazy(() =>
      CreateCustomerExchangeSessionWithRedirectExchangePartner$outboundSchema
    ),
    redirectUrl: z.lazy(() =>
      CreateCustomerExchangeSessionWithRedirectRedirectUrl$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      exchangePartner: "exchange-partner",
      redirectUrl: "redirect-url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerExchangeSessionWithRedirectLinks$ {
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectLinks$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerExchangeSessionWithRedirectLinks$inboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectLinks$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerExchangeSessionWithRedirectLinks$outboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirectLinks$Outbound` instead. */
  export type Outbound =
    CreateCustomerExchangeSessionWithRedirectLinks$Outbound;
}

export function createCustomerExchangeSessionWithRedirectLinksToJSON(
  createCustomerExchangeSessionWithRedirectLinks:
    CreateCustomerExchangeSessionWithRedirectLinks,
): string {
  return JSON.stringify(
    CreateCustomerExchangeSessionWithRedirectLinks$outboundSchema.parse(
      createCustomerExchangeSessionWithRedirectLinks,
    ),
  );
}

export function createCustomerExchangeSessionWithRedirectLinksFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerExchangeSessionWithRedirectLinks,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerExchangeSessionWithRedirectLinks$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCustomerExchangeSessionWithRedirectLinks' from JSON`,
  );
}

/** @internal */
export const CreateCustomerExchangeSessionWithRedirect$inboundSchema: z.ZodType<
  CreateCustomerExchangeSessionWithRedirect,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() =>
    CreateCustomerExchangeSessionWithRedirectLinks$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type CreateCustomerExchangeSessionWithRedirect$Outbound = {
  _links: CreateCustomerExchangeSessionWithRedirectLinks$Outbound;
};

/** @internal */
export const CreateCustomerExchangeSessionWithRedirect$outboundSchema:
  z.ZodType<
    CreateCustomerExchangeSessionWithRedirect$Outbound,
    z.ZodTypeDef,
    CreateCustomerExchangeSessionWithRedirect
  > = z.object({
    links: z.lazy(() =>
      CreateCustomerExchangeSessionWithRedirectLinks$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      links: "_links",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerExchangeSessionWithRedirect$ {
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirect$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerExchangeSessionWithRedirect$inboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirect$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerExchangeSessionWithRedirect$outboundSchema;
  /** @deprecated use `CreateCustomerExchangeSessionWithRedirect$Outbound` instead. */
  export type Outbound = CreateCustomerExchangeSessionWithRedirect$Outbound;
}

export function createCustomerExchangeSessionWithRedirectToJSON(
  createCustomerExchangeSessionWithRedirect:
    CreateCustomerExchangeSessionWithRedirect,
): string {
  return JSON.stringify(
    CreateCustomerExchangeSessionWithRedirect$outboundSchema.parse(
      createCustomerExchangeSessionWithRedirect,
    ),
  );
}

export function createCustomerExchangeSessionWithRedirectFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerExchangeSessionWithRedirect,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerExchangeSessionWithRedirect$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCustomerExchangeSessionWithRedirect' from JSON`,
  );
}
