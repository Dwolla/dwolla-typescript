/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Request body for removing a bank funding source
 */
export type RemoveBank = {
  removed: boolean;
};

/** @internal */
export const RemoveBank$inboundSchema: z.ZodType<
  RemoveBank,
  z.ZodTypeDef,
  unknown
> = z.object({
  removed: z.boolean(),
});

/** @internal */
export type RemoveBank$Outbound = {
  removed: boolean;
};

/** @internal */
export const RemoveBank$outboundSchema: z.ZodType<
  RemoveBank$Outbound,
  z.ZodTypeDef,
  RemoveBank
> = z.object({
  removed: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveBank$ {
  /** @deprecated use `RemoveBank$inboundSchema` instead. */
  export const inboundSchema = RemoveBank$inboundSchema;
  /** @deprecated use `RemoveBank$outboundSchema` instead. */
  export const outboundSchema = RemoveBank$outboundSchema;
  /** @deprecated use `RemoveBank$Outbound` instead. */
  export type Outbound = RemoveBank$Outbound;
}

export function removeBankToJSON(removeBank: RemoveBank): string {
  return JSON.stringify(RemoveBank$outboundSchema.parse(removeBank));
}

export function removeBankFromJSON(
  jsonString: string,
): SafeParseResult<RemoveBank, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RemoveBank$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RemoveBank' from JSON`,
  );
}
