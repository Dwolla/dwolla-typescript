/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListAccountMassPaymentsRequest = {
  /**
   * Account ID
   */
  id: string;
  /**
   * How many results to return.
   */
  limit?: number | undefined;
  /**
   * How many results to skip.
   */
  offset?: number | undefined;
  /**
   * Correlation ID to search by.
   */
  correlationId?: string | undefined;
};

/** @internal */
export const ListAccountMassPaymentsRequest$inboundSchema: z.ZodType<
  ListAccountMassPaymentsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  limit: z.number().int().default(25),
  offset: z.number().int().default(0),
  correlationId: z.string().optional(),
});

/** @internal */
export type ListAccountMassPaymentsRequest$Outbound = {
  id: string;
  limit: number;
  offset: number;
  correlationId?: string | undefined;
};

/** @internal */
export const ListAccountMassPaymentsRequest$outboundSchema: z.ZodType<
  ListAccountMassPaymentsRequest$Outbound,
  z.ZodTypeDef,
  ListAccountMassPaymentsRequest
> = z.object({
  id: z.string(),
  limit: z.number().int().default(25),
  offset: z.number().int().default(0),
  correlationId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListAccountMassPaymentsRequest$ {
  /** @deprecated use `ListAccountMassPaymentsRequest$inboundSchema` instead. */
  export const inboundSchema = ListAccountMassPaymentsRequest$inboundSchema;
  /** @deprecated use `ListAccountMassPaymentsRequest$outboundSchema` instead. */
  export const outboundSchema = ListAccountMassPaymentsRequest$outboundSchema;
  /** @deprecated use `ListAccountMassPaymentsRequest$Outbound` instead. */
  export type Outbound = ListAccountMassPaymentsRequest$Outbound;
}

export function listAccountMassPaymentsRequestToJSON(
  listAccountMassPaymentsRequest: ListAccountMassPaymentsRequest,
): string {
  return JSON.stringify(
    ListAccountMassPaymentsRequest$outboundSchema.parse(
      listAccountMassPaymentsRequest,
    ),
  );
}

export function listAccountMassPaymentsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListAccountMassPaymentsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListAccountMassPaymentsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListAccountMassPaymentsRequest' from JSON`,
  );
}
