/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateCustomerFundingSourceTokenRequest = {
  /**
   * Customer's unique identifier
   */
  id: string;
};

export type CreateCustomerFundingSourceTokenSelf = {
  href?: string | undefined;
};

export type CreateCustomerFundingSourceTokenLinks = {
  self?: CreateCustomerFundingSourceTokenSelf | undefined;
};

export type CreateCustomerFundingSourceTokenToken = {};

/**
 * successful operation
 */
export type CreateCustomerFundingSourceTokenResponse = {
  links?: CreateCustomerFundingSourceTokenLinks | undefined;
  token?: CreateCustomerFundingSourceTokenToken | undefined;
};

/** @internal */
export const CreateCustomerFundingSourceTokenRequest$inboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type CreateCustomerFundingSourceTokenRequest$Outbound = {
  id: string;
};

/** @internal */
export const CreateCustomerFundingSourceTokenRequest$outboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenRequest$Outbound,
  z.ZodTypeDef,
  CreateCustomerFundingSourceTokenRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerFundingSourceTokenRequest$ {
  /** @deprecated use `CreateCustomerFundingSourceTokenRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerFundingSourceTokenRequest$inboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerFundingSourceTokenRequest$outboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenRequest$Outbound` instead. */
  export type Outbound = CreateCustomerFundingSourceTokenRequest$Outbound;
}

export function createCustomerFundingSourceTokenRequestToJSON(
  createCustomerFundingSourceTokenRequest:
    CreateCustomerFundingSourceTokenRequest,
): string {
  return JSON.stringify(
    CreateCustomerFundingSourceTokenRequest$outboundSchema.parse(
      createCustomerFundingSourceTokenRequest,
    ),
  );
}

export function createCustomerFundingSourceTokenRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerFundingSourceTokenRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerFundingSourceTokenRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCustomerFundingSourceTokenRequest' from JSON`,
  );
}

/** @internal */
export const CreateCustomerFundingSourceTokenSelf$inboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type CreateCustomerFundingSourceTokenSelf$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const CreateCustomerFundingSourceTokenSelf$outboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenSelf$Outbound,
  z.ZodTypeDef,
  CreateCustomerFundingSourceTokenSelf
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerFundingSourceTokenSelf$ {
  /** @deprecated use `CreateCustomerFundingSourceTokenSelf$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerFundingSourceTokenSelf$inboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenSelf$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerFundingSourceTokenSelf$outboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenSelf$Outbound` instead. */
  export type Outbound = CreateCustomerFundingSourceTokenSelf$Outbound;
}

export function createCustomerFundingSourceTokenSelfToJSON(
  createCustomerFundingSourceTokenSelf: CreateCustomerFundingSourceTokenSelf,
): string {
  return JSON.stringify(
    CreateCustomerFundingSourceTokenSelf$outboundSchema.parse(
      createCustomerFundingSourceTokenSelf,
    ),
  );
}

export function createCustomerFundingSourceTokenSelfFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerFundingSourceTokenSelf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerFundingSourceTokenSelf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerFundingSourceTokenSelf' from JSON`,
  );
}

/** @internal */
export const CreateCustomerFundingSourceTokenLinks$inboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => CreateCustomerFundingSourceTokenSelf$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateCustomerFundingSourceTokenLinks$Outbound = {
  self?: CreateCustomerFundingSourceTokenSelf$Outbound | undefined;
};

/** @internal */
export const CreateCustomerFundingSourceTokenLinks$outboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenLinks$Outbound,
  z.ZodTypeDef,
  CreateCustomerFundingSourceTokenLinks
> = z.object({
  self: z.lazy(() => CreateCustomerFundingSourceTokenSelf$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerFundingSourceTokenLinks$ {
  /** @deprecated use `CreateCustomerFundingSourceTokenLinks$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerFundingSourceTokenLinks$inboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenLinks$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerFundingSourceTokenLinks$outboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenLinks$Outbound` instead. */
  export type Outbound = CreateCustomerFundingSourceTokenLinks$Outbound;
}

export function createCustomerFundingSourceTokenLinksToJSON(
  createCustomerFundingSourceTokenLinks: CreateCustomerFundingSourceTokenLinks,
): string {
  return JSON.stringify(
    CreateCustomerFundingSourceTokenLinks$outboundSchema.parse(
      createCustomerFundingSourceTokenLinks,
    ),
  );
}

export function createCustomerFundingSourceTokenLinksFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerFundingSourceTokenLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerFundingSourceTokenLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerFundingSourceTokenLinks' from JSON`,
  );
}

/** @internal */
export const CreateCustomerFundingSourceTokenToken$inboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenToken,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateCustomerFundingSourceTokenToken$Outbound = {};

/** @internal */
export const CreateCustomerFundingSourceTokenToken$outboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenToken$Outbound,
  z.ZodTypeDef,
  CreateCustomerFundingSourceTokenToken
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerFundingSourceTokenToken$ {
  /** @deprecated use `CreateCustomerFundingSourceTokenToken$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerFundingSourceTokenToken$inboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenToken$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerFundingSourceTokenToken$outboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenToken$Outbound` instead. */
  export type Outbound = CreateCustomerFundingSourceTokenToken$Outbound;
}

export function createCustomerFundingSourceTokenTokenToJSON(
  createCustomerFundingSourceTokenToken: CreateCustomerFundingSourceTokenToken,
): string {
  return JSON.stringify(
    CreateCustomerFundingSourceTokenToken$outboundSchema.parse(
      createCustomerFundingSourceTokenToken,
    ),
  );
}

export function createCustomerFundingSourceTokenTokenFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerFundingSourceTokenToken, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerFundingSourceTokenToken$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerFundingSourceTokenToken' from JSON`,
  );
}

/** @internal */
export const CreateCustomerFundingSourceTokenResponse$inboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => CreateCustomerFundingSourceTokenLinks$inboundSchema)
    .optional(),
  token: z.lazy(() => CreateCustomerFundingSourceTokenToken$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type CreateCustomerFundingSourceTokenResponse$Outbound = {
  _links?: CreateCustomerFundingSourceTokenLinks$Outbound | undefined;
  token?: CreateCustomerFundingSourceTokenToken$Outbound | undefined;
};

/** @internal */
export const CreateCustomerFundingSourceTokenResponse$outboundSchema: z.ZodType<
  CreateCustomerFundingSourceTokenResponse$Outbound,
  z.ZodTypeDef,
  CreateCustomerFundingSourceTokenResponse
> = z.object({
  links: z.lazy(() => CreateCustomerFundingSourceTokenLinks$outboundSchema)
    .optional(),
  token: z.lazy(() => CreateCustomerFundingSourceTokenToken$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerFundingSourceTokenResponse$ {
  /** @deprecated use `CreateCustomerFundingSourceTokenResponse$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerFundingSourceTokenResponse$inboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenResponse$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerFundingSourceTokenResponse$outboundSchema;
  /** @deprecated use `CreateCustomerFundingSourceTokenResponse$Outbound` instead. */
  export type Outbound = CreateCustomerFundingSourceTokenResponse$Outbound;
}

export function createCustomerFundingSourceTokenResponseToJSON(
  createCustomerFundingSourceTokenResponse:
    CreateCustomerFundingSourceTokenResponse,
): string {
  return JSON.stringify(
    CreateCustomerFundingSourceTokenResponse$outboundSchema.parse(
      createCustomerFundingSourceTokenResponse,
    ),
  );
}

export function createCustomerFundingSourceTokenResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateCustomerFundingSourceTokenResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerFundingSourceTokenResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateCustomerFundingSourceTokenResponse' from JSON`,
  );
}
