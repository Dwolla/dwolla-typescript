/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMassPaymentRequest = {
  /**
   * Mass payment unique identifier
   */
  id: string;
};

/** @internal */
export const GetMassPaymentRequest$inboundSchema: z.ZodType<
  GetMassPaymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetMassPaymentRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetMassPaymentRequest$outboundSchema: z.ZodType<
  GetMassPaymentRequest$Outbound,
  z.ZodTypeDef,
  GetMassPaymentRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMassPaymentRequest$ {
  /** @deprecated use `GetMassPaymentRequest$inboundSchema` instead. */
  export const inboundSchema = GetMassPaymentRequest$inboundSchema;
  /** @deprecated use `GetMassPaymentRequest$outboundSchema` instead. */
  export const outboundSchema = GetMassPaymentRequest$outboundSchema;
  /** @deprecated use `GetMassPaymentRequest$Outbound` instead. */
  export type Outbound = GetMassPaymentRequest$Outbound;
}

export function getMassPaymentRequestToJSON(
  getMassPaymentRequest: GetMassPaymentRequest,
): string {
  return JSON.stringify(
    GetMassPaymentRequest$outboundSchema.parse(getMassPaymentRequest),
  );
}

export function getMassPaymentRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMassPaymentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMassPaymentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMassPaymentRequest' from JSON`,
  );
}
