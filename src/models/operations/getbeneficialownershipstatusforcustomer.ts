/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetBeneficialOwnershipStatusForCustomerRequest = {
  /**
   * Customer unique identifier
   */
  id: string;
};

/** @internal */
export const GetBeneficialOwnershipStatusForCustomerRequest$inboundSchema:
  z.ZodType<
    GetBeneficialOwnershipStatusForCustomerRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
  });

/** @internal */
export type GetBeneficialOwnershipStatusForCustomerRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetBeneficialOwnershipStatusForCustomerRequest$outboundSchema:
  z.ZodType<
    GetBeneficialOwnershipStatusForCustomerRequest$Outbound,
    z.ZodTypeDef,
    GetBeneficialOwnershipStatusForCustomerRequest
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBeneficialOwnershipStatusForCustomerRequest$ {
  /** @deprecated use `GetBeneficialOwnershipStatusForCustomerRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetBeneficialOwnershipStatusForCustomerRequest$inboundSchema;
  /** @deprecated use `GetBeneficialOwnershipStatusForCustomerRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetBeneficialOwnershipStatusForCustomerRequest$outboundSchema;
  /** @deprecated use `GetBeneficialOwnershipStatusForCustomerRequest$Outbound` instead. */
  export type Outbound =
    GetBeneficialOwnershipStatusForCustomerRequest$Outbound;
}

export function getBeneficialOwnershipStatusForCustomerRequestToJSON(
  getBeneficialOwnershipStatusForCustomerRequest:
    GetBeneficialOwnershipStatusForCustomerRequest,
): string {
  return JSON.stringify(
    GetBeneficialOwnershipStatusForCustomerRequest$outboundSchema.parse(
      getBeneficialOwnershipStatusForCustomerRequest,
    ),
  );
}

export function getBeneficialOwnershipStatusForCustomerRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetBeneficialOwnershipStatusForCustomerRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetBeneficialOwnershipStatusForCustomerRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetBeneficialOwnershipStatusForCustomerRequest' from JSON`,
  );
}
