/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RetrieveBeneficialOwnerRequest = {
  /**
   * Beneficial owner unique identifier
   */
  id: string;
};

/** @internal */
export const RetrieveBeneficialOwnerRequest$inboundSchema: z.ZodType<
  RetrieveBeneficialOwnerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type RetrieveBeneficialOwnerRequest$Outbound = {
  id: string;
};

/** @internal */
export const RetrieveBeneficialOwnerRequest$outboundSchema: z.ZodType<
  RetrieveBeneficialOwnerRequest$Outbound,
  z.ZodTypeDef,
  RetrieveBeneficialOwnerRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveBeneficialOwnerRequest$ {
  /** @deprecated use `RetrieveBeneficialOwnerRequest$inboundSchema` instead. */
  export const inboundSchema = RetrieveBeneficialOwnerRequest$inboundSchema;
  /** @deprecated use `RetrieveBeneficialOwnerRequest$outboundSchema` instead. */
  export const outboundSchema = RetrieveBeneficialOwnerRequest$outboundSchema;
  /** @deprecated use `RetrieveBeneficialOwnerRequest$Outbound` instead. */
  export type Outbound = RetrieveBeneficialOwnerRequest$Outbound;
}

export function retrieveBeneficialOwnerRequestToJSON(
  retrieveBeneficialOwnerRequest: RetrieveBeneficialOwnerRequest,
): string {
  return JSON.stringify(
    RetrieveBeneficialOwnerRequest$outboundSchema.parse(
      retrieveBeneficialOwnerRequest,
    ),
  );
}

export function retrieveBeneficialOwnerRequestFromJSON(
  jsonString: string,
): SafeParseResult<RetrieveBeneficialOwnerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RetrieveBeneficialOwnerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RetrieveBeneficialOwnerRequest' from JSON`,
  );
}
