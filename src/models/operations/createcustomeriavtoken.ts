/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateCustomerIavTokenRequest = {
  /**
   * Customer's unique identifier
   */
  id: string;
};

export type CreateCustomerIavTokenSelf = {
  href?: string | undefined;
};

export type CreateCustomerIavTokenLinks = {
  self?: CreateCustomerIavTokenSelf | undefined;
};

export type CreateCustomerIavTokenToken = {};

/**
 * successful operation
 */
export type CreateCustomerIavTokenResponse = {
  links?: CreateCustomerIavTokenLinks | undefined;
  token?: CreateCustomerIavTokenToken | undefined;
};

/** @internal */
export const CreateCustomerIavTokenRequest$inboundSchema: z.ZodType<
  CreateCustomerIavTokenRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type CreateCustomerIavTokenRequest$Outbound = {
  id: string;
};

/** @internal */
export const CreateCustomerIavTokenRequest$outboundSchema: z.ZodType<
  CreateCustomerIavTokenRequest$Outbound,
  z.ZodTypeDef,
  CreateCustomerIavTokenRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerIavTokenRequest$ {
  /** @deprecated use `CreateCustomerIavTokenRequest$inboundSchema` instead. */
  export const inboundSchema = CreateCustomerIavTokenRequest$inboundSchema;
  /** @deprecated use `CreateCustomerIavTokenRequest$outboundSchema` instead. */
  export const outboundSchema = CreateCustomerIavTokenRequest$outboundSchema;
  /** @deprecated use `CreateCustomerIavTokenRequest$Outbound` instead. */
  export type Outbound = CreateCustomerIavTokenRequest$Outbound;
}

export function createCustomerIavTokenRequestToJSON(
  createCustomerIavTokenRequest: CreateCustomerIavTokenRequest,
): string {
  return JSON.stringify(
    CreateCustomerIavTokenRequest$outboundSchema.parse(
      createCustomerIavTokenRequest,
    ),
  );
}

export function createCustomerIavTokenRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerIavTokenRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCustomerIavTokenRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerIavTokenRequest' from JSON`,
  );
}

/** @internal */
export const CreateCustomerIavTokenSelf$inboundSchema: z.ZodType<
  CreateCustomerIavTokenSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type CreateCustomerIavTokenSelf$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const CreateCustomerIavTokenSelf$outboundSchema: z.ZodType<
  CreateCustomerIavTokenSelf$Outbound,
  z.ZodTypeDef,
  CreateCustomerIavTokenSelf
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerIavTokenSelf$ {
  /** @deprecated use `CreateCustomerIavTokenSelf$inboundSchema` instead. */
  export const inboundSchema = CreateCustomerIavTokenSelf$inboundSchema;
  /** @deprecated use `CreateCustomerIavTokenSelf$outboundSchema` instead. */
  export const outboundSchema = CreateCustomerIavTokenSelf$outboundSchema;
  /** @deprecated use `CreateCustomerIavTokenSelf$Outbound` instead. */
  export type Outbound = CreateCustomerIavTokenSelf$Outbound;
}

export function createCustomerIavTokenSelfToJSON(
  createCustomerIavTokenSelf: CreateCustomerIavTokenSelf,
): string {
  return JSON.stringify(
    CreateCustomerIavTokenSelf$outboundSchema.parse(createCustomerIavTokenSelf),
  );
}

export function createCustomerIavTokenSelfFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerIavTokenSelf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCustomerIavTokenSelf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerIavTokenSelf' from JSON`,
  );
}

/** @internal */
export const CreateCustomerIavTokenLinks$inboundSchema: z.ZodType<
  CreateCustomerIavTokenLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.lazy(() => CreateCustomerIavTokenSelf$inboundSchema).optional(),
});

/** @internal */
export type CreateCustomerIavTokenLinks$Outbound = {
  self?: CreateCustomerIavTokenSelf$Outbound | undefined;
};

/** @internal */
export const CreateCustomerIavTokenLinks$outboundSchema: z.ZodType<
  CreateCustomerIavTokenLinks$Outbound,
  z.ZodTypeDef,
  CreateCustomerIavTokenLinks
> = z.object({
  self: z.lazy(() => CreateCustomerIavTokenSelf$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerIavTokenLinks$ {
  /** @deprecated use `CreateCustomerIavTokenLinks$inboundSchema` instead. */
  export const inboundSchema = CreateCustomerIavTokenLinks$inboundSchema;
  /** @deprecated use `CreateCustomerIavTokenLinks$outboundSchema` instead. */
  export const outboundSchema = CreateCustomerIavTokenLinks$outboundSchema;
  /** @deprecated use `CreateCustomerIavTokenLinks$Outbound` instead. */
  export type Outbound = CreateCustomerIavTokenLinks$Outbound;
}

export function createCustomerIavTokenLinksToJSON(
  createCustomerIavTokenLinks: CreateCustomerIavTokenLinks,
): string {
  return JSON.stringify(
    CreateCustomerIavTokenLinks$outboundSchema.parse(
      createCustomerIavTokenLinks,
    ),
  );
}

export function createCustomerIavTokenLinksFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerIavTokenLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCustomerIavTokenLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerIavTokenLinks' from JSON`,
  );
}

/** @internal */
export const CreateCustomerIavTokenToken$inboundSchema: z.ZodType<
  CreateCustomerIavTokenToken,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateCustomerIavTokenToken$Outbound = {};

/** @internal */
export const CreateCustomerIavTokenToken$outboundSchema: z.ZodType<
  CreateCustomerIavTokenToken$Outbound,
  z.ZodTypeDef,
  CreateCustomerIavTokenToken
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerIavTokenToken$ {
  /** @deprecated use `CreateCustomerIavTokenToken$inboundSchema` instead. */
  export const inboundSchema = CreateCustomerIavTokenToken$inboundSchema;
  /** @deprecated use `CreateCustomerIavTokenToken$outboundSchema` instead. */
  export const outboundSchema = CreateCustomerIavTokenToken$outboundSchema;
  /** @deprecated use `CreateCustomerIavTokenToken$Outbound` instead. */
  export type Outbound = CreateCustomerIavTokenToken$Outbound;
}

export function createCustomerIavTokenTokenToJSON(
  createCustomerIavTokenToken: CreateCustomerIavTokenToken,
): string {
  return JSON.stringify(
    CreateCustomerIavTokenToken$outboundSchema.parse(
      createCustomerIavTokenToken,
    ),
  );
}

export function createCustomerIavTokenTokenFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerIavTokenToken, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCustomerIavTokenToken$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerIavTokenToken' from JSON`,
  );
}

/** @internal */
export const CreateCustomerIavTokenResponse$inboundSchema: z.ZodType<
  CreateCustomerIavTokenResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => CreateCustomerIavTokenLinks$inboundSchema).optional(),
  token: z.lazy(() => CreateCustomerIavTokenToken$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type CreateCustomerIavTokenResponse$Outbound = {
  _links?: CreateCustomerIavTokenLinks$Outbound | undefined;
  token?: CreateCustomerIavTokenToken$Outbound | undefined;
};

/** @internal */
export const CreateCustomerIavTokenResponse$outboundSchema: z.ZodType<
  CreateCustomerIavTokenResponse$Outbound,
  z.ZodTypeDef,
  CreateCustomerIavTokenResponse
> = z.object({
  links: z.lazy(() => CreateCustomerIavTokenLinks$outboundSchema).optional(),
  token: z.lazy(() => CreateCustomerIavTokenToken$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerIavTokenResponse$ {
  /** @deprecated use `CreateCustomerIavTokenResponse$inboundSchema` instead. */
  export const inboundSchema = CreateCustomerIavTokenResponse$inboundSchema;
  /** @deprecated use `CreateCustomerIavTokenResponse$outboundSchema` instead. */
  export const outboundSchema = CreateCustomerIavTokenResponse$outboundSchema;
  /** @deprecated use `CreateCustomerIavTokenResponse$Outbound` instead. */
  export type Outbound = CreateCustomerIavTokenResponse$Outbound;
}

export function createCustomerIavTokenResponseToJSON(
  createCustomerIavTokenResponse: CreateCustomerIavTokenResponse,
): string {
  return JSON.stringify(
    CreateCustomerIavTokenResponse$outboundSchema.parse(
      createCustomerIavTokenResponse,
    ),
  );
}

export function createCustomerIavTokenResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerIavTokenResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateCustomerIavTokenResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerIavTokenResponse' from JSON`,
  );
}
