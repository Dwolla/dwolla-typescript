/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { blobLikeSchema } from "../../types/blobs.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateBeneficialOwnerDocumentFile = {
  fileName: string;
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};

/**
 * Upload a document for a beneficial owner.
 */
export type CreateBeneficialOwnerDocumentRequestBody = {
  documentType?: string | undefined;
  file?: CreateBeneficialOwnerDocumentFile | Blob | undefined;
};

export type CreateBeneficialOwnerDocumentRequest = {
  /**
   * beneficial owner unique identifier
   */
  id: string;
  /**
   * Upload a document for a beneficial owner.
   */
  requestBody: CreateBeneficialOwnerDocumentRequestBody;
};

export type CreateBeneficialOwnerDocumentResponse = {
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const CreateBeneficialOwnerDocumentFile$inboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentFile,
  z.ZodTypeDef,
  unknown
> = z.object({
  fileName: z.string(),
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
});

/** @internal */
export type CreateBeneficialOwnerDocumentFile$Outbound = {
  fileName: string;
  content: ReadableStream<Uint8Array> | Blob | ArrayBuffer | Uint8Array;
};

/** @internal */
export const CreateBeneficialOwnerDocumentFile$outboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentFile$Outbound,
  z.ZodTypeDef,
  CreateBeneficialOwnerDocumentFile
> = z.object({
  fileName: z.string(),
  content: z.union([
    z.instanceof(ReadableStream<Uint8Array>),
    z.instanceof(Blob),
    z.instanceof(ArrayBuffer),
    z.instanceof(Uint8Array),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBeneficialOwnerDocumentFile$ {
  /** @deprecated use `CreateBeneficialOwnerDocumentFile$inboundSchema` instead. */
  export const inboundSchema = CreateBeneficialOwnerDocumentFile$inboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentFile$outboundSchema` instead. */
  export const outboundSchema =
    CreateBeneficialOwnerDocumentFile$outboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentFile$Outbound` instead. */
  export type Outbound = CreateBeneficialOwnerDocumentFile$Outbound;
}

export function createBeneficialOwnerDocumentFileToJSON(
  createBeneficialOwnerDocumentFile: CreateBeneficialOwnerDocumentFile,
): string {
  return JSON.stringify(
    CreateBeneficialOwnerDocumentFile$outboundSchema.parse(
      createBeneficialOwnerDocumentFile,
    ),
  );
}

export function createBeneficialOwnerDocumentFileFromJSON(
  jsonString: string,
): SafeParseResult<CreateBeneficialOwnerDocumentFile, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateBeneficialOwnerDocumentFile$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateBeneficialOwnerDocumentFile' from JSON`,
  );
}

/** @internal */
export const CreateBeneficialOwnerDocumentRequestBody$inboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  documentType: z.string().optional(),
  file: z.lazy(() => CreateBeneficialOwnerDocumentFile$inboundSchema)
    .optional(),
});

/** @internal */
export type CreateBeneficialOwnerDocumentRequestBody$Outbound = {
  documentType?: string | undefined;
  file?: CreateBeneficialOwnerDocumentFile$Outbound | Blob | undefined;
};

/** @internal */
export const CreateBeneficialOwnerDocumentRequestBody$outboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentRequestBody$Outbound,
  z.ZodTypeDef,
  CreateBeneficialOwnerDocumentRequestBody
> = z.object({
  documentType: z.string().optional(),
  file: z.lazy(() => CreateBeneficialOwnerDocumentFile$outboundSchema).or(
    blobLikeSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBeneficialOwnerDocumentRequestBody$ {
  /** @deprecated use `CreateBeneficialOwnerDocumentRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateBeneficialOwnerDocumentRequestBody$inboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateBeneficialOwnerDocumentRequestBody$outboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentRequestBody$Outbound` instead. */
  export type Outbound = CreateBeneficialOwnerDocumentRequestBody$Outbound;
}

export function createBeneficialOwnerDocumentRequestBodyToJSON(
  createBeneficialOwnerDocumentRequestBody:
    CreateBeneficialOwnerDocumentRequestBody,
): string {
  return JSON.stringify(
    CreateBeneficialOwnerDocumentRequestBody$outboundSchema.parse(
      createBeneficialOwnerDocumentRequestBody,
    ),
  );
}

export function createBeneficialOwnerDocumentRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateBeneficialOwnerDocumentRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateBeneficialOwnerDocumentRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateBeneficialOwnerDocumentRequestBody' from JSON`,
  );
}

/** @internal */
export const CreateBeneficialOwnerDocumentRequest$inboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  RequestBody: z.lazy(() =>
    CreateBeneficialOwnerDocumentRequestBody$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateBeneficialOwnerDocumentRequest$Outbound = {
  id: string;
  RequestBody: CreateBeneficialOwnerDocumentRequestBody$Outbound;
};

/** @internal */
export const CreateBeneficialOwnerDocumentRequest$outboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentRequest$Outbound,
  z.ZodTypeDef,
  CreateBeneficialOwnerDocumentRequest
> = z.object({
  id: z.string(),
  requestBody: z.lazy(() =>
    CreateBeneficialOwnerDocumentRequestBody$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBeneficialOwnerDocumentRequest$ {
  /** @deprecated use `CreateBeneficialOwnerDocumentRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateBeneficialOwnerDocumentRequest$inboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateBeneficialOwnerDocumentRequest$outboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentRequest$Outbound` instead. */
  export type Outbound = CreateBeneficialOwnerDocumentRequest$Outbound;
}

export function createBeneficialOwnerDocumentRequestToJSON(
  createBeneficialOwnerDocumentRequest: CreateBeneficialOwnerDocumentRequest,
): string {
  return JSON.stringify(
    CreateBeneficialOwnerDocumentRequest$outboundSchema.parse(
      createBeneficialOwnerDocumentRequest,
    ),
  );
}

export function createBeneficialOwnerDocumentRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateBeneficialOwnerDocumentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateBeneficialOwnerDocumentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateBeneficialOwnerDocumentRequest' from JSON`,
  );
}

/** @internal */
export const CreateBeneficialOwnerDocumentResponse$inboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())).default({}),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
  });
});

/** @internal */
export type CreateBeneficialOwnerDocumentResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const CreateBeneficialOwnerDocumentResponse$outboundSchema: z.ZodType<
  CreateBeneficialOwnerDocumentResponse$Outbound,
  z.ZodTypeDef,
  CreateBeneficialOwnerDocumentResponse
> = z.object({
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBeneficialOwnerDocumentResponse$ {
  /** @deprecated use `CreateBeneficialOwnerDocumentResponse$inboundSchema` instead. */
  export const inboundSchema =
    CreateBeneficialOwnerDocumentResponse$inboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentResponse$outboundSchema` instead. */
  export const outboundSchema =
    CreateBeneficialOwnerDocumentResponse$outboundSchema;
  /** @deprecated use `CreateBeneficialOwnerDocumentResponse$Outbound` instead. */
  export type Outbound = CreateBeneficialOwnerDocumentResponse$Outbound;
}

export function createBeneficialOwnerDocumentResponseToJSON(
  createBeneficialOwnerDocumentResponse: CreateBeneficialOwnerDocumentResponse,
): string {
  return JSON.stringify(
    CreateBeneficialOwnerDocumentResponse$outboundSchema.parse(
      createBeneficialOwnerDocumentResponse,
    ),
  );
}

export function createBeneficialOwnerDocumentResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateBeneficialOwnerDocumentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateBeneficialOwnerDocumentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateBeneficialOwnerDocumentResponse' from JSON`,
  );
}
