/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateLabelLedgerEntryAmount = {
  /**
   * Amount of funds to increase or decrease for a Label. To decrease funds in a Label a string numeric value will be supplied and prepended with a "-" operator.
   */
  value: string;
  /**
   * Currency code for the amount
   */
  currency: string;
};

/**
 * Parameters to create a label ledger entry
 */
export type CreateLabelLedgerEntryRequestBody = {
  amount: CreateLabelLedgerEntryAmount;
};

export type CreateLabelLedgerEntryRequest = {
  /**
   * The Id of the Label to update.
   */
  id: string;
  /**
   * Parameters to create a label ledger entry
   */
  requestBody: CreateLabelLedgerEntryRequestBody;
};

export type CreateLabelLedgerEntryResponse = {
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const CreateLabelLedgerEntryAmount$inboundSchema: z.ZodType<
  CreateLabelLedgerEntryAmount,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string(),
  currency: z.string(),
});

/** @internal */
export type CreateLabelLedgerEntryAmount$Outbound = {
  value: string;
  currency: string;
};

/** @internal */
export const CreateLabelLedgerEntryAmount$outboundSchema: z.ZodType<
  CreateLabelLedgerEntryAmount$Outbound,
  z.ZodTypeDef,
  CreateLabelLedgerEntryAmount
> = z.object({
  value: z.string(),
  currency: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLabelLedgerEntryAmount$ {
  /** @deprecated use `CreateLabelLedgerEntryAmount$inboundSchema` instead. */
  export const inboundSchema = CreateLabelLedgerEntryAmount$inboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryAmount$outboundSchema` instead. */
  export const outboundSchema = CreateLabelLedgerEntryAmount$outboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryAmount$Outbound` instead. */
  export type Outbound = CreateLabelLedgerEntryAmount$Outbound;
}

export function createLabelLedgerEntryAmountToJSON(
  createLabelLedgerEntryAmount: CreateLabelLedgerEntryAmount,
): string {
  return JSON.stringify(
    CreateLabelLedgerEntryAmount$outboundSchema.parse(
      createLabelLedgerEntryAmount,
    ),
  );
}

export function createLabelLedgerEntryAmountFromJSON(
  jsonString: string,
): SafeParseResult<CreateLabelLedgerEntryAmount, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateLabelLedgerEntryAmount$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateLabelLedgerEntryAmount' from JSON`,
  );
}

/** @internal */
export const CreateLabelLedgerEntryRequestBody$inboundSchema: z.ZodType<
  CreateLabelLedgerEntryRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.lazy(() => CreateLabelLedgerEntryAmount$inboundSchema),
});

/** @internal */
export type CreateLabelLedgerEntryRequestBody$Outbound = {
  amount: CreateLabelLedgerEntryAmount$Outbound;
};

/** @internal */
export const CreateLabelLedgerEntryRequestBody$outboundSchema: z.ZodType<
  CreateLabelLedgerEntryRequestBody$Outbound,
  z.ZodTypeDef,
  CreateLabelLedgerEntryRequestBody
> = z.object({
  amount: z.lazy(() => CreateLabelLedgerEntryAmount$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLabelLedgerEntryRequestBody$ {
  /** @deprecated use `CreateLabelLedgerEntryRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateLabelLedgerEntryRequestBody$inboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateLabelLedgerEntryRequestBody$outboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryRequestBody$Outbound` instead. */
  export type Outbound = CreateLabelLedgerEntryRequestBody$Outbound;
}

export function createLabelLedgerEntryRequestBodyToJSON(
  createLabelLedgerEntryRequestBody: CreateLabelLedgerEntryRequestBody,
): string {
  return JSON.stringify(
    CreateLabelLedgerEntryRequestBody$outboundSchema.parse(
      createLabelLedgerEntryRequestBody,
    ),
  );
}

export function createLabelLedgerEntryRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateLabelLedgerEntryRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateLabelLedgerEntryRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateLabelLedgerEntryRequestBody' from JSON`,
  );
}

/** @internal */
export const CreateLabelLedgerEntryRequest$inboundSchema: z.ZodType<
  CreateLabelLedgerEntryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  RequestBody: z.lazy(() => CreateLabelLedgerEntryRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateLabelLedgerEntryRequest$Outbound = {
  id: string;
  RequestBody: CreateLabelLedgerEntryRequestBody$Outbound;
};

/** @internal */
export const CreateLabelLedgerEntryRequest$outboundSchema: z.ZodType<
  CreateLabelLedgerEntryRequest$Outbound,
  z.ZodTypeDef,
  CreateLabelLedgerEntryRequest
> = z.object({
  id: z.string(),
  requestBody: z.lazy(() => CreateLabelLedgerEntryRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLabelLedgerEntryRequest$ {
  /** @deprecated use `CreateLabelLedgerEntryRequest$inboundSchema` instead. */
  export const inboundSchema = CreateLabelLedgerEntryRequest$inboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryRequest$outboundSchema` instead. */
  export const outboundSchema = CreateLabelLedgerEntryRequest$outboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryRequest$Outbound` instead. */
  export type Outbound = CreateLabelLedgerEntryRequest$Outbound;
}

export function createLabelLedgerEntryRequestToJSON(
  createLabelLedgerEntryRequest: CreateLabelLedgerEntryRequest,
): string {
  return JSON.stringify(
    CreateLabelLedgerEntryRequest$outboundSchema.parse(
      createLabelLedgerEntryRequest,
    ),
  );
}

export function createLabelLedgerEntryRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateLabelLedgerEntryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateLabelLedgerEntryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateLabelLedgerEntryRequest' from JSON`,
  );
}

/** @internal */
export const CreateLabelLedgerEntryResponse$inboundSchema: z.ZodType<
  CreateLabelLedgerEntryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())).default({}),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
  });
});

/** @internal */
export type CreateLabelLedgerEntryResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const CreateLabelLedgerEntryResponse$outboundSchema: z.ZodType<
  CreateLabelLedgerEntryResponse$Outbound,
  z.ZodTypeDef,
  CreateLabelLedgerEntryResponse
> = z.object({
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateLabelLedgerEntryResponse$ {
  /** @deprecated use `CreateLabelLedgerEntryResponse$inboundSchema` instead. */
  export const inboundSchema = CreateLabelLedgerEntryResponse$inboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryResponse$outboundSchema` instead. */
  export const outboundSchema = CreateLabelLedgerEntryResponse$outboundSchema;
  /** @deprecated use `CreateLabelLedgerEntryResponse$Outbound` instead. */
  export type Outbound = CreateLabelLedgerEntryResponse$Outbound;
}

export function createLabelLedgerEntryResponseToJSON(
  createLabelLedgerEntryResponse: CreateLabelLedgerEntryResponse,
): string {
  return JSON.stringify(
    CreateLabelLedgerEntryResponse$outboundSchema.parse(
      createLabelLedgerEntryResponse,
    ),
  );
}

export function createLabelLedgerEntryResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateLabelLedgerEntryResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateLabelLedgerEntryResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateLabelLedgerEntryResponse' from JSON`,
  );
}
