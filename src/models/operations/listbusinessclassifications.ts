/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type ListBusinessClassificationsLinks = {};

export type ListBusinessClassificationsEmbedded = {
  businessClassifications?: Array<models.BusinessClassifications> | undefined;
};

/**
 * successful operation
 */
export type ListBusinessClassificationsResponse = {
  links?: ListBusinessClassificationsLinks | undefined;
  embedded?: ListBusinessClassificationsEmbedded | undefined;
};

/** @internal */
export const ListBusinessClassificationsLinks$inboundSchema: z.ZodType<
  ListBusinessClassificationsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ListBusinessClassificationsLinks$Outbound = {};

/** @internal */
export const ListBusinessClassificationsLinks$outboundSchema: z.ZodType<
  ListBusinessClassificationsLinks$Outbound,
  z.ZodTypeDef,
  ListBusinessClassificationsLinks
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBusinessClassificationsLinks$ {
  /** @deprecated use `ListBusinessClassificationsLinks$inboundSchema` instead. */
  export const inboundSchema = ListBusinessClassificationsLinks$inboundSchema;
  /** @deprecated use `ListBusinessClassificationsLinks$outboundSchema` instead. */
  export const outboundSchema = ListBusinessClassificationsLinks$outboundSchema;
  /** @deprecated use `ListBusinessClassificationsLinks$Outbound` instead. */
  export type Outbound = ListBusinessClassificationsLinks$Outbound;
}

export function listBusinessClassificationsLinksToJSON(
  listBusinessClassificationsLinks: ListBusinessClassificationsLinks,
): string {
  return JSON.stringify(
    ListBusinessClassificationsLinks$outboundSchema.parse(
      listBusinessClassificationsLinks,
    ),
  );
}

export function listBusinessClassificationsLinksFromJSON(
  jsonString: string,
): SafeParseResult<ListBusinessClassificationsLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListBusinessClassificationsLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListBusinessClassificationsLinks' from JSON`,
  );
}

/** @internal */
export const ListBusinessClassificationsEmbedded$inboundSchema: z.ZodType<
  ListBusinessClassificationsEmbedded,
  z.ZodTypeDef,
  unknown
> = z.object({
  "business-classifications": z.array(
    models.BusinessClassifications$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "business-classifications": "businessClassifications",
  });
});

/** @internal */
export type ListBusinessClassificationsEmbedded$Outbound = {
  "business-classifications"?:
    | Array<models.BusinessClassifications$Outbound>
    | undefined;
};

/** @internal */
export const ListBusinessClassificationsEmbedded$outboundSchema: z.ZodType<
  ListBusinessClassificationsEmbedded$Outbound,
  z.ZodTypeDef,
  ListBusinessClassificationsEmbedded
> = z.object({
  businessClassifications: z.array(
    models.BusinessClassifications$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    businessClassifications: "business-classifications",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBusinessClassificationsEmbedded$ {
  /** @deprecated use `ListBusinessClassificationsEmbedded$inboundSchema` instead. */
  export const inboundSchema =
    ListBusinessClassificationsEmbedded$inboundSchema;
  /** @deprecated use `ListBusinessClassificationsEmbedded$outboundSchema` instead. */
  export const outboundSchema =
    ListBusinessClassificationsEmbedded$outboundSchema;
  /** @deprecated use `ListBusinessClassificationsEmbedded$Outbound` instead. */
  export type Outbound = ListBusinessClassificationsEmbedded$Outbound;
}

export function listBusinessClassificationsEmbeddedToJSON(
  listBusinessClassificationsEmbedded: ListBusinessClassificationsEmbedded,
): string {
  return JSON.stringify(
    ListBusinessClassificationsEmbedded$outboundSchema.parse(
      listBusinessClassificationsEmbedded,
    ),
  );
}

export function listBusinessClassificationsEmbeddedFromJSON(
  jsonString: string,
): SafeParseResult<ListBusinessClassificationsEmbedded, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListBusinessClassificationsEmbedded$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListBusinessClassificationsEmbedded' from JSON`,
  );
}

/** @internal */
export const ListBusinessClassificationsResponse$inboundSchema: z.ZodType<
  ListBusinessClassificationsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => ListBusinessClassificationsLinks$inboundSchema)
    .optional(),
  _embedded: z.lazy(() => ListBusinessClassificationsEmbedded$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
    "_embedded": "embedded",
  });
});

/** @internal */
export type ListBusinessClassificationsResponse$Outbound = {
  _links?: ListBusinessClassificationsLinks$Outbound | undefined;
  _embedded?: ListBusinessClassificationsEmbedded$Outbound | undefined;
};

/** @internal */
export const ListBusinessClassificationsResponse$outboundSchema: z.ZodType<
  ListBusinessClassificationsResponse$Outbound,
  z.ZodTypeDef,
  ListBusinessClassificationsResponse
> = z.object({
  links: z.lazy(() => ListBusinessClassificationsLinks$outboundSchema)
    .optional(),
  embedded: z.lazy(() => ListBusinessClassificationsEmbedded$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
    embedded: "_embedded",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBusinessClassificationsResponse$ {
  /** @deprecated use `ListBusinessClassificationsResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListBusinessClassificationsResponse$inboundSchema;
  /** @deprecated use `ListBusinessClassificationsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListBusinessClassificationsResponse$outboundSchema;
  /** @deprecated use `ListBusinessClassificationsResponse$Outbound` instead. */
  export type Outbound = ListBusinessClassificationsResponse$Outbound;
}

export function listBusinessClassificationsResponseToJSON(
  listBusinessClassificationsResponse: ListBusinessClassificationsResponse,
): string {
  return JSON.stringify(
    ListBusinessClassificationsResponse$outboundSchema.parse(
      listBusinessClassificationsResponse,
    ),
  );
}

export function listBusinessClassificationsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListBusinessClassificationsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ListBusinessClassificationsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListBusinessClassificationsResponse' from JSON`,
  );
}
