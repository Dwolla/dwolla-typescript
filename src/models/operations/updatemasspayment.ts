/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Parameters for updating a mass payment
 */
export type UpdateMassPaymentRequestBody = {
  status: string;
};

export type UpdateMassPaymentRequest = {
  /**
   * ID of mass payment to update
   */
  id: string;
  /**
   * Parameters for updating a mass payment
   */
  requestBody: UpdateMassPaymentRequestBody;
};

/** @internal */
export const UpdateMassPaymentRequestBody$inboundSchema: z.ZodType<
  UpdateMassPaymentRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string(),
});

/** @internal */
export type UpdateMassPaymentRequestBody$Outbound = {
  status: string;
};

/** @internal */
export const UpdateMassPaymentRequestBody$outboundSchema: z.ZodType<
  UpdateMassPaymentRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateMassPaymentRequestBody
> = z.object({
  status: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateMassPaymentRequestBody$ {
  /** @deprecated use `UpdateMassPaymentRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateMassPaymentRequestBody$inboundSchema;
  /** @deprecated use `UpdateMassPaymentRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateMassPaymentRequestBody$outboundSchema;
  /** @deprecated use `UpdateMassPaymentRequestBody$Outbound` instead. */
  export type Outbound = UpdateMassPaymentRequestBody$Outbound;
}

export function updateMassPaymentRequestBodyToJSON(
  updateMassPaymentRequestBody: UpdateMassPaymentRequestBody,
): string {
  return JSON.stringify(
    UpdateMassPaymentRequestBody$outboundSchema.parse(
      updateMassPaymentRequestBody,
    ),
  );
}

export function updateMassPaymentRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateMassPaymentRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateMassPaymentRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateMassPaymentRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateMassPaymentRequest$inboundSchema: z.ZodType<
  UpdateMassPaymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  RequestBody: z.lazy(() => UpdateMassPaymentRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateMassPaymentRequest$Outbound = {
  id: string;
  RequestBody: UpdateMassPaymentRequestBody$Outbound;
};

/** @internal */
export const UpdateMassPaymentRequest$outboundSchema: z.ZodType<
  UpdateMassPaymentRequest$Outbound,
  z.ZodTypeDef,
  UpdateMassPaymentRequest
> = z.object({
  id: z.string(),
  requestBody: z.lazy(() => UpdateMassPaymentRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateMassPaymentRequest$ {
  /** @deprecated use `UpdateMassPaymentRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateMassPaymentRequest$inboundSchema;
  /** @deprecated use `UpdateMassPaymentRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateMassPaymentRequest$outboundSchema;
  /** @deprecated use `UpdateMassPaymentRequest$Outbound` instead. */
  export type Outbound = UpdateMassPaymentRequest$Outbound;
}

export function updateMassPaymentRequestToJSON(
  updateMassPaymentRequest: UpdateMassPaymentRequest,
): string {
  return JSON.stringify(
    UpdateMassPaymentRequest$outboundSchema.parse(updateMassPaymentRequest),
  );
}

export function updateMassPaymentRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateMassPaymentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateMassPaymentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateMassPaymentRequest' from JSON`,
  );
}
