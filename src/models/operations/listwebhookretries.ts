/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListWebhookRetriesRequest = {
  /**
   * Webhook unique identifier
   */
  id: string;
};

/** @internal */
export const ListWebhookRetriesRequest$inboundSchema: z.ZodType<
  ListWebhookRetriesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type ListWebhookRetriesRequest$Outbound = {
  id: string;
};

/** @internal */
export const ListWebhookRetriesRequest$outboundSchema: z.ZodType<
  ListWebhookRetriesRequest$Outbound,
  z.ZodTypeDef,
  ListWebhookRetriesRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListWebhookRetriesRequest$ {
  /** @deprecated use `ListWebhookRetriesRequest$inboundSchema` instead. */
  export const inboundSchema = ListWebhookRetriesRequest$inboundSchema;
  /** @deprecated use `ListWebhookRetriesRequest$outboundSchema` instead. */
  export const outboundSchema = ListWebhookRetriesRequest$outboundSchema;
  /** @deprecated use `ListWebhookRetriesRequest$Outbound` instead. */
  export type Outbound = ListWebhookRetriesRequest$Outbound;
}

export function listWebhookRetriesRequestToJSON(
  listWebhookRetriesRequest: ListWebhookRetriesRequest,
): string {
  return JSON.stringify(
    ListWebhookRetriesRequest$outboundSchema.parse(listWebhookRetriesRequest),
  );
}

export function listWebhookRetriesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListWebhookRetriesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListWebhookRetriesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListWebhookRetriesRequest' from JSON`,
  );
}
