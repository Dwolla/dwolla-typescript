/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type InitiateMassPaymentLinksSource = {
  href?: string | undefined;
};

export type InitiateMassPaymentLinks = {
  source?: InitiateMassPaymentLinksSource | undefined;
};

export type InitiateMassPaymentLinksDestination = {
  href?: string | undefined;
};

export type ItemLinks = {
  destination?: InitiateMassPaymentLinksDestination | undefined;
};

export type InitiateMassPaymentProcessingChannel = {
  destination?: string | undefined;
};

export type ItemMetadata = {};

export type ItemClearing = {
  destination?: string | undefined;
};

export type ItemAddenda = {
  values?: Array<string> | undefined;
};

export type InitiateMassPaymentAchDetailsDestination = {
  addenda?: ItemAddenda | undefined;
};

export type ItemAchDetails = {
  destination?: InitiateMassPaymentAchDetailsDestination | undefined;
};

export type Item = {
  links?: ItemLinks | undefined;
  amount?: models.TransferAmount | undefined;
  processingChannel?: InitiateMassPaymentProcessingChannel | undefined;
  metadata?: ItemMetadata | undefined;
  clearing?: ItemClearing | undefined;
  achDetails?: ItemAchDetails | undefined;
  correlationId?: string | undefined;
};

export type InitiateMassPaymentSourceAddenda = {
  values?: Array<string> | undefined;
};

export type InitiateMassPaymentAchDetailsSource = {
  addenda?: InitiateMassPaymentSourceAddenda | undefined;
};

export type InitiateMassPaymentAchDetails = {
  source?: InitiateMassPaymentAchDetailsSource | undefined;
};

export type InitiateMassPaymentClearing = {
  source?: string | undefined;
};

export type InitiateMassPaymentMetadata = {};

/**
 * Parameters for initiating a mass payment
 */
export type InitiateMassPaymentRequestBody = {
  links: InitiateMassPaymentLinks;
  items: Array<Item>;
  status?: string | undefined;
  achDetails?: InitiateMassPaymentAchDetails | undefined;
  clearing?: InitiateMassPaymentClearing | undefined;
  metadata?: InitiateMassPaymentMetadata | undefined;
  correlationId?: string | undefined;
};

export type InitiateMassPaymentRequest = {
  idempotencyKey?: string | undefined;
  /**
   * Parameters for initiating a mass payment
   */
  requestBody: InitiateMassPaymentRequestBody;
};

export type InitiateMassPaymentResponse = {
  headers: { [k: string]: Array<string> };
};

/** @internal */
export const InitiateMassPaymentLinksSource$inboundSchema: z.ZodType<
  InitiateMassPaymentLinksSource,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type InitiateMassPaymentLinksSource$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const InitiateMassPaymentLinksSource$outboundSchema: z.ZodType<
  InitiateMassPaymentLinksSource$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentLinksSource
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentLinksSource$ {
  /** @deprecated use `InitiateMassPaymentLinksSource$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentLinksSource$inboundSchema;
  /** @deprecated use `InitiateMassPaymentLinksSource$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentLinksSource$outboundSchema;
  /** @deprecated use `InitiateMassPaymentLinksSource$Outbound` instead. */
  export type Outbound = InitiateMassPaymentLinksSource$Outbound;
}

export function initiateMassPaymentLinksSourceToJSON(
  initiateMassPaymentLinksSource: InitiateMassPaymentLinksSource,
): string {
  return JSON.stringify(
    InitiateMassPaymentLinksSource$outboundSchema.parse(
      initiateMassPaymentLinksSource,
    ),
  );
}

export function initiateMassPaymentLinksSourceFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentLinksSource, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentLinksSource$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentLinksSource' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentLinks$inboundSchema: z.ZodType<
  InitiateMassPaymentLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.lazy(() => InitiateMassPaymentLinksSource$inboundSchema).optional(),
});

/** @internal */
export type InitiateMassPaymentLinks$Outbound = {
  source?: InitiateMassPaymentLinksSource$Outbound | undefined;
};

/** @internal */
export const InitiateMassPaymentLinks$outboundSchema: z.ZodType<
  InitiateMassPaymentLinks$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentLinks
> = z.object({
  source: z.lazy(() => InitiateMassPaymentLinksSource$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentLinks$ {
  /** @deprecated use `InitiateMassPaymentLinks$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentLinks$inboundSchema;
  /** @deprecated use `InitiateMassPaymentLinks$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentLinks$outboundSchema;
  /** @deprecated use `InitiateMassPaymentLinks$Outbound` instead. */
  export type Outbound = InitiateMassPaymentLinks$Outbound;
}

export function initiateMassPaymentLinksToJSON(
  initiateMassPaymentLinks: InitiateMassPaymentLinks,
): string {
  return JSON.stringify(
    InitiateMassPaymentLinks$outboundSchema.parse(initiateMassPaymentLinks),
  );
}

export function initiateMassPaymentLinksFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentLinks' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentLinksDestination$inboundSchema: z.ZodType<
  InitiateMassPaymentLinksDestination,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type InitiateMassPaymentLinksDestination$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const InitiateMassPaymentLinksDestination$outboundSchema: z.ZodType<
  InitiateMassPaymentLinksDestination$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentLinksDestination
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentLinksDestination$ {
  /** @deprecated use `InitiateMassPaymentLinksDestination$inboundSchema` instead. */
  export const inboundSchema =
    InitiateMassPaymentLinksDestination$inboundSchema;
  /** @deprecated use `InitiateMassPaymentLinksDestination$outboundSchema` instead. */
  export const outboundSchema =
    InitiateMassPaymentLinksDestination$outboundSchema;
  /** @deprecated use `InitiateMassPaymentLinksDestination$Outbound` instead. */
  export type Outbound = InitiateMassPaymentLinksDestination$Outbound;
}

export function initiateMassPaymentLinksDestinationToJSON(
  initiateMassPaymentLinksDestination: InitiateMassPaymentLinksDestination,
): string {
  return JSON.stringify(
    InitiateMassPaymentLinksDestination$outboundSchema.parse(
      initiateMassPaymentLinksDestination,
    ),
  );
}

export function initiateMassPaymentLinksDestinationFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentLinksDestination, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      InitiateMassPaymentLinksDestination$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentLinksDestination' from JSON`,
  );
}

/** @internal */
export const ItemLinks$inboundSchema: z.ZodType<
  ItemLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  destination: z.lazy(() => InitiateMassPaymentLinksDestination$inboundSchema)
    .optional(),
});

/** @internal */
export type ItemLinks$Outbound = {
  destination?: InitiateMassPaymentLinksDestination$Outbound | undefined;
};

/** @internal */
export const ItemLinks$outboundSchema: z.ZodType<
  ItemLinks$Outbound,
  z.ZodTypeDef,
  ItemLinks
> = z.object({
  destination: z.lazy(() => InitiateMassPaymentLinksDestination$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemLinks$ {
  /** @deprecated use `ItemLinks$inboundSchema` instead. */
  export const inboundSchema = ItemLinks$inboundSchema;
  /** @deprecated use `ItemLinks$outboundSchema` instead. */
  export const outboundSchema = ItemLinks$outboundSchema;
  /** @deprecated use `ItemLinks$Outbound` instead. */
  export type Outbound = ItemLinks$Outbound;
}

export function itemLinksToJSON(itemLinks: ItemLinks): string {
  return JSON.stringify(ItemLinks$outboundSchema.parse(itemLinks));
}

export function itemLinksFromJSON(
  jsonString: string,
): SafeParseResult<ItemLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemLinks' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentProcessingChannel$inboundSchema: z.ZodType<
  InitiateMassPaymentProcessingChannel,
  z.ZodTypeDef,
  unknown
> = z.object({
  destination: z.string().optional(),
});

/** @internal */
export type InitiateMassPaymentProcessingChannel$Outbound = {
  destination?: string | undefined;
};

/** @internal */
export const InitiateMassPaymentProcessingChannel$outboundSchema: z.ZodType<
  InitiateMassPaymentProcessingChannel$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentProcessingChannel
> = z.object({
  destination: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentProcessingChannel$ {
  /** @deprecated use `InitiateMassPaymentProcessingChannel$inboundSchema` instead. */
  export const inboundSchema =
    InitiateMassPaymentProcessingChannel$inboundSchema;
  /** @deprecated use `InitiateMassPaymentProcessingChannel$outboundSchema` instead. */
  export const outboundSchema =
    InitiateMassPaymentProcessingChannel$outboundSchema;
  /** @deprecated use `InitiateMassPaymentProcessingChannel$Outbound` instead. */
  export type Outbound = InitiateMassPaymentProcessingChannel$Outbound;
}

export function initiateMassPaymentProcessingChannelToJSON(
  initiateMassPaymentProcessingChannel: InitiateMassPaymentProcessingChannel,
): string {
  return JSON.stringify(
    InitiateMassPaymentProcessingChannel$outboundSchema.parse(
      initiateMassPaymentProcessingChannel,
    ),
  );
}

export function initiateMassPaymentProcessingChannelFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentProcessingChannel, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      InitiateMassPaymentProcessingChannel$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentProcessingChannel' from JSON`,
  );
}

/** @internal */
export const ItemMetadata$inboundSchema: z.ZodType<
  ItemMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ItemMetadata$Outbound = {};

/** @internal */
export const ItemMetadata$outboundSchema: z.ZodType<
  ItemMetadata$Outbound,
  z.ZodTypeDef,
  ItemMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemMetadata$ {
  /** @deprecated use `ItemMetadata$inboundSchema` instead. */
  export const inboundSchema = ItemMetadata$inboundSchema;
  /** @deprecated use `ItemMetadata$outboundSchema` instead. */
  export const outboundSchema = ItemMetadata$outboundSchema;
  /** @deprecated use `ItemMetadata$Outbound` instead. */
  export type Outbound = ItemMetadata$Outbound;
}

export function itemMetadataToJSON(itemMetadata: ItemMetadata): string {
  return JSON.stringify(ItemMetadata$outboundSchema.parse(itemMetadata));
}

export function itemMetadataFromJSON(
  jsonString: string,
): SafeParseResult<ItemMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemMetadata' from JSON`,
  );
}

/** @internal */
export const ItemClearing$inboundSchema: z.ZodType<
  ItemClearing,
  z.ZodTypeDef,
  unknown
> = z.object({
  destination: z.string().optional(),
});

/** @internal */
export type ItemClearing$Outbound = {
  destination?: string | undefined;
};

/** @internal */
export const ItemClearing$outboundSchema: z.ZodType<
  ItemClearing$Outbound,
  z.ZodTypeDef,
  ItemClearing
> = z.object({
  destination: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemClearing$ {
  /** @deprecated use `ItemClearing$inboundSchema` instead. */
  export const inboundSchema = ItemClearing$inboundSchema;
  /** @deprecated use `ItemClearing$outboundSchema` instead. */
  export const outboundSchema = ItemClearing$outboundSchema;
  /** @deprecated use `ItemClearing$Outbound` instead. */
  export type Outbound = ItemClearing$Outbound;
}

export function itemClearingToJSON(itemClearing: ItemClearing): string {
  return JSON.stringify(ItemClearing$outboundSchema.parse(itemClearing));
}

export function itemClearingFromJSON(
  jsonString: string,
): SafeParseResult<ItemClearing, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemClearing$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemClearing' from JSON`,
  );
}

/** @internal */
export const ItemAddenda$inboundSchema: z.ZodType<
  ItemAddenda,
  z.ZodTypeDef,
  unknown
> = z.object({
  values: z.array(z.string()).optional(),
});

/** @internal */
export type ItemAddenda$Outbound = {
  values?: Array<string> | undefined;
};

/** @internal */
export const ItemAddenda$outboundSchema: z.ZodType<
  ItemAddenda$Outbound,
  z.ZodTypeDef,
  ItemAddenda
> = z.object({
  values: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemAddenda$ {
  /** @deprecated use `ItemAddenda$inboundSchema` instead. */
  export const inboundSchema = ItemAddenda$inboundSchema;
  /** @deprecated use `ItemAddenda$outboundSchema` instead. */
  export const outboundSchema = ItemAddenda$outboundSchema;
  /** @deprecated use `ItemAddenda$Outbound` instead. */
  export type Outbound = ItemAddenda$Outbound;
}

export function itemAddendaToJSON(itemAddenda: ItemAddenda): string {
  return JSON.stringify(ItemAddenda$outboundSchema.parse(itemAddenda));
}

export function itemAddendaFromJSON(
  jsonString: string,
): SafeParseResult<ItemAddenda, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemAddenda$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemAddenda' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentAchDetailsDestination$inboundSchema: z.ZodType<
  InitiateMassPaymentAchDetailsDestination,
  z.ZodTypeDef,
  unknown
> = z.object({
  addenda: z.lazy(() => ItemAddenda$inboundSchema).optional(),
});

/** @internal */
export type InitiateMassPaymentAchDetailsDestination$Outbound = {
  addenda?: ItemAddenda$Outbound | undefined;
};

/** @internal */
export const InitiateMassPaymentAchDetailsDestination$outboundSchema: z.ZodType<
  InitiateMassPaymentAchDetailsDestination$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentAchDetailsDestination
> = z.object({
  addenda: z.lazy(() => ItemAddenda$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentAchDetailsDestination$ {
  /** @deprecated use `InitiateMassPaymentAchDetailsDestination$inboundSchema` instead. */
  export const inboundSchema =
    InitiateMassPaymentAchDetailsDestination$inboundSchema;
  /** @deprecated use `InitiateMassPaymentAchDetailsDestination$outboundSchema` instead. */
  export const outboundSchema =
    InitiateMassPaymentAchDetailsDestination$outboundSchema;
  /** @deprecated use `InitiateMassPaymentAchDetailsDestination$Outbound` instead. */
  export type Outbound = InitiateMassPaymentAchDetailsDestination$Outbound;
}

export function initiateMassPaymentAchDetailsDestinationToJSON(
  initiateMassPaymentAchDetailsDestination:
    InitiateMassPaymentAchDetailsDestination,
): string {
  return JSON.stringify(
    InitiateMassPaymentAchDetailsDestination$outboundSchema.parse(
      initiateMassPaymentAchDetailsDestination,
    ),
  );
}

export function initiateMassPaymentAchDetailsDestinationFromJSON(
  jsonString: string,
): SafeParseResult<
  InitiateMassPaymentAchDetailsDestination,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      InitiateMassPaymentAchDetailsDestination$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'InitiateMassPaymentAchDetailsDestination' from JSON`,
  );
}

/** @internal */
export const ItemAchDetails$inboundSchema: z.ZodType<
  ItemAchDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  destination: z.lazy(() =>
    InitiateMassPaymentAchDetailsDestination$inboundSchema
  ).optional(),
});

/** @internal */
export type ItemAchDetails$Outbound = {
  destination?: InitiateMassPaymentAchDetailsDestination$Outbound | undefined;
};

/** @internal */
export const ItemAchDetails$outboundSchema: z.ZodType<
  ItemAchDetails$Outbound,
  z.ZodTypeDef,
  ItemAchDetails
> = z.object({
  destination: z.lazy(() =>
    InitiateMassPaymentAchDetailsDestination$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ItemAchDetails$ {
  /** @deprecated use `ItemAchDetails$inboundSchema` instead. */
  export const inboundSchema = ItemAchDetails$inboundSchema;
  /** @deprecated use `ItemAchDetails$outboundSchema` instead. */
  export const outboundSchema = ItemAchDetails$outboundSchema;
  /** @deprecated use `ItemAchDetails$Outbound` instead. */
  export type Outbound = ItemAchDetails$Outbound;
}

export function itemAchDetailsToJSON(itemAchDetails: ItemAchDetails): string {
  return JSON.stringify(ItemAchDetails$outboundSchema.parse(itemAchDetails));
}

export function itemAchDetailsFromJSON(
  jsonString: string,
): SafeParseResult<ItemAchDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ItemAchDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ItemAchDetails' from JSON`,
  );
}

/** @internal */
export const Item$inboundSchema: z.ZodType<Item, z.ZodTypeDef, unknown> = z
  .object({
    _links: z.lazy(() => ItemLinks$inboundSchema).optional(),
    amount: models.TransferAmount$inboundSchema.optional(),
    processingChannel: z.lazy(() =>
      InitiateMassPaymentProcessingChannel$inboundSchema
    ).optional(),
    metadata: z.lazy(() => ItemMetadata$inboundSchema).optional(),
    clearing: z.lazy(() => ItemClearing$inboundSchema).optional(),
    achDetails: z.lazy(() => ItemAchDetails$inboundSchema).optional(),
    correlationId: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "_links": "links",
    });
  });

/** @internal */
export type Item$Outbound = {
  _links?: ItemLinks$Outbound | undefined;
  amount?: models.TransferAmount$Outbound | undefined;
  processingChannel?: InitiateMassPaymentProcessingChannel$Outbound | undefined;
  metadata?: ItemMetadata$Outbound | undefined;
  clearing?: ItemClearing$Outbound | undefined;
  achDetails?: ItemAchDetails$Outbound | undefined;
  correlationId?: string | undefined;
};

/** @internal */
export const Item$outboundSchema: z.ZodType<Item$Outbound, z.ZodTypeDef, Item> =
  z.object({
    links: z.lazy(() => ItemLinks$outboundSchema).optional(),
    amount: models.TransferAmount$outboundSchema.optional(),
    processingChannel: z.lazy(() =>
      InitiateMassPaymentProcessingChannel$outboundSchema
    ).optional(),
    metadata: z.lazy(() => ItemMetadata$outboundSchema).optional(),
    clearing: z.lazy(() => ItemClearing$outboundSchema).optional(),
    achDetails: z.lazy(() => ItemAchDetails$outboundSchema).optional(),
    correlationId: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      links: "_links",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Item$ {
  /** @deprecated use `Item$inboundSchema` instead. */
  export const inboundSchema = Item$inboundSchema;
  /** @deprecated use `Item$outboundSchema` instead. */
  export const outboundSchema = Item$outboundSchema;
  /** @deprecated use `Item$Outbound` instead. */
  export type Outbound = Item$Outbound;
}

export function itemToJSON(item: Item): string {
  return JSON.stringify(Item$outboundSchema.parse(item));
}

export function itemFromJSON(
  jsonString: string,
): SafeParseResult<Item, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Item$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Item' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentSourceAddenda$inboundSchema: z.ZodType<
  InitiateMassPaymentSourceAddenda,
  z.ZodTypeDef,
  unknown
> = z.object({
  values: z.array(z.string()).optional(),
});

/** @internal */
export type InitiateMassPaymentSourceAddenda$Outbound = {
  values?: Array<string> | undefined;
};

/** @internal */
export const InitiateMassPaymentSourceAddenda$outboundSchema: z.ZodType<
  InitiateMassPaymentSourceAddenda$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentSourceAddenda
> = z.object({
  values: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentSourceAddenda$ {
  /** @deprecated use `InitiateMassPaymentSourceAddenda$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentSourceAddenda$inboundSchema;
  /** @deprecated use `InitiateMassPaymentSourceAddenda$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentSourceAddenda$outboundSchema;
  /** @deprecated use `InitiateMassPaymentSourceAddenda$Outbound` instead. */
  export type Outbound = InitiateMassPaymentSourceAddenda$Outbound;
}

export function initiateMassPaymentSourceAddendaToJSON(
  initiateMassPaymentSourceAddenda: InitiateMassPaymentSourceAddenda,
): string {
  return JSON.stringify(
    InitiateMassPaymentSourceAddenda$outboundSchema.parse(
      initiateMassPaymentSourceAddenda,
    ),
  );
}

export function initiateMassPaymentSourceAddendaFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentSourceAddenda, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentSourceAddenda$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentSourceAddenda' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentAchDetailsSource$inboundSchema: z.ZodType<
  InitiateMassPaymentAchDetailsSource,
  z.ZodTypeDef,
  unknown
> = z.object({
  addenda: z.lazy(() => InitiateMassPaymentSourceAddenda$inboundSchema)
    .optional(),
});

/** @internal */
export type InitiateMassPaymentAchDetailsSource$Outbound = {
  addenda?: InitiateMassPaymentSourceAddenda$Outbound | undefined;
};

/** @internal */
export const InitiateMassPaymentAchDetailsSource$outboundSchema: z.ZodType<
  InitiateMassPaymentAchDetailsSource$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentAchDetailsSource
> = z.object({
  addenda: z.lazy(() => InitiateMassPaymentSourceAddenda$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentAchDetailsSource$ {
  /** @deprecated use `InitiateMassPaymentAchDetailsSource$inboundSchema` instead. */
  export const inboundSchema =
    InitiateMassPaymentAchDetailsSource$inboundSchema;
  /** @deprecated use `InitiateMassPaymentAchDetailsSource$outboundSchema` instead. */
  export const outboundSchema =
    InitiateMassPaymentAchDetailsSource$outboundSchema;
  /** @deprecated use `InitiateMassPaymentAchDetailsSource$Outbound` instead. */
  export type Outbound = InitiateMassPaymentAchDetailsSource$Outbound;
}

export function initiateMassPaymentAchDetailsSourceToJSON(
  initiateMassPaymentAchDetailsSource: InitiateMassPaymentAchDetailsSource,
): string {
  return JSON.stringify(
    InitiateMassPaymentAchDetailsSource$outboundSchema.parse(
      initiateMassPaymentAchDetailsSource,
    ),
  );
}

export function initiateMassPaymentAchDetailsSourceFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentAchDetailsSource, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      InitiateMassPaymentAchDetailsSource$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentAchDetailsSource' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentAchDetails$inboundSchema: z.ZodType<
  InitiateMassPaymentAchDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.lazy(() => InitiateMassPaymentAchDetailsSource$inboundSchema)
    .optional(),
});

/** @internal */
export type InitiateMassPaymentAchDetails$Outbound = {
  source?: InitiateMassPaymentAchDetailsSource$Outbound | undefined;
};

/** @internal */
export const InitiateMassPaymentAchDetails$outboundSchema: z.ZodType<
  InitiateMassPaymentAchDetails$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentAchDetails
> = z.object({
  source: z.lazy(() => InitiateMassPaymentAchDetailsSource$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentAchDetails$ {
  /** @deprecated use `InitiateMassPaymentAchDetails$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentAchDetails$inboundSchema;
  /** @deprecated use `InitiateMassPaymentAchDetails$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentAchDetails$outboundSchema;
  /** @deprecated use `InitiateMassPaymentAchDetails$Outbound` instead. */
  export type Outbound = InitiateMassPaymentAchDetails$Outbound;
}

export function initiateMassPaymentAchDetailsToJSON(
  initiateMassPaymentAchDetails: InitiateMassPaymentAchDetails,
): string {
  return JSON.stringify(
    InitiateMassPaymentAchDetails$outboundSchema.parse(
      initiateMassPaymentAchDetails,
    ),
  );
}

export function initiateMassPaymentAchDetailsFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentAchDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentAchDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentAchDetails' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentClearing$inboundSchema: z.ZodType<
  InitiateMassPaymentClearing,
  z.ZodTypeDef,
  unknown
> = z.object({
  source: z.string().optional(),
});

/** @internal */
export type InitiateMassPaymentClearing$Outbound = {
  source?: string | undefined;
};

/** @internal */
export const InitiateMassPaymentClearing$outboundSchema: z.ZodType<
  InitiateMassPaymentClearing$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentClearing
> = z.object({
  source: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentClearing$ {
  /** @deprecated use `InitiateMassPaymentClearing$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentClearing$inboundSchema;
  /** @deprecated use `InitiateMassPaymentClearing$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentClearing$outboundSchema;
  /** @deprecated use `InitiateMassPaymentClearing$Outbound` instead. */
  export type Outbound = InitiateMassPaymentClearing$Outbound;
}

export function initiateMassPaymentClearingToJSON(
  initiateMassPaymentClearing: InitiateMassPaymentClearing,
): string {
  return JSON.stringify(
    InitiateMassPaymentClearing$outboundSchema.parse(
      initiateMassPaymentClearing,
    ),
  );
}

export function initiateMassPaymentClearingFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentClearing, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentClearing$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentClearing' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentMetadata$inboundSchema: z.ZodType<
  InitiateMassPaymentMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type InitiateMassPaymentMetadata$Outbound = {};

/** @internal */
export const InitiateMassPaymentMetadata$outboundSchema: z.ZodType<
  InitiateMassPaymentMetadata$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentMetadata$ {
  /** @deprecated use `InitiateMassPaymentMetadata$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentMetadata$inboundSchema;
  /** @deprecated use `InitiateMassPaymentMetadata$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentMetadata$outboundSchema;
  /** @deprecated use `InitiateMassPaymentMetadata$Outbound` instead. */
  export type Outbound = InitiateMassPaymentMetadata$Outbound;
}

export function initiateMassPaymentMetadataToJSON(
  initiateMassPaymentMetadata: InitiateMassPaymentMetadata,
): string {
  return JSON.stringify(
    InitiateMassPaymentMetadata$outboundSchema.parse(
      initiateMassPaymentMetadata,
    ),
  );
}

export function initiateMassPaymentMetadataFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentMetadata' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentRequestBody$inboundSchema: z.ZodType<
  InitiateMassPaymentRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _links: z.lazy(() => InitiateMassPaymentLinks$inboundSchema),
  items: z.array(z.lazy(() => Item$inboundSchema)),
  status: z.string().optional(),
  achDetails: z.lazy(() => InitiateMassPaymentAchDetails$inboundSchema)
    .optional(),
  clearing: z.lazy(() => InitiateMassPaymentClearing$inboundSchema).optional(),
  metadata: z.lazy(() => InitiateMassPaymentMetadata$inboundSchema).optional(),
  correlationId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "_links": "links",
  });
});

/** @internal */
export type InitiateMassPaymentRequestBody$Outbound = {
  _links: InitiateMassPaymentLinks$Outbound;
  items: Array<Item$Outbound>;
  status?: string | undefined;
  achDetails?: InitiateMassPaymentAchDetails$Outbound | undefined;
  clearing?: InitiateMassPaymentClearing$Outbound | undefined;
  metadata?: InitiateMassPaymentMetadata$Outbound | undefined;
  correlationId?: string | undefined;
};

/** @internal */
export const InitiateMassPaymentRequestBody$outboundSchema: z.ZodType<
  InitiateMassPaymentRequestBody$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentRequestBody
> = z.object({
  links: z.lazy(() => InitiateMassPaymentLinks$outboundSchema),
  items: z.array(z.lazy(() => Item$outboundSchema)),
  status: z.string().optional(),
  achDetails: z.lazy(() => InitiateMassPaymentAchDetails$outboundSchema)
    .optional(),
  clearing: z.lazy(() => InitiateMassPaymentClearing$outboundSchema).optional(),
  metadata: z.lazy(() => InitiateMassPaymentMetadata$outboundSchema).optional(),
  correlationId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    links: "_links",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentRequestBody$ {
  /** @deprecated use `InitiateMassPaymentRequestBody$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentRequestBody$inboundSchema;
  /** @deprecated use `InitiateMassPaymentRequestBody$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentRequestBody$outboundSchema;
  /** @deprecated use `InitiateMassPaymentRequestBody$Outbound` instead. */
  export type Outbound = InitiateMassPaymentRequestBody$Outbound;
}

export function initiateMassPaymentRequestBodyToJSON(
  initiateMassPaymentRequestBody: InitiateMassPaymentRequestBody,
): string {
  return JSON.stringify(
    InitiateMassPaymentRequestBody$outboundSchema.parse(
      initiateMassPaymentRequestBody,
    ),
  );
}

export function initiateMassPaymentRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentRequestBody' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentRequest$inboundSchema: z.ZodType<
  InitiateMassPaymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "Idempotency-Key": z.string().optional(),
  RequestBody: z.lazy(() => InitiateMassPaymentRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Idempotency-Key": "idempotencyKey",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type InitiateMassPaymentRequest$Outbound = {
  "Idempotency-Key"?: string | undefined;
  RequestBody: InitiateMassPaymentRequestBody$Outbound;
};

/** @internal */
export const InitiateMassPaymentRequest$outboundSchema: z.ZodType<
  InitiateMassPaymentRequest$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentRequest
> = z.object({
  idempotencyKey: z.string().optional(),
  requestBody: z.lazy(() => InitiateMassPaymentRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    idempotencyKey: "Idempotency-Key",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentRequest$ {
  /** @deprecated use `InitiateMassPaymentRequest$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentRequest$inboundSchema;
  /** @deprecated use `InitiateMassPaymentRequest$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentRequest$outboundSchema;
  /** @deprecated use `InitiateMassPaymentRequest$Outbound` instead. */
  export type Outbound = InitiateMassPaymentRequest$Outbound;
}

export function initiateMassPaymentRequestToJSON(
  initiateMassPaymentRequest: InitiateMassPaymentRequest,
): string {
  return JSON.stringify(
    InitiateMassPaymentRequest$outboundSchema.parse(initiateMassPaymentRequest),
  );
}

export function initiateMassPaymentRequestFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentRequest' from JSON`,
  );
}

/** @internal */
export const InitiateMassPaymentResponse$inboundSchema: z.ZodType<
  InitiateMassPaymentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())).default({}),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
  });
});

/** @internal */
export type InitiateMassPaymentResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
};

/** @internal */
export const InitiateMassPaymentResponse$outboundSchema: z.ZodType<
  InitiateMassPaymentResponse$Outbound,
  z.ZodTypeDef,
  InitiateMassPaymentResponse
> = z.object({
  headers: z.record(z.array(z.string())),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InitiateMassPaymentResponse$ {
  /** @deprecated use `InitiateMassPaymentResponse$inboundSchema` instead. */
  export const inboundSchema = InitiateMassPaymentResponse$inboundSchema;
  /** @deprecated use `InitiateMassPaymentResponse$outboundSchema` instead. */
  export const outboundSchema = InitiateMassPaymentResponse$outboundSchema;
  /** @deprecated use `InitiateMassPaymentResponse$Outbound` instead. */
  export type Outbound = InitiateMassPaymentResponse$Outbound;
}

export function initiateMassPaymentResponseToJSON(
  initiateMassPaymentResponse: InitiateMassPaymentResponse,
): string {
  return JSON.stringify(
    InitiateMassPaymentResponse$outboundSchema.parse(
      initiateMassPaymentResponse,
    ),
  );
}

export function initiateMassPaymentResponseFromJSON(
  jsonString: string,
): SafeParseResult<InitiateMassPaymentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InitiateMassPaymentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InitiateMassPaymentResponse' from JSON`,
  );
}
