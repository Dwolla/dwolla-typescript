/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersDocumentsCreate } from "../funcs/customersDocumentsCreate.js";
import { customersDocumentsList } from "../funcs/customersDocumentsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomersDocuments extends ClientSDK {
  /**
   * List documents for customer
   *
   * @remarks
   * Returns all identity verification documents submitted for a customer. Includes document status, verification results, document type (passport, driver's license, etc.), and failure reasons if verification was rejected. Used to track document submission and verification progress during the business verification process.
   */
  async list(
    request: operations.ListCustomerDocumentsRequest,
    options?: RequestOptions,
  ): Promise<models.Documents> {
    return unwrapAsync(customersDocumentsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a document for customer
   *
   * @remarks
   * Uploads an identity verification document for a customer using multipart form-data. Required when a customer has "document" status during the verification process.
   */
  async create(
    request: operations.CreateCustomerDocumentRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCustomerDocumentResponse | undefined> {
    return unwrapAsync(customersDocumentsCreate(
      this,
      request,
      options,
    ));
  }
}
