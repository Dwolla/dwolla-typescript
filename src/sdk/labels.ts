/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { labelsGet } from "../funcs/labelsGet.js";
import { labelsRemove } from "../funcs/labelsRemove.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { LedgerEntries } from "./ledgerentries.js";
import { Reallocations } from "./reallocations.js";

export class Labels extends ClientSDK {
  private _ledgerEntries?: LedgerEntries;
  get ledgerEntries(): LedgerEntries {
    return (this._ledgerEntries ??= new LedgerEntries(this._options));
  }

  private _reallocations?: Reallocations;
  get reallocations(): Reallocations {
    return (this._reallocations ??= new Reallocations(this._options));
  }

  /**
   * Retrieve a label
   *
   * @remarks
   * Retrieve details for a specific Label used to categorize and track funds within your account. Returns Label information including unique identifier, current amount with currency, and creation timestamp.
   */
  async get(
    request: operations.GetLabelRequest,
    options?: RequestOptions,
  ): Promise<models.Label> {
    return unwrapAsync(labelsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a label
   *
   * @remarks
   * Delete a Label to stop tracking funds and remove it from your account. Returns success status if the Label is successfully removed. Use this to streamline your account management and remove unused Labels from your system.
   */
  async remove(
    request: operations.RemoveLabelRequest,
    options?: RequestOptions,
  ): Promise<models.Label> {
    return unwrapAsync(labelsRemove(
      this,
      request,
      options,
    ));
  }
}
