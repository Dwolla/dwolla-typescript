/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersLabelsCreate } from "../funcs/customersLabelsCreate.js";
import { customersLabelsList } from "../funcs/customersLabelsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomersLabels extends ClientSDK {
  /**
   * List labels for a customer
   *
   * @remarks
   * Returns all labels for a specified Verified Customer, sorted by creation date (most recent first). Supports pagination with limit and offset parameters. Each label includes its current amount and creation timestamp.
   */
  async list(
    request: operations.ListCustomerLabelsRequest,
    options?: RequestOptions,
  ): Promise<models.Labels> {
    return unwrapAsync(customersLabelsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a label for a customer
   *
   * @remarks
   * Creates a new label for a Verified Customer with a specified amount. Labels help organize and track funds within a customer's balance. Returns the location of the created label resource in the response header.
   */
  async create(
    request: operations.CreateCustomerLabelRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCustomerLabelResponse | undefined> {
    return unwrapAsync(customersLabelsCreate(
      this,
      request,
      options,
    ));
  }
}
