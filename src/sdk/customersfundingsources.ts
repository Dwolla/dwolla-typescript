/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersFundingSourcesCreate } from "../funcs/customersFundingSourcesCreate.js";
import { customersFundingSourcesList } from "../funcs/customersFundingSourcesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomersFundingSources extends ClientSDK {
  /**
   * List customer funding sources
   *
   * @remarks
   * List customer funding sources
   */
  async list(
    request: operations.ListCustomerFundingSourcesRequest,
    options?: RequestOptions,
  ): Promise<Array<models.FundingSources>> {
    return unwrapAsync(customersFundingSourcesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create customer funding source
   *
   * @remarks
   * Create a new funding source for a customer.
   * There are multiple methods available:
   * - Basic bank funding source (with routing/account numbers)
   * - Using an exchange
   */
  async create(
    request: operations.CreateCustomerFundingSourceRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCustomerFundingSourceResponse | undefined> {
    return unwrapAsync(customersFundingSourcesCreate(
      this,
      request,
      options,
    ));
  }
}
