/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersExchangesCreate } from "../funcs/customersExchangesCreate.js";
import { customersExchangesList } from "../funcs/customersExchangesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomersExchanges extends ClientSDK {
  /**
   * List exchanges for a customer
   *
   * @remarks
   * Returns all exchanges for a specific customer. Exchanges represent connections between the customer's external bank accounts and open banking partners. Includes exchange status, creation date, and links to associated funding sources and partners.
   */
  async list(
    request: operations.ListCustomerExchangesRequest,
    options?: RequestOptions,
  ): Promise<models.Exchanges> {
    return unwrapAsync(customersExchangesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create an exchange for a customer
   *
   * @remarks
   * Creates an exchange connection between a customer's external bank account and Dwolla through open banking partners. Acts as the handshake that establishes secure access to the customer's bank account data. Request body varies by partner (Plaid, MX, Flinks, Finicity).
   */
  async create(
    request: operations.CreateCustomerExchangeRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCustomerExchangeResponse | undefined> {
    return unwrapAsync(customersExchangesCreate(
      this,
      request,
      options,
    ));
  }
}
