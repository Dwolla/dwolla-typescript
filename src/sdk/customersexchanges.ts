/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customersExchangesCreate } from "../funcs/customersExchangesCreate.js";
import { customersExchangesList } from "../funcs/customersExchangesList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomersExchanges extends ClientSDK {
  /**
   * List exchanges for a customer
   *
   * @remarks
   * List exchanges for a customer
   */
  async list(
    request: operations.ListCustomerExchangesRequest,
    options?: RequestOptions,
  ): Promise<models.Exchanges> {
    return unwrapAsync(customersExchangesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create an exchange for a customer
   *
   * @remarks
   * Create an exchange for a customer. The request body will vary based on the exchange partner.
   * For Finicity, the request body will include finicity-specific fields.
   * For MX Secure Exchange, the request body will include an MX token.
   * For MX Open Banking, the request body will include an available connection token.
   * For Flinks Secure Exchange, the request body will include a token.
   * For Plaid Secure Exchange, the request body will include a processor token.
   * For Plaid Open Banking, the request body will include a public token.
   */
  async create(
    request: operations.CreateCustomerExchangeRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCustomerExchangeResponse | undefined> {
    return unwrapAsync(customersExchangesCreate(
      this,
      request,
      options,
    ));
  }
}
