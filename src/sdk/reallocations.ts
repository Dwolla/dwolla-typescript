/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { labelsReallocationsCreate } from "../funcs/labelsReallocationsCreate.js";
import { labelsReallocationsGet } from "../funcs/labelsReallocationsGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Reallocations extends ClientSDK {
  /**
   * Create a label reallocation
   *
   * @remarks
   * Reallocates funds between two labels belonging to the same Verified Customer. Moves the specified amount from the source label to the destination label, creating ledger entries for both. The reallocation only succeeds if the source label has sufficient funds.
   */
  async create(
    request: operations.CreateLabelReallocationRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateLabelReallocationResponse | undefined> {
    return unwrapAsync(labelsReallocationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a label reallocation
   *
   * @remarks
   * Retrieve details for a specific label reallocation that transfers funds between Labels. Returns reallocation information including source and destination Labels, amount transferred, status, and creation timestamp. Use this to track and audit fund movements between different Labels.
   */
  async get(
    request: operations.RetrieveLabelReallocationRequest,
    options?: RequestOptions,
  ): Promise<operations.RetrieveLabelReallocationResponse> {
    return unwrapAsync(labelsReallocationsGet(
      this,
      request,
      options,
    ));
  }
}
