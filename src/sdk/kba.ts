/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { kbaGetQuestions } from "../funcs/kbaGetQuestions.js";
import { kbaVerify } from "../funcs/kbaVerify.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Kba extends ClientSDK {
  /**
   * Retrieve KBA Questions
   *
   * @remarks
   * Returns the KBA questions for a specific KBA session. The questions are used to verify the customer's identity during the KBA process.
   */
  async getQuestions(
    request: operations.GetKbaQuestionsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetKbaQuestionsResponse> {
    return unwrapAsync(kbaGetQuestions(
      this,
      request,
      options,
    ));
  }

  /**
   * Verify KBA Questions
   *
   * @remarks
   * Submits customer answers to KBA questions for identity verification. Requires four question-answer pairs with questionId and answerId values. Returns verification status indicating whether the customer passed or failed the KBA authentication.
   */
  async verify(
    request: operations.VerifyKbaQuestionsRequest,
    options?: RequestOptions,
  ): Promise<operations.VerifyKbaQuestionsResponse> {
    return unwrapAsync(kbaVerify(
      this,
      request,
      options,
    ));
  }
}
