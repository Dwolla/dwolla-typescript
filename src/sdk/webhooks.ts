/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { webhooksGet } from "../funcs/webhooksGet.js";
import { webhooksListRetries } from "../funcs/webhooksListRetries.js";
import { webhooksRetry } from "../funcs/webhooksRetry.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Webhooks extends ClientSDK {
  /**
   * Retrieve a webhook
   *
   * @remarks
   * Retrieve a webhook
   */
  async get(
    request: operations.GetWebhookRequest,
    options?: RequestOptions,
  ): Promise<models.Webhook> {
    return unwrapAsync(webhooksGet(
      this,
      request,
      options,
    ));
  }

  /**
   * List retries for a webhook
   *
   * @remarks
   * List retries for a webhook
   */
  async listRetries(
    request: operations.ListWebhookRetriesRequest,
    options?: RequestOptions,
  ): Promise<models.WebhookRetries> {
    return unwrapAsync(webhooksListRetries(
      this,
      request,
      options,
    ));
  }

  /**
   * Retry a webhook
   *
   * @remarks
   * Retry a webhook
   */
  async retry(
    request: operations.RetryWebhookRequest,
    options?: RequestOptions,
  ): Promise<operations.RetryWebhookResponse | undefined> {
    return unwrapAsync(webhooksRetry(
      this,
      request,
      options,
    ));
  }
}
