/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { beneficialOwnersDocumentsCreate } from "../funcs/beneficialOwnersDocumentsCreate.js";
import { beneficialOwnersDocumentsList } from "../funcs/beneficialOwnersDocumentsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class BeneficialOwnersDocuments extends ClientSDK {
  /**
   * List documents for beneficial owner
   *
   * @remarks
   * Returns all identity verification documents submitted for a beneficial owner. Includes document status, verification results, document type (passport, driver's license, etc.), and failure reasons if verification was rejected. Used to track document submission and verification progress during the business verification process.
   */
  async list(
    request: operations.ListBeneficialOwnerDocumentsRequest,
    options?: RequestOptions,
  ): Promise<models.Documents> {
    return unwrapAsync(beneficialOwnersDocumentsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a document for beneficial owner
   *
   * @remarks
   * Uploads an identity verification document for a beneficial owner using multipart form-data. Required when a beneficial owner has "document" status during the business verification process.
   */
  async create(
    request: operations.CreateBeneficialOwnerDocumentRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateBeneficialOwnerDocumentResponse | undefined> {
    return unwrapAsync(beneficialOwnersDocumentsCreate(
      this,
      request,
      options,
    ));
  }
}
