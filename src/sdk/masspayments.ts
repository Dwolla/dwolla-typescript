/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { massPaymentsCreate } from "../funcs/massPaymentsCreate.js";
import { massPaymentsGet } from "../funcs/massPaymentsGet.js";
import { massPaymentsGetItem } from "../funcs/massPaymentsGetItem.js";
import { massPaymentsListItems } from "../funcs/massPaymentsListItems.js";
import { massPaymentsUpdate } from "../funcs/massPaymentsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class MassPayments extends ClientSDK {
  /**
   * Initiate a mass payment
   *
   * @remarks
   * Initiate a mass payment
   */
  async create(
    request: operations.InitiateMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<operations.InitiateMassPaymentResponse | undefined> {
    return unwrapAsync(massPaymentsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a mass payment
   *
   * @remarks
   * Retrieve a mass payment
   */
  async get(
    request: operations.GetMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<models.MassPayment> {
    return unwrapAsync(massPaymentsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a mass payment
   *
   * @remarks
   * This section covers how to update a mass payment's status to `pending` which triggers processing on a created and deferred mass payment, or `cancelled` which cancels a created and deferred mass payment.
   */
  async update(
    request: operations.UpdateMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<models.MassPayment> {
    return unwrapAsync(massPaymentsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * List items for a mass payment
   *
   * @remarks
   * List items for a mass payment
   */
  async listItems(
    request: operations.ListMassPaymentItemsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListMassPaymentItemsResponse> {
    return unwrapAsync(massPaymentsListItems(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve mass payment item
   *
   * @remarks
   * Retrieve mass payment item
   */
  async getItem(
    request: operations.GetMassPaymentItemRequest,
    options?: RequestOptions,
  ): Promise<models.MassPaymentItem> {
    return unwrapAsync(massPaymentsGetItem(
      this,
      request,
      options,
    ));
  }
}
