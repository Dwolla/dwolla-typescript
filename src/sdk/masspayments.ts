/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { massPaymentsCreate } from "../funcs/massPaymentsCreate.js";
import { massPaymentsGet } from "../funcs/massPaymentsGet.js";
import { massPaymentsUpdate } from "../funcs/massPaymentsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Items } from "./items.js";

export class MassPayments extends ClientSDK {
  private _items?: Items;
  get items(): Items {
    return (this._items ??= new Items(this._options));
  }

  /**
   * Initiate a mass payment
   *
   * @remarks
   * Create a mass payment containing up to 5,000 individual payment items from a Dwolla Main Account or Verified Customer funding source. Supports optional metadata, correlation IDs for traceability, deferred processing, and expedited transfer options including same-day ACH clearing. Returns the location of the created mass payment resource with a unique identifier for tracking and management.
   */
  async create(
    request: operations.InitiateMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<operations.InitiateMassPaymentResponse | undefined> {
    return unwrapAsync(massPaymentsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a mass payment
   *
   * @remarks
   * Retrieve detailed information for a mass payment by its unique identifier. Returns the current processing status (pending, processing, or complete), creation date, metadata, and links to the source funding source and payment items. Use this endpoint to monitor mass payment processing progress and determine when to check individual item results.
   */
  async get(
    request: operations.GetMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<models.MassPayment> {
    return unwrapAsync(massPaymentsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a mass payment
   *
   * @remarks
   * Update the status of a deferred mass payment to control its processing lifecycle. Set status to `pending` to trigger processing and begin fund transfers, or `cancelled` to permanently cancel the mass payment before processing begins. Only applies to mass payments created with deferred status. Returns the updated mass payment resource with the new status.
   */
  async update(
    request: operations.UpdateMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<models.MassPayment> {
    return unwrapAsync(massPaymentsUpdate(
      this,
      request,
      options,
    ));
  }
}
