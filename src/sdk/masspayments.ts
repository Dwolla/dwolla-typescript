/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { massPaymentsGetMassPayment } from "../funcs/massPaymentsGetMassPayment.js";
import { massPaymentsGetMassPaymentItem } from "../funcs/massPaymentsGetMassPaymentItem.js";
import { massPaymentsInitiateMassPayment } from "../funcs/massPaymentsInitiateMassPayment.js";
import { massPaymentsListCustomerMassPayments } from "../funcs/massPaymentsListCustomerMassPayments.js";
import { massPaymentsListMassPaymentItems } from "../funcs/massPaymentsListMassPaymentItems.js";
import { massPaymentsUpdateMassPayment } from "../funcs/massPaymentsUpdateMassPayment.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class MassPayments extends ClientSDK {
  /**
   * Initiate a mass payment
   *
   * @remarks
   * Initiate a mass payment
   */
  async initiateMassPayment(
    request: operations.InitiateMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<operations.InitiateMassPaymentResponse | undefined> {
    return unwrapAsync(massPaymentsInitiateMassPayment(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a mass payment
   *
   * @remarks
   * Retrieve a mass payment
   */
  async getMassPayment(
    request: operations.GetMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<models.MassPayment> {
    return unwrapAsync(massPaymentsGetMassPayment(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a mass payment to process or cancel it
   *
   * @remarks
   * Update a mass payment to process or cancel it
   */
  async updateMassPayment(
    request: operations.UpdateMassPaymentRequest,
    options?: RequestOptions,
  ): Promise<models.MassPayment> {
    return unwrapAsync(massPaymentsUpdateMassPayment(
      this,
      request,
      options,
    ));
  }

  /**
   * List items for a mass payment
   *
   * @remarks
   * List items for a mass payment
   */
  async listMassPaymentItems(
    request: operations.ListMassPaymentItemsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListMassPaymentItemsResponse> {
    return unwrapAsync(massPaymentsListMassPaymentItems(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve mass payment item
   *
   * @remarks
   * Retrieve mass payment item
   */
  async getMassPaymentItem(
    request: operations.GetMassPaymentItemRequest,
    options?: RequestOptions,
  ): Promise<models.MassPaymentItem> {
    return unwrapAsync(massPaymentsGetMassPaymentItem(
      this,
      request,
      options,
    ));
  }

  /**
   * List mass payments for customer
   *
   * @remarks
   * List mass payments for customer
   */
  async listCustomerMassPayments(
    request: operations.ListCustomerMassPaymentsRequest,
    options?: RequestOptions,
  ): Promise<models.MassPayments> {
    return unwrapAsync(massPaymentsListCustomerMassPayments(
      this,
      request,
      options,
    ));
  }
}
