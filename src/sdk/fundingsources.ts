/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { fundingSourcesGet } from "../funcs/fundingSourcesGet.js";
import { fundingSourcesGetVanRouting } from "../funcs/fundingSourcesGetVanRouting.js";
import { fundingSourcesUpdateOrRemove } from "../funcs/fundingSourcesUpdateOrRemove.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Balance } from "./balance.js";
import { MicroDeposits } from "./microdeposits.js";
import { OnDemandTransferAuthorizations } from "./ondemandtransferauthorizations.js";

export class FundingSources extends ClientSDK {
  private _microDeposits?: MicroDeposits;
  get microDeposits(): MicroDeposits {
    return (this._microDeposits ??= new MicroDeposits(this._options));
  }

  private _balance?: Balance;
  get balance(): Balance {
    return (this._balance ??= new Balance(this._options));
  }

  private _onDemandTransferAuthorizations?: OnDemandTransferAuthorizations;
  get onDemandTransferAuthorizations(): OnDemandTransferAuthorizations {
    return (this._onDemandTransferAuthorizations ??=
      new OnDemandTransferAuthorizations(this._options));
  }

  /**
   * Retrieve a funding source
   *
   * @remarks
   * Returns detailed information for a specific funding source, including its type, status, and verification details. Supports bank accounts (via Open Banking) and Dwolla balance (verified customers only).
   */
  async get(
    request: operations.GetFundingSourceRequest,
    options?: RequestOptions,
  ): Promise<models.FundingSource> {
    return unwrapAsync(fundingSourcesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update or remove a funding source
   *
   * @remarks
   * Updates a bank funding source's details or soft deletes it. When updating, you can change the name (any status) or modify routing/account numbers and account type (unverified status only). When removing, the funding source is soft deleted and can still be accessed but marked as removed.
   */
  async updateOrRemove(
    request: operations.UpdateOrRemoveFundingSourceRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateOrRemoveFundingSourceResponse> {
    return unwrapAsync(fundingSourcesUpdateOrRemove(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve VAN account and routing numbers
   *
   * @remarks
   * Returns the unique account and routing numbers for a Virtual Account Number (VAN) funding source. These numbers can be used by external systems to initiate ACH transactions that pull funds from or push funds to the associated Dwolla balance.
   */
  async getVanRouting(
    request: operations.GetVanRoutingRequest,
    options?: RequestOptions,
  ): Promise<operations.GetVanRoutingResponse> {
    return unwrapAsync(fundingSourcesGetVanRouting(
      this,
      request,
      options,
    ));
  }
}
