/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { exchangesCreateReAuth } from "../funcs/exchangesCreateReAuth.js";
import { exchangesGet } from "../funcs/exchangesGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Exchanges extends ClientSDK {
  /**
   * Retrieve exchange resource
   *
   * @remarks
   * Retrieve an exchange resource by its ID.
   */
  async get(
    request: operations.GetExchangeRequest,
    options?: RequestOptions,
  ): Promise<models.Exchange> {
    return unwrapAsync(exchangesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Create re-authentication exchange session
   *
   * @remarks
   * Create a new re-authentication exchange session.
   *
   * Request body requirements vary by exchange type:
   * - For Visa: Request body with redirect URL is required
   * - For Plaid Web: No request body is required
   * - For Plaid Mobile: Request body with redirect URL is required
   *
   * The redirect URL will be validated against previously configured URLs stored in Dwolla.
   * After completing the re-authorization process, the user will be redirected back to your application using this URL.
   */
  async createReAuth(
    request: operations.CreateReAuthExchangeSessionRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateReAuthExchangeSessionResponse | undefined> {
    return unwrapAsync(exchangesCreateReAuth(
      this,
      request,
      options,
    ));
  }
}
